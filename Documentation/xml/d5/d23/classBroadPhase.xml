<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="d5/d23/classBroadPhase" kind="class" prot="public" abstract="yes">
    <compoundname>BroadPhase</compoundname>
    <derivedcompoundref refid="d6/d34/classSweepAndPrune" prot="public" virt="non-virtual">SweepAndPrune</derivedcompoundref>
    <includes refid="da/d8f/BroadPhase_8h" local="no">BroadPhase.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d5/d23/classBroadPhase_1a1d3c7e1248be1558fb27794457885760" prot="protected" static="no" mutable="no">
        <type><ref refid="dd/d9d/classPairManager" kindref="compound">PairManager</ref> *</type>
        <definition>PairManager* m_pPairManager</definition>
        <argsstring></argsstring>
        <name>m_pPairManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/BroadPhase.h" line="60" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/BroadPhase.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d5/d23/classBroadPhase_1ae3cddba855efc9f9c2fbf984c290207a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BroadPhase</definition>
        <argsstring>(PairListener *pPairListener)</argsstring>
        <name>BroadPhase</name>
        <param>
          <type><ref refid="da/d24/classPairListener" kindref="compound">PairListener</ref> *</type>
          <declname>pPairListener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/BroadPhase.h" line="39"/>
      </memberdef>
      <memberdef kind="function" id="d5/d23/classBroadPhase_1ac18f52e5efc04622ab963a530e7da14c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~BroadPhase</definition>
        <argsstring>()</argsstring>
        <name>~BroadPhase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/BroadPhase.h" line="40"/>
      </memberdef>
      <memberdef kind="function" id="d5/d23/classBroadPhase_1aaab3b37444f51589fd59498d99c1c4e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>virtual Bool HasProxy</definition>
        <argsstring>(IslandNode *pNode) const =0</argsstring>
        <name>HasProxy</name>
        <reimplementedby refid="d6/d34/classSweepAndPrune_1a885bbf65e74435713eda1491685e962a">HasProxy</reimplementedby>
        <param>
          <type><ref refid="d4/d8c/classIslandNode" kindref="compound">IslandNode</ref> *</type>
          <declname>pNode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/BroadPhase.h" line="43"/>
      </memberdef>
      <memberdef kind="function" id="d5/d23/classBroadPhase_1a98a57a9143b3047a2119de5af8d64a30" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>virtual Void CreateProxy</definition>
        <argsstring>(IslandNode *pNode, const BVAABox &amp;aabProxy)=0</argsstring>
        <name>CreateProxy</name>
        <reimplementedby refid="d6/d34/classSweepAndPrune_1adf3f4253b0e965e78bbcf28d4538e67d">CreateProxy</reimplementedby>
        <param>
          <type><ref refid="d4/d8c/classIslandNode" kindref="compound">IslandNode</ref> *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type>const <ref refid="dc/d7d/BVAABox_8h_1a74b3a18f58c8e67e4b20257d8a928716" kindref="member">BVAABox</ref> &amp;</type>
          <declname>aabProxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/BroadPhase.h" line="45"/>
      </memberdef>
      <memberdef kind="function" id="d5/d23/classBroadPhase_1af8f4c25f313200f075f649751efd6ecf" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>virtual Void DestroyProxy</definition>
        <argsstring>(IslandNode *pNode)=0</argsstring>
        <name>DestroyProxy</name>
        <reimplementedby refid="d6/d34/classSweepAndPrune_1a35125422df039526c9edf0cebf4c0ead">DestroyProxy</reimplementedby>
        <param>
          <type><ref refid="d4/d8c/classIslandNode" kindref="compound">IslandNode</ref> *</type>
          <declname>pNode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/BroadPhase.h" line="46"/>
      </memberdef>
      <memberdef kind="function" id="d5/d23/classBroadPhase_1aad918546bcbb5f7881f03c1a3ef1b081" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>virtual Void UpdateProxy</definition>
        <argsstring>(IslandNode *pNode, const BVAABox &amp;aabProxy)=0</argsstring>
        <name>UpdateProxy</name>
        <reimplementedby refid="d6/d34/classSweepAndPrune_1a931d2f747d92763dc68d53112bcaf958">UpdateProxy</reimplementedby>
        <param>
          <type><ref refid="d4/d8c/classIslandNode" kindref="compound">IslandNode</ref> *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type>const <ref refid="dc/d7d/BVAABox_8h_1a74b3a18f58c8e67e4b20257d8a928716" kindref="member">BVAABox</ref> &amp;</type>
          <declname>aabProxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/BroadPhase.h" line="48"/>
      </memberdef>
      <memberdef kind="function" id="d5/d23/classBroadPhase_1af1d6fc32e9643f4c6278acf682c6ad51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void Commit</definition>
        <argsstring>()</argsstring>
        <name>Commit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/BroadPhase.h" line="50"/>
      </memberdef>
      <memberdef kind="function" id="d5/d23/classBroadPhase_1a0f4277dd1ee1fce8a62a7a831d4cf2b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void SwitchListener</definition>
        <argsstring>(PairListener *pPairListener)</argsstring>
        <name>SwitchListener</name>
        <param>
          <type><ref refid="da/d24/classPairListener" kindref="compound">PairListener</ref> *</type>
          <declname>pPairListener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/BroadPhase.h" line="53"/>
      </memberdef>
      <memberdef kind="function" id="d5/d23/classBroadPhase_1adc036b2cb9e1ac6c5f594f2785e580ee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool IsPair</definition>
        <argsstring>(IslandNode *pNodeA, IslandNode *pNodeB) const </argsstring>
        <name>IsPair</name>
        <param>
          <type><ref refid="d4/d8c/classIslandNode" kindref="compound">IslandNode</ref> *</type>
          <declname>pNodeA</declname>
        </param>
        <param>
          <type><ref refid="d4/d8c/classIslandNode" kindref="compound">IslandNode</ref> *</type>
          <declname>pNodeB</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/BroadPhase.h" line="56"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="460">
        <label>SweepAndPrune</label>
        <link refid="d6/d34/classSweepAndPrune"/>
        <childnode refid="459" relation="public-inheritance">
        </childnode>
      </node>
      <node id="459">
        <label>BroadPhase</label>
        <link refid="d5/d23/classBroadPhase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="470">
        <label>T</label>
      </node>
      <node id="469">
        <label>RBTreeColor</label>
      </node>
      <node id="467">
        <label>RedBlackNode&lt; T &gt;</label>
        <link refid="da/d9d/structRedBlackNode"/>
        <childnode refid="468" relation="usage">
          <edgelabel>pPrev</edgelabel>
          <edgelabel>pNext</edgelabel>
          <edgelabel>pParent</edgelabel>
          <edgelabel>pChild</edgelabel>
        </childnode>
        <childnode refid="469" relation="usage">
          <edgelabel>iColor</edgelabel>
        </childnode>
        <childnode refid="470" relation="usage">
          <edgelabel>Item</edgelabel>
        </childnode>
      </node>
      <node id="506">
        <label>IslandEdgeID</label>
        <link refid="dd/d41/classIslandEdgeID"/>
        <childnode refid="476" relation="usage">
          <edgelabel>pNodeA</edgelabel>
          <edgelabel>pNodeB</edgelabel>
        </childnode>
      </node>
      <node id="494">
        <label>Mesh</label>
        <link refid="d9/d5e/classMesh"/>
        <childnode refid="495" relation="usage">
          <edgelabel>m_pVF</edgelabel>
        </childnode>
        <childnode refid="471" relation="usage">
          <edgelabel>m_iIndexOffset</edgelabel>
          <edgelabel>m_iVertexOffset</edgelabel>
        </childnode>
        <childnode refid="487" relation="usage">
          <edgelabel>m_bDynamicUpdate</edgelabel>
        </childnode>
        <childnode refid="499" relation="usage">
          <edgelabel>m_pIB</edgelabel>
        </childnode>
        <childnode refid="501" relation="usage">
          <edgelabel>m_pVB</edgelabel>
        </childnode>
      </node>
      <node id="473">
        <label>PairListener</label>
        <link refid="da/d24/classPairListener"/>
      </node>
      <node id="509">
        <label>JacobianConstraint</label>
        <link refid="d2/d61/classJacobianConstraint"/>
        <childnode refid="480" relation="usage">
          <edgelabel>vJAngularA</edgelabel>
          <edgelabel>vJLinearAxis</edgelabel>
          <edgelabel>vJAngularB</edgelabel>
          <edgelabel>vInvIBxJtAngB</edgelabel>
          <edgelabel>vInvIAxJtAngA</edgelabel>
        </childnode>
        <childnode refid="483" relation="usage">
          <edgelabel>fInvDiagJWJtAB</edgelabel>
        </childnode>
      </node>
      <node id="485">
        <label>static const Scalar</label>
      </node>
      <node id="502">
        <label>VertexBufferUsage</label>
      </node>
      <node id="479">
        <label>BodyNode</label>
        <link refid="de/df0/classBodyNode"/>
        <childnode refid="476" relation="public-inheritance">
        </childnode>
        <childnode refid="480" relation="usage">
          <edgelabel>m_vTorqueBuffer</edgelabel>
          <edgelabel>m_vLinearCorrectionBuffer</edgelabel>
          <edgelabel>m_vForceBuffer</edgelabel>
          <edgelabel>m_vAngularCorrectionBuffer</edgelabel>
          <edgelabel>m_vLinearImpulseBuffer</edgelabel>
          <edgelabel>m_vAngularSpeed</edgelabel>
          <edgelabel>m_vLinearSpeed</edgelabel>
          <edgelabel>m_vAngularImpulseBuffer</edgelabel>
        </childnode>
        <childnode refid="482" relation="usage">
          <edgelabel>m_matInvInertiaTensor</edgelabel>
          <edgelabel>m_matInertiaTensor</edgelabel>
          <edgelabel>sm_matInfinity</edgelabel>
        </childnode>
        <childnode refid="483" relation="usage">
          <edgelabel>m_fDensity</edgelabel>
          <edgelabel>m_fMass</edgelabel>
          <edgelabel>m_fAngularDamping</edgelabel>
          <edgelabel>m_fRestitution</edgelabel>
          <edgelabel>m_fFriction</edgelabel>
          <edgelabel>m_fInvMass</edgelabel>
          <edgelabel>m_fLinearDamping</edgelabel>
        </childnode>
        <childnode refid="484" relation="usage">
          <edgelabel>m_qOrientation</edgelabel>
        </childnode>
        <childnode refid="471" relation="usage">
          <edgelabel>m_iSleepTime</edgelabel>
        </childnode>
        <childnode refid="486" relation="usage">
          <edgelabel>m_iCollisionMask</edgelabel>
          <edgelabel>m_iCollisionGroup</edgelabel>
        </childnode>
        <childnode refid="487" relation="usage">
          <edgelabel>m_bSensor</edgelabel>
          <edgelabel>m_bSleeping</edgelabel>
          <edgelabel>m_bStatic</edgelabel>
        </childnode>
        <childnode refid="488" relation="usage">
          <edgelabel>m_vTransform</edgelabel>
        </childnode>
        <childnode refid="490" relation="usage">
          <edgelabel>m_vCenterOfMass</edgelabel>
          <edgelabel>m_vPosition</edgelabel>
        </childnode>
        <childnode refid="491" relation="usage">
          <edgelabel>m_pLocalShape</edgelabel>
        </childnode>
        <childnode refid="503" relation="usage">
          <edgelabel>m_pWorldShape</edgelabel>
        </childnode>
      </node>
      <node id="482">
        <label>TMatrix3&lt; Scalar &gt;</label>
        <link refid="d7/dee/classTMatrix3"/>
        <childnode refid="482" relation="usage">
          <edgelabel>Identity</edgelabel>
          <edgelabel>Null</edgelabel>
        </childnode>
        <childnode refid="483" relation="usage">
          <edgelabel>ONE</edgelabel>
          <edgelabel>m20</edgelabel>
          <edgelabel>m21</edgelabel>
          <edgelabel>m10</edgelabel>
          <edgelabel>m22</edgelabel>
          <edgelabel>m11</edgelabel>
          <edgelabel>m00</edgelabel>
          <edgelabel>TWO</edgelabel>
          <edgelabel>m12</edgelabel>
          <edgelabel>m01</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="474">
        <label>Array&lt; BatchedNodePair * &gt;</label>
        <link refid="d0/d26/classArray"/>
        <childnode refid="464" relation="public-inheritance">
        </childnode>
        <childnode refid="475" relation="usage">
          <edgelabel>m_arrBuffer</edgelabel>
        </childnode>
        <childnode refid="471" relation="usage">
          <edgelabel>m_iShrinkFactor</edgelabel>
          <edgelabel>m_iNextFree</edgelabel>
          <edgelabel>m_iBufferSize</edgelabel>
          <edgelabel>m_iPageSize</edgelabel>
        </childnode>
      </node>
      <node id="483">
        <label>float</label>
      </node>
      <node id="486">
        <label>UInt64</label>
      </node>
      <node id="489">
        <label>TMatrix4&lt; Scalar &gt;</label>
        <link refid="d5/d09/classTMatrix4"/>
        <childnode refid="489" relation="usage">
          <edgelabel>Identity</edgelabel>
          <edgelabel>Null</edgelabel>
        </childnode>
        <childnode refid="483" relation="usage">
          <edgelabel>ONE</edgelabel>
          <edgelabel>m30</edgelabel>
          <edgelabel>m31</edgelabel>
          <edgelabel>m20</edgelabel>
          <edgelabel>m32</edgelabel>
          <edgelabel>m21</edgelabel>
          <edgelabel>m10</edgelabel>
          <edgelabel>m33</edgelabel>
          <edgelabel>m22</edgelabel>
          <edgelabel>m11</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="463">
        <label>RedBlackTree&lt; BatchedNodePair &gt;</label>
        <link refid="d9/d5d/classRedBlackTree"/>
        <childnode refid="464" relation="public-inheritance">
        </childnode>
        <childnode refid="467" relation="usage">
          <edgelabel>m_pEnd</edgelabel>
          <edgelabel>m_pHead</edgelabel>
          <edgelabel>m_pRoot</edgelabel>
          <edgelabel>sm_SentinelNode</edgelabel>
          <edgelabel>RBTREE_LEAF</edgelabel>
        </childnode>
        <childnode refid="471" relation="usage">
          <edgelabel>m_iNodeCount</edgelabel>
          <edgelabel>m_pfCompare</edgelabel>
        </childnode>
        <childnode refid="472" relation="usage">
          <edgelabel>m_pUserData</edgelabel>
        </childnode>
      </node>
      <node id="495">
        <label>VertexFormat</label>
        <link refid="da/dc2/classVertexFormat"/>
        <childnode refid="496" relation="usage">
          <edgelabel>m_arrFields</edgelabel>
        </childnode>
        <childnode refid="471" relation="usage">
          <edgelabel>m_iSize</edgelabel>
          <edgelabel>m_iFieldCount</edgelabel>
          <edgelabel>m_arrUsageLUT</edgelabel>
        </childnode>
        <childnode refid="487" relation="usage">
          <edgelabel>m_bFinalized</edgelabel>
        </childnode>
        <childnode refid="466" relation="usage">
          <edgelabel>sm_arrComponentCount</edgelabel>
          <edgelabel>sm_arrTypeSize</edgelabel>
          <edgelabel>sm_arrComponentSize</edgelabel>
        </childnode>
      </node>
      <node id="484">
        <label>TQuaternion&lt; Scalar &gt;</label>
        <link refid="d5/dad/classTQuaternion"/>
        <childnode refid="484" relation="usage">
          <edgelabel>Identity</edgelabel>
          <edgelabel>Null</edgelabel>
        </childnode>
        <childnode refid="485" relation="usage">
          <edgelabel>ONE</edgelabel>
          <edgelabel>TWO</edgelabel>
          <edgelabel>ZERO</edgelabel>
        </childnode>
        <childnode refid="481" relation="usage">
          <edgelabel>W</edgelabel>
          <edgelabel>X</edgelabel>
          <edgelabel>Y</edgelabel>
          <edgelabel>Z</edgelabel>
        </childnode>
      </node>
      <node id="496">
        <label>VFField</label>
        <link refid="de/d92/structVFField"/>
        <childnode refid="497" relation="usage">
          <edgelabel>iUsage</edgelabel>
        </childnode>
        <childnode refid="471" relation="usage">
          <edgelabel>iSize</edgelabel>
          <edgelabel>iUsageIndex</edgelabel>
          <edgelabel>iOffset</edgelabel>
        </childnode>
        <childnode refid="498" relation="usage">
          <edgelabel>iType</edgelabel>
        </childnode>
      </node>
      <node id="466">
        <label>unsigned int</label>
      </node>
      <node id="478">
        <label>unsigned char</label>
      </node>
      <node id="468">
        <label>struct _red_black_node *</label>
      </node>
      <node id="503">
        <label>TransformedShape</label>
        <link refid="d2/d1b/classTransformedShape"/>
        <childnode refid="492" relation="usage">
          <edgelabel>m_bvWorldAAB</edgelabel>
        </childnode>
        <childnode refid="488" relation="usage">
          <edgelabel>m_vTransform</edgelabel>
        </childnode>
        <childnode refid="491" relation="usage">
          <edgelabel>m_pShape</edgelabel>
        </childnode>
      </node>
      <node id="471">
        <label>int</label>
      </node>
      <node id="492">
        <label>TBVAABox&lt; Scalar &gt;</label>
        <link refid="d9/d90/classTBVAABox"/>
        <childnode refid="493" relation="public-inheritance">
        </childnode>
        <childnode refid="480" relation="usage">
          <edgelabel>m_vExtents</edgelabel>
        </childnode>
        <childnode refid="490" relation="usage">
          <edgelabel>m_vCenter</edgelabel>
        </childnode>
      </node>
      <node id="512">
        <label>ContactManifold</label>
        <link refid="d2/d6f/classContactManifold"/>
      </node>
      <node id="475">
        <label>BatchedNodePair</label>
        <link refid="da/d5a/structBatchedNodePair"/>
        <childnode refid="476" relation="usage">
          <edgelabel>pNodeA</edgelabel>
          <edgelabel>pNodeB</edgelabel>
        </childnode>
        <childnode refid="514" relation="usage">
          <edgelabel>iFlags</edgelabel>
        </childnode>
      </node>
      <node id="481">
        <label>Scalar</label>
      </node>
      <node id="504">
        <label>JointEdge</label>
        <link refid="df/d01/classJointEdge"/>
        <childnode refid="505" relation="public-inheritance">
        </childnode>
        <childnode refid="507" relation="usage">
          <edgelabel>m_pConstraint</edgelabel>
        </childnode>
      </node>
      <node id="498">
        <label>VFFieldType</label>
      </node>
      <node id="510">
        <label>RigidBody</label>
        <link refid="d6/d88/classRigidBody"/>
        <childnode refid="479" relation="public-inheritance">
        </childnode>
      </node>
      <node id="500">
        <label>IndexBufferUsage</label>
      </node>
      <node id="488">
        <label>TTransform3&lt; Scalar &gt;</label>
        <link refid="d0/d75/classTTransform3"/>
        <childnode refid="480" relation="usage">
          <edgelabel>m_vScale</edgelabel>
          <edgelabel>m_vInvScale</edgelabel>
          <edgelabel>m_vInvTranslate</edgelabel>
          <edgelabel>m_vTranslate</edgelabel>
        </childnode>
        <childnode refid="489" relation="usage">
          <edgelabel>m_matHMatrix</edgelabel>
        </childnode>
        <childnode refid="482" relation="usage">
          <edgelabel>m_matInvTransform</edgelabel>
          <edgelabel>m_matTransform</edgelabel>
        </childnode>
        <childnode refid="487" relation="usage">
          <edgelabel>m_bIsUniformScale</edgelabel>
          <edgelabel>m_bIsIdentity</edgelabel>
          <edgelabel>m_bUpdateInverse</edgelabel>
          <edgelabel>m_bIsRotScale</edgelabel>
        </childnode>
        <childnode refid="488" relation="usage">
          <edgelabel>Identity</edgelabel>
        </childnode>
      </node>
      <node id="480">
        <label>TVector3&lt; Scalar &gt;</label>
        <link refid="de/d40/classTVector3"/>
        <childnode refid="480" relation="usage">
          <edgelabel>Null</edgelabel>
          <edgelabel>eI</edgelabel>
          <edgelabel>eJ</edgelabel>
          <edgelabel>eK</edgelabel>
        </childnode>
        <childnode refid="481" relation="usage">
          <edgelabel>X</edgelabel>
          <edgelabel>Y</edgelabel>
          <edgelabel>Z</edgelabel>
        </childnode>
      </node>
      <node id="477">
        <label>Island</label>
        <link refid="d0/dd6/classIsland"/>
        <childnode refid="477" relation="usage">
          <edgelabel>m_pNextInWorld</edgelabel>
          <edgelabel>m_pPrevInWorld</edgelabel>
        </childnode>
        <childnode refid="478" relation="usage">
          <edgelabel>m_iColor</edgelabel>
        </childnode>
        <childnode refid="479" relation="usage">
          <edgelabel>m_pListBodies</edgelabel>
        </childnode>
        <childnode refid="471" relation="usage">
          <edgelabel>m_iContactCount</edgelabel>
          <edgelabel>m_iJointCount</edgelabel>
          <edgelabel>m_iBodyCount</edgelabel>
          <edgelabel>m_iStackLayerCount</edgelabel>
        </childnode>
        <childnode refid="504" relation="usage">
          <edgelabel>m_pListJoints</edgelabel>
        </childnode>
        <childnode refid="511" relation="usage">
          <edgelabel>m_pListContacts</edgelabel>
        </childnode>
      </node>
      <node id="490">
        <label>TVertex3&lt; Scalar &gt;</label>
        <link refid="dc/d75/classTVertex3"/>
        <childnode refid="481" relation="usage">
          <edgelabel>X</edgelabel>
          <edgelabel>Y</edgelabel>
          <edgelabel>Z</edgelabel>
        </childnode>
        <childnode refid="490" relation="usage">
          <edgelabel>Null</edgelabel>
        </childnode>
      </node>
      <node id="491">
        <label>Shape</label>
        <link refid="de/d0a/classShape"/>
        <childnode refid="492" relation="usage">
          <edgelabel>m_bvLocalAAB</edgelabel>
        </childnode>
        <childnode refid="494" relation="usage">
          <edgelabel>m_pMesh</edgelabel>
        </childnode>
      </node>
      <node id="462">
        <label>PairManager</label>
        <link refid="dd/d9d/classPairManager"/>
        <childnode refid="463" relation="usage">
          <edgelabel>m_setPairs</edgelabel>
        </childnode>
        <childnode refid="473" relation="usage">
          <edgelabel>m_pListener</edgelabel>
        </childnode>
        <childnode refid="474" relation="usage">
          <edgelabel>m_arrBatch</edgelabel>
        </childnode>
      </node>
      <node id="511">
        <label>ContactEdge</label>
        <link refid="dc/d79/classContactEdge"/>
        <childnode refid="505" relation="public-inheritance">
        </childnode>
        <childnode refid="512" relation="usage">
          <edgelabel>m_pContactManifold</edgelabel>
        </childnode>
        <childnode refid="513" relation="usage">
          <edgelabel>m_pNarrowPhase</edgelabel>
        </childnode>
      </node>
      <node id="505">
        <label>IslandEdge</label>
        <link refid="da/d63/classIslandEdge"/>
        <childnode refid="506" relation="usage">
          <edgelabel>m_idEdge</edgelabel>
        </childnode>
        <childnode refid="477" relation="usage">
          <edgelabel>m_pIsland</edgelabel>
        </childnode>
        <childnode refid="478" relation="usage">
          <edgelabel>m_iColor</edgelabel>
        </childnode>
        <childnode refid="476" relation="usage">
          <edgelabel>m_pNodeA</edgelabel>
          <edgelabel>m_pNodeB</edgelabel>
        </childnode>
        <childnode refid="471" relation="usage">
          <edgelabel>m_iStackLayer</edgelabel>
        </childnode>
        <childnode refid="505" relation="usage">
          <edgelabel>m_pNextInWorld</edgelabel>
          <edgelabel>m_pNextInIsland</edgelabel>
          <edgelabel>m_pPrevInNodeA</edgelabel>
          <edgelabel>m_pNextInNodeA</edgelabel>
          <edgelabel>m_pPrevInNodeB</edgelabel>
          <edgelabel>m_pNextInNodeB</edgelabel>
          <edgelabel>m_pPrevInWorld</edgelabel>
          <edgelabel>m_pPrevInIsland</edgelabel>
        </childnode>
      </node>
      <node id="497">
        <label>VFFieldUsage</label>
      </node>
      <node id="501">
        <label>VertexBuffer</label>
        <link refid="d7/d72/classVertexBuffer"/>
        <childnode refid="478" relation="usage">
          <edgelabel>m_arrVertices</edgelabel>
        </childnode>
        <childnode refid="471" relation="usage">
          <edgelabel>m_iSize</edgelabel>
          <edgelabel>m_iVertexCount</edgelabel>
          <edgelabel>m_iVertexSize</edgelabel>
        </childnode>
        <childnode refid="502" relation="usage">
          <edgelabel>m_iUsage</edgelabel>
        </childnode>
      </node>
      <node id="461">
        <label>BroadPhase</label>
        <link refid="d5/d23/classBroadPhase"/>
        <childnode refid="462" relation="usage">
          <edgelabel>m_pPairManager</edgelabel>
        </childnode>
      </node>
      <node id="487">
        <label>bool</label>
      </node>
      <node id="507">
        <label>Constraint</label>
        <link refid="d8/dcd/classConstraint"/>
        <childnode refid="508" relation="usage">
          <edgelabel>m_arrRows</edgelabel>
        </childnode>
        <childnode refid="471" relation="usage">
          <edgelabel>m_iRowCount</edgelabel>
        </childnode>
        <childnode refid="510" relation="usage">
          <edgelabel>m_pRigidBodyA</edgelabel>
          <edgelabel>m_pRigidBodyB</edgelabel>
        </childnode>
      </node>
      <node id="493">
        <label>TBoundingVolume&lt; Scalar &gt;</label>
        <link refid="d6/d19/classTBoundingVolume"/>
      </node>
      <node id="465">
        <label>char</label>
      </node>
      <node id="513">
        <label>NarrowPhase</label>
        <link refid="dd/d93/classNarrowPhase"/>
        <childnode refid="483" relation="usage">
          <edgelabel>ZeroTolerance</edgelabel>
        </childnode>
        <childnode refid="512" relation="usage">
          <edgelabel>m_pCollisionManifold</edgelabel>
        </childnode>
        <childnode refid="503" relation="usage">
          <edgelabel>m_pShapeA</edgelabel>
          <edgelabel>m_pShapeB</edgelabel>
        </childnode>
      </node>
      <node id="514">
        <label>DWord</label>
      </node>
      <node id="472">
        <label>Void *</label>
      </node>
      <node id="499">
        <label>IndexBuffer</label>
        <link refid="dd/df7/classIndexBuffer"/>
        <childnode refid="478" relation="usage">
          <edgelabel>m_arrIndices</edgelabel>
        </childnode>
        <childnode refid="471" relation="usage">
          <edgelabel>m_iIndexSize</edgelabel>
          <edgelabel>m_iSize</edgelabel>
          <edgelabel>m_iIndexCount</edgelabel>
        </childnode>
        <childnode refid="500" relation="usage">
          <edgelabel>m_iUsage</edgelabel>
        </childnode>
      </node>
      <node id="508">
        <label>ConstraintRow</label>
        <link refid="dd/d74/structConstraintRow"/>
        <childnode refid="509" relation="usage">
          <edgelabel>constrJacobian</edgelabel>
        </childnode>
        <childnode refid="483" relation="usage">
          <edgelabel>fUpperLimit</edgelabel>
          <edgelabel>fLowerLimit</edgelabel>
          <edgelabel>fError</edgelabel>
          <edgelabel>fCFM</edgelabel>
          <edgelabel>fImpulse</edgelabel>
        </childnode>
      </node>
      <node id="464">
        <label>Datastruct</label>
        <link refid="dc/d51/classDatastruct"/>
        <childnode refid="465" relation="usage">
          <edgelabel>m_strAllocatorName</edgelabel>
        </childnode>
        <childnode refid="466" relation="usage">
          <edgelabel>m_idMemoryContext</edgelabel>
        </childnode>
      </node>
      <node id="476">
        <label>IslandNode</label>
        <link refid="d4/d8c/classIslandNode"/>
        <childnode refid="477" relation="usage">
          <edgelabel>m_pIsland</edgelabel>
        </childnode>
        <childnode refid="476" relation="usage">
          <edgelabel>m_pNextInWorld</edgelabel>
          <edgelabel>m_pNextInIsland</edgelabel>
          <edgelabel>m_pPrevInWorld</edgelabel>
          <edgelabel>m_pPrevInIsland</edgelabel>
        </childnode>
        <childnode refid="471" relation="usage">
          <edgelabel>m_iContactCount</edgelabel>
          <edgelabel>m_iJointCount</edgelabel>
          <edgelabel>m_iStackLayer</edgelabel>
          <edgelabel>m_iIslandRefCount</edgelabel>
        </childnode>
        <childnode refid="487" relation="usage">
          <edgelabel>m_bFixed</edgelabel>
        </childnode>
        <childnode refid="504" relation="usage">
          <edgelabel>m_pListJoints</edgelabel>
        </childnode>
        <childnode refid="511" relation="usage">
          <edgelabel>m_pListContacts</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/BroadPhase.h" line="37" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/BroadPhase.h" bodystart="36" bodyend="61"/>
    <listofallmembers>
      <member refid="d5/d23/classBroadPhase_1ae3cddba855efc9f9c2fbf984c290207a" prot="public" virt="non-virtual"><scope>BroadPhase</scope><name>BroadPhase</name></member>
      <member refid="d5/d23/classBroadPhase_1af1d6fc32e9643f4c6278acf682c6ad51" prot="public" virt="non-virtual"><scope>BroadPhase</scope><name>Commit</name></member>
      <member refid="d5/d23/classBroadPhase_1a98a57a9143b3047a2119de5af8d64a30" prot="public" virt="pure-virtual"><scope>BroadPhase</scope><name>CreateProxy</name></member>
      <member refid="d5/d23/classBroadPhase_1af8f4c25f313200f075f649751efd6ecf" prot="public" virt="pure-virtual"><scope>BroadPhase</scope><name>DestroyProxy</name></member>
      <member refid="d5/d23/classBroadPhase_1aaab3b37444f51589fd59498d99c1c4e7" prot="public" virt="pure-virtual"><scope>BroadPhase</scope><name>HasProxy</name></member>
      <member refid="d5/d23/classBroadPhase_1adc036b2cb9e1ac6c5f594f2785e580ee" prot="public" virt="non-virtual"><scope>BroadPhase</scope><name>IsPair</name></member>
      <member refid="d5/d23/classBroadPhase_1a1d3c7e1248be1558fb27794457885760" prot="protected" virt="non-virtual"><scope>BroadPhase</scope><name>m_pPairManager</name></member>
      <member refid="d5/d23/classBroadPhase_1a0f4277dd1ee1fce8a62a7a831d4cf2b1" prot="public" virt="non-virtual"><scope>BroadPhase</scope><name>SwitchListener</name></member>
      <member refid="d5/d23/classBroadPhase_1aad918546bcbb5f7881f03c1a3ef1b081" prot="public" virt="pure-virtual"><scope>BroadPhase</scope><name>UpdateProxy</name></member>
      <member refid="d5/d23/classBroadPhase_1ac18f52e5efc04622ab963a530e7da14c" prot="public" virt="virtual"><scope>BroadPhase</scope><name>~BroadPhase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
