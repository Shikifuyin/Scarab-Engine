<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="d6/d34/classSweepAndPrune" kind="class" prot="public">
    <compoundname>SweepAndPrune</compoundname>
    <basecompoundref refid="d5/d23/classBroadPhase" prot="public" virt="non-virtual">BroadPhase</basecompoundref>
    <includes refid="dc/dba/SweepAndPrune_8h" local="no">SweepAndPrune.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="d6/d34/classSweepAndPrune_1ae76ca09a7425202fa0816a86a683b8c5" prot="private" static="no">
        <type><ref refid="d0/da4/classTreeMap" kindref="compound">TreeMap</ref>&lt; <ref refid="dc/dba/SweepAndPrune_8h_1af80c99defba23011cd0891bf6ac4cb40" kindref="member">SAPProxyID</ref>, <ref refid="d0/dd1/structSAPProxy" kindref="compound">SAPProxy</ref> &gt;</type>
        <definition>typedef TreeMap&lt;SAPProxyID, SAPProxy&gt; ProxyMap</definition>
        <argsstring></argsstring>
        <name>ProxyMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="158" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d6/d34/classSweepAndPrune_1a37aecd4f34b88dcb58b4f4578224b727" prot="private" static="no" mutable="no">
        <type><ref refid="d6/d34/classSweepAndPrune_1ae76ca09a7425202fa0816a86a683b8c5" kindref="member">ProxyMap</ref></type>
        <definition>ProxyMap m_mapProxies</definition>
        <argsstring></argsstring>
        <name>m_mapProxies</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="159" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d34/classSweepAndPrune_1a16a2588e29feb09fd7acff030551fd21" prot="private" static="no" mutable="no">
        <type><ref refid="d0/d26/classArray" kindref="compound">Array</ref>&lt; <ref refid="d3/de1/structSAPInterval" kindref="compound">SAPInterval</ref> * &gt;</type>
        <definition>Array&lt;SAPInterval*&gt; m_arrIntervals[SAP_DIMENSION]</definition>
        <argsstring>[SAP_DIMENSION]</argsstring>
        <name>m_arrIntervals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="162" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1a52a535997967c7710083c4745bd0f3f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SweepAndPrune</definition>
        <argsstring>(PairListener *pPairListener)</argsstring>
        <name>SweepAndPrune</name>
        <param>
          <type><ref refid="da/d24/classPairListener" kindref="compound">PairListener</ref> *</type>
          <declname>pPairListener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="103"/>
      </memberdef>
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1ab76940f034dcd202996319a702d7b96d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~SweepAndPrune</definition>
        <argsstring>()</argsstring>
        <name>~SweepAndPrune</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="104"/>
      </memberdef>
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1a885bbf65e74435713eda1491685e962a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>virtual Bool HasProxy</definition>
        <argsstring>(IslandNode *pNode) const </argsstring>
        <name>HasProxy</name>
        <reimplements refid="d5/d23/classBroadPhase_1aaab3b37444f51589fd59498d99c1c4e7">HasProxy</reimplements>
        <param>
          <type><ref refid="d4/d8c/classIslandNode" kindref="compound">IslandNode</ref> *</type>
          <declname>pNode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="107"/>
      </memberdef>
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1adf3f4253b0e965e78bbcf28d4538e67d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>virtual Void CreateProxy</definition>
        <argsstring>(IslandNode *pNode, const BVAABox &amp;aabProxy)</argsstring>
        <name>CreateProxy</name>
        <reimplements refid="d5/d23/classBroadPhase_1a98a57a9143b3047a2119de5af8d64a30">CreateProxy</reimplements>
        <param>
          <type><ref refid="d4/d8c/classIslandNode" kindref="compound">IslandNode</ref> *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type>const <ref refid="dc/d7d/BVAABox_8h_1a74b3a18f58c8e67e4b20257d8a928716" kindref="member">BVAABox</ref> &amp;</type>
          <declname>aabProxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="109"/>
      </memberdef>
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1a35125422df039526c9edf0cebf4c0ead" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>virtual Void DestroyProxy</definition>
        <argsstring>(IslandNode *pNode)</argsstring>
        <name>DestroyProxy</name>
        <reimplements refid="d5/d23/classBroadPhase_1af8f4c25f313200f075f649751efd6ecf">DestroyProxy</reimplements>
        <param>
          <type><ref refid="d4/d8c/classIslandNode" kindref="compound">IslandNode</ref> *</type>
          <declname>pNode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="110"/>
      </memberdef>
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1a931d2f747d92763dc68d53112bcaf958" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>virtual Void UpdateProxy</definition>
        <argsstring>(IslandNode *pNode, const BVAABox &amp;aabProxy)</argsstring>
        <name>UpdateProxy</name>
        <reimplements refid="d5/d23/classBroadPhase_1aad918546bcbb5f7881f03c1a3ef1b081">UpdateProxy</reimplements>
        <param>
          <type><ref refid="d4/d8c/classIslandNode" kindref="compound">IslandNode</ref> *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type>const <ref refid="dc/d7d/BVAABox_8h_1a74b3a18f58c8e67e4b20257d8a928716" kindref="member">BVAABox</ref> &amp;</type>
          <declname>aabProxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="112"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1a36e24b7c9c9370a607a0489bfbea3c44" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af76d45792ece002e4437192e25760677" kindref="member">DWord</ref></type>
        <definition>static DWord _EncodeScalar</definition>
        <argsstring>(Scalar fBoundValue)</argsstring>
        <name>_EncodeScalar</name>
        <param>
          <type><ref refid="d0/d10/Scalar_8h_1abee0aca51a3a3e16c628155aa4ac6f12" kindref="member">Scalar</ref></type>
          <declname>fBoundValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="116"/>
      </memberdef>
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1ab2ae7ab929152a8a6ffe2788128b2cf5" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d10/Scalar_8h_1abee0aca51a3a3e16c628155aa4ac6f12" kindref="member">Scalar</ref></type>
        <definition>static Scalar _DecodeScalar</definition>
        <argsstring>(DWord dwBoundValue)</argsstring>
        <name>_DecodeScalar</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1af76d45792ece002e4437192e25760677" kindref="member">DWord</ref></type>
          <declname>dwBoundValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="117"/>
      </memberdef>
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1a2a548d348c724aeec3cffc06996adc97" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>static Void _ExtractBoundValues</definition>
        <argsstring>(SAPBoundValues *outBoundValues, const BVAABox &amp;aabProxy)</argsstring>
        <name>_ExtractBoundValues</name>
        <param>
          <type><ref refid="d9/d3a/structSAPBoundValues" kindref="compound">SAPBoundValues</ref> *</type>
          <declname>outBoundValues</declname>
        </param>
        <param>
          <type>const <ref refid="dc/d7d/BVAABox_8h_1a74b3a18f58c8e67e4b20257d8a928716" kindref="member">BVAABox</ref> &amp;</type>
          <declname>aabProxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="119"/>
      </memberdef>
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1ac5eb8a30cfc07056d83d87050f62c489" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>static Bool _OverlapTest</definition>
        <argsstring>(const SAPBoundValues &amp;leftAAB, const SAPBoundValues &amp;rightAAB)</argsstring>
        <name>_OverlapTest</name>
        <param>
          <type>const <ref refid="d9/d3a/structSAPBoundValues" kindref="compound">SAPBoundValues</ref> &amp;</type>
          <declname>leftAAB</declname>
        </param>
        <param>
          <type>const <ref refid="d9/d3a/structSAPBoundValues" kindref="compound">SAPBoundValues</ref> &amp;</type>
          <declname>rightAAB</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="122"/>
      </memberdef>
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1a91834fb782644ea398976b600ebe1c30" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1a7cc214a236ad3bb6ad435bdcf5262a3f" kindref="member">Int</ref></type>
        <definition>static Int _Compare_ProxyIDs</definition>
        <argsstring>(const SAPProxyID &amp;idLeft, const SAPProxyID &amp;idRight, Void *pUserData)</argsstring>
        <name>_Compare_ProxyIDs</name>
        <param>
          <type>const <ref refid="dc/dba/SweepAndPrune_8h_1af80c99defba23011cd0891bf6ac4cb40" kindref="member">SAPProxyID</ref> &amp;</type>
          <declname>idLeft</declname>
        </param>
        <param>
          <type>const <ref refid="dc/dba/SweepAndPrune_8h_1af80c99defba23011cd0891bf6ac4cb40" kindref="member">SAPProxyID</ref> &amp;</type>
          <declname>idRight</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref> *</type>
          <declname>pUserData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="124"/>
      </memberdef>
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1a1862ce8eac82aad3e7fe30a36169ce95" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/dba/SweepAndPrune_8h_1af80c99defba23011cd0891bf6ac4cb40" kindref="member">SAPProxyID</ref></type>
        <definition>static SAPProxyID _GetProxyID</definition>
        <argsstring>(IslandNode *pNode)</argsstring>
        <name>_GetProxyID</name>
        <param>
          <type><ref refid="d4/d8c/classIslandNode" kindref="compound">IslandNode</ref> *</type>
          <declname>pNode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="125"/>
      </memberdef>
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1a86e775196e134ede04cd77706cf9cab8" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/de1/structSAPInterval" kindref="compound">SAPInterval</ref> *</type>
        <definition>static SAPInterval* _AllocateInterval</definition>
        <argsstring>(Bool bCheckProxies)</argsstring>
        <name>_AllocateInterval</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
          <declname>bCheckProxies</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="131"/>
      </memberdef>
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1af193697e7c3afc04c044e8272f019ac7" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>static Void _FreeInterval</definition>
        <argsstring>(SAPInterval *pInterval, Bool bCheckProxies)</argsstring>
        <name>_FreeInterval</name>
        <param>
          <type><ref refid="d3/de1/structSAPInterval" kindref="compound">SAPInterval</ref> *</type>
          <declname>pInterval</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
          <declname>bCheckProxies</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="132"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1ad996e4cf4ac0cbcde7aeb42b3c0257ea" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _ExtractBoundValues</definition>
        <argsstring>(SAPBoundValues *outBoundValues, const SAPProxy *pProxy) const </argsstring>
        <name>_ExtractBoundValues</name>
        <param>
          <type><ref refid="d9/d3a/structSAPBoundValues" kindref="compound">SAPBoundValues</ref> *</type>
          <declname>outBoundValues</declname>
        </param>
        <param>
          <type>const <ref refid="d0/dd1/structSAPProxy" kindref="compound">SAPProxy</ref> *</type>
          <declname>pProxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="120"/>
      </memberdef>
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1a59e689b76025af2c22fac360dbd739b8" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/dd1/structSAPProxy" kindref="compound">SAPProxy</ref> *</type>
        <definition>SAPProxy* _GetProxy</definition>
        <argsstring>(SAPProxyID idProxy) const </argsstring>
        <name>_GetProxy</name>
        <param>
          <type><ref refid="dc/dba/SweepAndPrune_8h_1af80c99defba23011cd0891bf6ac4cb40" kindref="member">SAPProxyID</ref></type>
          <declname>idProxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="127"/>
      </memberdef>
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1a186ceb5c1288e3437f1ab3912ee2ef12" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d0/dd1/structSAPProxy" kindref="compound">SAPProxy</ref> *</type>
        <definition>SAPProxy* _AllocateProxy</definition>
        <argsstring>(IslandNode *pNode)</argsstring>
        <name>_AllocateProxy</name>
        <param>
          <type><ref refid="d4/d8c/classIslandNode" kindref="compound">IslandNode</ref> *</type>
          <declname>pNode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="128"/>
      </memberdef>
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1af80c0798fb1c9b874941557033327839" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _FreeProxy</definition>
        <argsstring>(SAPProxyID idProxy)</argsstring>
        <name>_FreeProxy</name>
        <param>
          <type><ref refid="dc/dba/SweepAndPrune_8h_1af80c99defba23011cd0891bf6ac4cb40" kindref="member">SAPProxyID</ref></type>
          <declname>idProxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="129"/>
      </memberdef>
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1aa6fbefca6cd51d777fb2751d97edda64" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _SignalPairs</definition>
        <argsstring>(SAPProxy *pCrossedProxy, SAPBound *pCrossedBound, SAPProxy *pMovingProxy, SAPBound *pMovingBound, Bool bLeft, const SAPBoundValues &amp;testValues)</argsstring>
        <name>_SignalPairs</name>
        <param>
          <type><ref refid="d0/dd1/structSAPProxy" kindref="compound">SAPProxy</ref> *</type>
          <declname>pCrossedProxy</declname>
        </param>
        <param>
          <type><ref refid="d2/d1f/structSAPBound" kindref="compound">SAPBound</ref> *</type>
          <declname>pCrossedBound</declname>
        </param>
        <param>
          <type><ref refid="d0/dd1/structSAPProxy" kindref="compound">SAPProxy</ref> *</type>
          <declname>pMovingProxy</declname>
        </param>
        <param>
          <type><ref refid="d2/d1f/structSAPBound" kindref="compound">SAPBound</ref> *</type>
          <declname>pMovingBound</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
          <declname>bLeft</declname>
        </param>
        <param>
          <type>const <ref refid="d9/d3a/structSAPBoundValues" kindref="compound">SAPBoundValues</ref> &amp;</type>
          <declname>testValues</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="137"/>
      </memberdef>
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1a6363892e056b6cc7effdc8e9ace91be8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _OnSimpleSwap</definition>
        <argsstring>(SAPProxy *pCrossedProxy, SAPBound *pCrossedBound, SAPProxy *pMovingProxy, SAPBound *pMovingBound, UInt iDimension, Bool bLeft, const SAPBoundValues &amp;testValues)</argsstring>
        <name>_OnSimpleSwap</name>
        <param>
          <type><ref refid="d0/dd1/structSAPProxy" kindref="compound">SAPProxy</ref> *</type>
          <declname>pCrossedProxy</declname>
        </param>
        <param>
          <type><ref refid="d2/d1f/structSAPBound" kindref="compound">SAPBound</ref> *</type>
          <declname>pCrossedBound</declname>
        </param>
        <param>
          <type><ref refid="d0/dd1/structSAPProxy" kindref="compound">SAPProxy</ref> *</type>
          <declname>pMovingProxy</declname>
        </param>
        <param>
          <type><ref refid="d2/d1f/structSAPBound" kindref="compound">SAPBound</ref> *</type>
          <declname>pMovingBound</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iDimension</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
          <declname>bLeft</declname>
        </param>
        <param>
          <type>const <ref refid="d9/d3a/structSAPBoundValues" kindref="compound">SAPBoundValues</ref> &amp;</type>
          <declname>testValues</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="141"/>
      </memberdef>
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1add54d98c4a178c1f48c4f6ed54140927" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _OnCrossSwap</definition>
        <argsstring>(SAPInterval *pEnterInterval, SAPInterval *pLeaveInterval, SAPProxy *pCrossedProxy, SAPBound *pCrossedBound, SAPProxy *pMovingProxy, SAPBound *pMovingBound, UInt iDimension, Bool bLeft, const SAPBoundValues &amp;testValues)</argsstring>
        <name>_OnCrossSwap</name>
        <param>
          <type><ref refid="d3/de1/structSAPInterval" kindref="compound">SAPInterval</ref> *</type>
          <declname>pEnterInterval</declname>
        </param>
        <param>
          <type><ref refid="d3/de1/structSAPInterval" kindref="compound">SAPInterval</ref> *</type>
          <declname>pLeaveInterval</declname>
        </param>
        <param>
          <type><ref refid="d0/dd1/structSAPProxy" kindref="compound">SAPProxy</ref> *</type>
          <declname>pCrossedProxy</declname>
        </param>
        <param>
          <type><ref refid="d2/d1f/structSAPBound" kindref="compound">SAPBound</ref> *</type>
          <declname>pCrossedBound</declname>
        </param>
        <param>
          <type><ref refid="d0/dd1/structSAPProxy" kindref="compound">SAPProxy</ref> *</type>
          <declname>pMovingProxy</declname>
        </param>
        <param>
          <type><ref refid="d2/d1f/structSAPBound" kindref="compound">SAPBound</ref> *</type>
          <declname>pMovingBound</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iDimension</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
          <declname>bLeft</declname>
        </param>
        <param>
          <type>const <ref refid="d9/d3a/structSAPBoundValues" kindref="compound">SAPBoundValues</ref> &amp;</type>
          <declname>testValues</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="145"/>
      </memberdef>
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1a5ab0c400f8beacdc04f8fe12ff96768c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _PropagateBound</definition>
        <argsstring>(UInt iDimension, UInt iInterval, UInt iBound, SAPProxy *pProxy, Bool bLeft, const SAPBoundValues &amp;testValues, Bool bClipToInterval)</argsstring>
        <name>_PropagateBound</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iDimension</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iInterval</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iBound</declname>
        </param>
        <param>
          <type><ref refid="d0/dd1/structSAPProxy" kindref="compound">SAPProxy</ref> *</type>
          <declname>pProxy</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
          <declname>bLeft</declname>
        </param>
        <param>
          <type>const <ref refid="d9/d3a/structSAPBoundValues" kindref="compound">SAPBoundValues</ref> &amp;</type>
          <declname>testValues</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
          <declname>bClipToInterval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="148"/>
      </memberdef>
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1af121997a9f2df9c91612bd076fbc4849" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
        <definition>UInt _Interval_Lookup</definition>
        <argsstring>(UInt iDimension, DWord dwBoundValue) const </argsstring>
        <name>_Interval_Lookup</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iDimension</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1af76d45792ece002e4437192e25760677" kindref="member">DWord</ref></type>
          <declname>dwBoundValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="151"/>
      </memberdef>
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1aad96cb418a12c0a96fa27508b2661f2f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _Interval_UpdateProxyLinks</definition>
        <argsstring>(UInt iDimension, UInt iInterval, Int iIntervalIncrement, Int iBoundIncrement)</argsstring>
        <name>_Interval_UpdateProxyLinks</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iDimension</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iInterval</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1a7cc214a236ad3bb6ad435bdcf5262a3f" kindref="member">Int</ref></type>
          <declname>iIntervalIncrement</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1a7cc214a236ad3bb6ad435bdcf5262a3f" kindref="member">Int</ref></type>
          <declname>iBoundIncrement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="153"/>
      </memberdef>
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1a22551d6dcbb99c782d5f70cc3f4eab8b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _Interval_Split</definition>
        <argsstring>(UInt iDimension, UInt iInterval)</argsstring>
        <name>_Interval_Split</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iDimension</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iInterval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="154"/>
      </memberdef>
      <memberdef kind="function" id="d6/d34/classSweepAndPrune_1a4e1f6ddca0947981df4f2deb2f685918" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _Interval_Merge</definition>
        <argsstring>(UInt iDimension, UInt iInterval)</argsstring>
        <name>_Interval_Merge</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iDimension</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iInterval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="155"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="12128">
        <label>SweepAndPrune</label>
        <link refid="d6/d34/classSweepAndPrune"/>
        <childnode refid="12129" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12129">
        <label>BroadPhase</label>
        <link refid="d5/d23/classBroadPhase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="12187">
        <label>SAPBound</label>
        <link refid="d2/d1f/structSAPBound"/>
        <childnode refid="12188" relation="usage">
          <edgelabel>dwFlaggedProxyID</edgelabel>
          <edgelabel>dwBoundValue</edgelabel>
        </childnode>
      </node>
      <node id="12140">
        <label>T</label>
      </node>
      <node id="12139">
        <label>RBTreeColor</label>
      </node>
      <node id="12137">
        <label>RedBlackNode&lt; T &gt;</label>
        <link refid="da/d9d/structRedBlackNode"/>
        <childnode refid="12138" relation="usage">
          <edgelabel>pPrev</edgelabel>
          <edgelabel>pNext</edgelabel>
          <edgelabel>pParent</edgelabel>
          <edgelabel>pChild</edgelabel>
        </childnode>
        <childnode refid="12139" relation="usage">
          <edgelabel>iColor</edgelabel>
        </childnode>
        <childnode refid="12140" relation="usage">
          <edgelabel>Item</edgelabel>
        </childnode>
      </node>
      <node id="12191">
        <label>RedBlackTree&lt; TreeMapNode &gt;</label>
        <link refid="d9/d5d/classRedBlackTree"/>
        <childnode refid="12134" relation="public-inheritance">
        </childnode>
        <childnode refid="12137" relation="usage">
          <edgelabel>m_pEnd</edgelabel>
          <edgelabel>m_pHead</edgelabel>
          <edgelabel>m_pRoot</edgelabel>
          <edgelabel>sm_SentinelNode</edgelabel>
          <edgelabel>RBTREE_LEAF</edgelabel>
        </childnode>
        <childnode refid="12136" relation="usage">
          <edgelabel>m_iNodeCount</edgelabel>
        </childnode>
        <childnode refid="12192" relation="usage">
          <edgelabel>m_pfCompare</edgelabel>
        </childnode>
        <childnode refid="12142" relation="usage">
          <edgelabel>m_pUserData</edgelabel>
        </childnode>
      </node>
      <node id="12176">
        <label>IslandEdgeID</label>
        <link refid="dd/d41/classIslandEdgeID"/>
        <childnode refid="12146" relation="usage">
          <edgelabel>pNodeA</edgelabel>
          <edgelabel>pNodeB</edgelabel>
        </childnode>
      </node>
      <node id="12164">
        <label>Mesh</label>
        <link refid="d9/d5e/classMesh"/>
        <childnode refid="12165" relation="usage">
          <edgelabel>m_pVF</edgelabel>
        </childnode>
        <childnode refid="12141" relation="usage">
          <edgelabel>m_iIndexOffset</edgelabel>
          <edgelabel>m_iVertexOffset</edgelabel>
        </childnode>
        <childnode refid="12157" relation="usage">
          <edgelabel>m_bDynamicUpdate</edgelabel>
        </childnode>
        <childnode refid="12169" relation="usage">
          <edgelabel>m_pIB</edgelabel>
        </childnode>
        <childnode refid="12171" relation="usage">
          <edgelabel>m_pVB</edgelabel>
        </childnode>
      </node>
      <node id="12143">
        <label>PairListener</label>
        <link refid="da/d24/classPairListener"/>
      </node>
      <node id="12179">
        <label>JacobianConstraint</label>
        <link refid="d2/d61/classJacobianConstraint"/>
        <childnode refid="12150" relation="usage">
          <edgelabel>vJAngularA</edgelabel>
          <edgelabel>vJLinearAxis</edgelabel>
          <edgelabel>vJAngularB</edgelabel>
          <edgelabel>vInvIBxJtAngB</edgelabel>
          <edgelabel>vInvIAxJtAngA</edgelabel>
        </childnode>
        <childnode refid="12153" relation="usage">
          <edgelabel>fInvDiagJWJtAB</edgelabel>
        </childnode>
      </node>
      <node id="12155">
        <label>static const Scalar</label>
      </node>
      <node id="12172">
        <label>VertexBufferUsage</label>
      </node>
      <node id="12149">
        <label>BodyNode</label>
        <link refid="de/df0/classBodyNode"/>
        <childnode refid="12146" relation="public-inheritance">
        </childnode>
        <childnode refid="12150" relation="usage">
          <edgelabel>m_vTorqueBuffer</edgelabel>
          <edgelabel>m_vLinearCorrectionBuffer</edgelabel>
          <edgelabel>m_vForceBuffer</edgelabel>
          <edgelabel>m_vAngularCorrectionBuffer</edgelabel>
          <edgelabel>m_vLinearImpulseBuffer</edgelabel>
          <edgelabel>m_vAngularSpeed</edgelabel>
          <edgelabel>m_vLinearSpeed</edgelabel>
          <edgelabel>m_vAngularImpulseBuffer</edgelabel>
        </childnode>
        <childnode refid="12152" relation="usage">
          <edgelabel>m_matInvInertiaTensor</edgelabel>
          <edgelabel>m_matInertiaTensor</edgelabel>
          <edgelabel>sm_matInfinity</edgelabel>
        </childnode>
        <childnode refid="12153" relation="usage">
          <edgelabel>m_fDensity</edgelabel>
          <edgelabel>m_fMass</edgelabel>
          <edgelabel>m_fAngularDamping</edgelabel>
          <edgelabel>m_fRestitution</edgelabel>
          <edgelabel>m_fFriction</edgelabel>
          <edgelabel>m_fInvMass</edgelabel>
          <edgelabel>m_fLinearDamping</edgelabel>
        </childnode>
        <childnode refid="12154" relation="usage">
          <edgelabel>m_qOrientation</edgelabel>
        </childnode>
        <childnode refid="12141" relation="usage">
          <edgelabel>m_iSleepTime</edgelabel>
        </childnode>
        <childnode refid="12156" relation="usage">
          <edgelabel>m_iCollisionMask</edgelabel>
          <edgelabel>m_iCollisionGroup</edgelabel>
        </childnode>
        <childnode refid="12157" relation="usage">
          <edgelabel>m_bSensor</edgelabel>
          <edgelabel>m_bSleeping</edgelabel>
          <edgelabel>m_bStatic</edgelabel>
        </childnode>
        <childnode refid="12158" relation="usage">
          <edgelabel>m_vTransform</edgelabel>
        </childnode>
        <childnode refid="12160" relation="usage">
          <edgelabel>m_vCenterOfMass</edgelabel>
          <edgelabel>m_vPosition</edgelabel>
        </childnode>
        <childnode refid="12161" relation="usage">
          <edgelabel>m_pLocalShape</edgelabel>
        </childnode>
        <childnode refid="12173" relation="usage">
          <edgelabel>m_pWorldShape</edgelabel>
        </childnode>
      </node>
      <node id="12152">
        <label>TMatrix3&lt; Scalar &gt;</label>
        <link refid="d7/dee/classTMatrix3"/>
        <childnode refid="12152" relation="usage">
          <edgelabel>Identity</edgelabel>
          <edgelabel>Null</edgelabel>
        </childnode>
        <childnode refid="12153" relation="usage">
          <edgelabel>ONE</edgelabel>
          <edgelabel>m20</edgelabel>
          <edgelabel>m21</edgelabel>
          <edgelabel>m10</edgelabel>
          <edgelabel>m22</edgelabel>
          <edgelabel>m11</edgelabel>
          <edgelabel>m00</edgelabel>
          <edgelabel>TWO</edgelabel>
          <edgelabel>m12</edgelabel>
          <edgelabel>m01</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="12144">
        <label>Array&lt; BatchedNodePair * &gt;</label>
        <link refid="d0/d26/classArray"/>
        <childnode refid="12134" relation="public-inheritance">
        </childnode>
        <childnode refid="12145" relation="usage">
          <edgelabel>m_arrBuffer</edgelabel>
        </childnode>
        <childnode refid="12141" relation="usage">
          <edgelabel>m_iShrinkFactor</edgelabel>
          <edgelabel>m_iNextFree</edgelabel>
          <edgelabel>m_iBufferSize</edgelabel>
          <edgelabel>m_iPageSize</edgelabel>
        </childnode>
      </node>
      <node id="12153">
        <label>float</label>
      </node>
      <node id="12156">
        <label>UInt64</label>
      </node>
      <node id="12159">
        <label>TMatrix4&lt; Scalar &gt;</label>
        <link refid="d5/d09/classTMatrix4"/>
        <childnode refid="12159" relation="usage">
          <edgelabel>Identity</edgelabel>
          <edgelabel>Null</edgelabel>
        </childnode>
        <childnode refid="12153" relation="usage">
          <edgelabel>ONE</edgelabel>
          <edgelabel>m30</edgelabel>
          <edgelabel>m31</edgelabel>
          <edgelabel>m20</edgelabel>
          <edgelabel>m32</edgelabel>
          <edgelabel>m21</edgelabel>
          <edgelabel>m10</edgelabel>
          <edgelabel>m33</edgelabel>
          <edgelabel>m22</edgelabel>
          <edgelabel>m11</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="12133">
        <label>RedBlackTree&lt; BatchedNodePair &gt;</label>
        <link refid="d9/d5d/classRedBlackTree"/>
        <childnode refid="12134" relation="public-inheritance">
        </childnode>
        <childnode refid="12137" relation="usage">
          <edgelabel>m_pEnd</edgelabel>
          <edgelabel>m_pHead</edgelabel>
          <edgelabel>m_pRoot</edgelabel>
          <edgelabel>sm_SentinelNode</edgelabel>
          <edgelabel>RBTREE_LEAF</edgelabel>
        </childnode>
        <childnode refid="12141" relation="usage">
          <edgelabel>m_iNodeCount</edgelabel>
          <edgelabel>m_pfCompare</edgelabel>
        </childnode>
        <childnode refid="12142" relation="usage">
          <edgelabel>m_pUserData</edgelabel>
        </childnode>
      </node>
      <node id="12165">
        <label>VertexFormat</label>
        <link refid="da/dc2/classVertexFormat"/>
        <childnode refid="12166" relation="usage">
          <edgelabel>m_arrFields</edgelabel>
        </childnode>
        <childnode refid="12141" relation="usage">
          <edgelabel>m_iSize</edgelabel>
          <edgelabel>m_iFieldCount</edgelabel>
          <edgelabel>m_arrUsageLUT</edgelabel>
        </childnode>
        <childnode refid="12157" relation="usage">
          <edgelabel>m_bFinalized</edgelabel>
        </childnode>
        <childnode refid="12136" relation="usage">
          <edgelabel>sm_arrComponentCount</edgelabel>
          <edgelabel>sm_arrTypeSize</edgelabel>
          <edgelabel>sm_arrComponentSize</edgelabel>
        </childnode>
      </node>
      <node id="12154">
        <label>TQuaternion&lt; Scalar &gt;</label>
        <link refid="d5/dad/classTQuaternion"/>
        <childnode refid="12154" relation="usage">
          <edgelabel>Identity</edgelabel>
          <edgelabel>Null</edgelabel>
        </childnode>
        <childnode refid="12155" relation="usage">
          <edgelabel>ONE</edgelabel>
          <edgelabel>TWO</edgelabel>
          <edgelabel>ZERO</edgelabel>
        </childnode>
        <childnode refid="12151" relation="usage">
          <edgelabel>W</edgelabel>
          <edgelabel>X</edgelabel>
          <edgelabel>Y</edgelabel>
          <edgelabel>Z</edgelabel>
        </childnode>
      </node>
      <node id="12166">
        <label>VFField</label>
        <link refid="de/d92/structVFField"/>
        <childnode refid="12167" relation="usage">
          <edgelabel>iUsage</edgelabel>
        </childnode>
        <childnode refid="12141" relation="usage">
          <edgelabel>iSize</edgelabel>
          <edgelabel>iUsageIndex</edgelabel>
          <edgelabel>iOffset</edgelabel>
        </childnode>
        <childnode refid="12168" relation="usage">
          <edgelabel>iType</edgelabel>
        </childnode>
      </node>
      <node id="12188">
        <label>ULong</label>
      </node>
      <node id="12136">
        <label>unsigned int</label>
      </node>
      <node id="12148">
        <label>unsigned char</label>
      </node>
      <node id="12189">
        <label>RedBlackTree&lt; SAPProxyID &gt;</label>
        <link refid="d9/d5d/classRedBlackTree"/>
        <childnode refid="12134" relation="public-inheritance">
        </childnode>
        <childnode refid="12137" relation="usage">
          <edgelabel>m_pEnd</edgelabel>
          <edgelabel>m_pHead</edgelabel>
          <edgelabel>m_pRoot</edgelabel>
          <edgelabel>sm_SentinelNode</edgelabel>
          <edgelabel>RBTREE_LEAF</edgelabel>
        </childnode>
        <childnode refid="12141" relation="usage">
          <edgelabel>m_iNodeCount</edgelabel>
          <edgelabel>m_pfCompare</edgelabel>
        </childnode>
        <childnode refid="12142" relation="usage">
          <edgelabel>m_pUserData</edgelabel>
        </childnode>
      </node>
      <node id="12138">
        <label>struct _red_black_node *</label>
      </node>
      <node id="12173">
        <label>TransformedShape</label>
        <link refid="d2/d1b/classTransformedShape"/>
        <childnode refid="12162" relation="usage">
          <edgelabel>m_bvWorldAAB</edgelabel>
        </childnode>
        <childnode refid="12158" relation="usage">
          <edgelabel>m_vTransform</edgelabel>
        </childnode>
        <childnode refid="12161" relation="usage">
          <edgelabel>m_pShape</edgelabel>
        </childnode>
      </node>
      <node id="12141">
        <label>int</label>
      </node>
      <node id="12162">
        <label>TBVAABox&lt; Scalar &gt;</label>
        <link refid="d9/d90/classTBVAABox"/>
        <childnode refid="12163" relation="public-inheritance">
        </childnode>
        <childnode refid="12150" relation="usage">
          <edgelabel>m_vExtents</edgelabel>
        </childnode>
        <childnode refid="12160" relation="usage">
          <edgelabel>m_vCenter</edgelabel>
        </childnode>
      </node>
      <node id="12182">
        <label>ContactManifold</label>
        <link refid="d2/d6f/classContactManifold"/>
      </node>
      <node id="12145">
        <label>BatchedNodePair</label>
        <link refid="da/d5a/structBatchedNodePair"/>
        <childnode refid="12146" relation="usage">
          <edgelabel>pNodeA</edgelabel>
          <edgelabel>pNodeB</edgelabel>
        </childnode>
        <childnode refid="12184" relation="usage">
          <edgelabel>iFlags</edgelabel>
        </childnode>
      </node>
      <node id="12151">
        <label>Scalar</label>
      </node>
      <node id="12174">
        <label>JointEdge</label>
        <link refid="df/d01/classJointEdge"/>
        <childnode refid="12175" relation="public-inheritance">
        </childnode>
        <childnode refid="12177" relation="usage">
          <edgelabel>m_pConstraint</edgelabel>
        </childnode>
      </node>
      <node id="12168">
        <label>VFFieldType</label>
      </node>
      <node id="12180">
        <label>RigidBody</label>
        <link refid="d6/d88/classRigidBody"/>
        <childnode refid="12149" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12185">
        <label>Array&lt; SAPInterval * &gt;</label>
        <link refid="d0/d26/classArray"/>
        <childnode refid="12134" relation="public-inheritance">
        </childnode>
        <childnode refid="12186" relation="usage">
          <edgelabel>m_arrBuffer</edgelabel>
        </childnode>
        <childnode refid="12141" relation="usage">
          <edgelabel>m_iShrinkFactor</edgelabel>
          <edgelabel>m_iNextFree</edgelabel>
          <edgelabel>m_iBufferSize</edgelabel>
          <edgelabel>m_iPageSize</edgelabel>
        </childnode>
      </node>
      <node id="12170">
        <label>IndexBufferUsage</label>
      </node>
      <node id="12158">
        <label>TTransform3&lt; Scalar &gt;</label>
        <link refid="d0/d75/classTTransform3"/>
        <childnode refid="12150" relation="usage">
          <edgelabel>m_vScale</edgelabel>
          <edgelabel>m_vInvScale</edgelabel>
          <edgelabel>m_vInvTranslate</edgelabel>
          <edgelabel>m_vTranslate</edgelabel>
        </childnode>
        <childnode refid="12159" relation="usage">
          <edgelabel>m_matHMatrix</edgelabel>
        </childnode>
        <childnode refid="12152" relation="usage">
          <edgelabel>m_matInvTransform</edgelabel>
          <edgelabel>m_matTransform</edgelabel>
        </childnode>
        <childnode refid="12157" relation="usage">
          <edgelabel>m_bIsUniformScale</edgelabel>
          <edgelabel>m_bIsIdentity</edgelabel>
          <edgelabel>m_bUpdateInverse</edgelabel>
          <edgelabel>m_bIsRotScale</edgelabel>
        </childnode>
        <childnode refid="12158" relation="usage">
          <edgelabel>Identity</edgelabel>
        </childnode>
      </node>
      <node id="12150">
        <label>TVector3&lt; Scalar &gt;</label>
        <link refid="de/d40/classTVector3"/>
        <childnode refid="12150" relation="usage">
          <edgelabel>Null</edgelabel>
          <edgelabel>eI</edgelabel>
          <edgelabel>eJ</edgelabel>
          <edgelabel>eK</edgelabel>
        </childnode>
        <childnode refid="12151" relation="usage">
          <edgelabel>X</edgelabel>
          <edgelabel>Y</edgelabel>
          <edgelabel>Z</edgelabel>
        </childnode>
      </node>
      <node id="12147">
        <label>Island</label>
        <link refid="d0/dd6/classIsland"/>
        <childnode refid="12147" relation="usage">
          <edgelabel>m_pNextInWorld</edgelabel>
          <edgelabel>m_pPrevInWorld</edgelabel>
        </childnode>
        <childnode refid="12148" relation="usage">
          <edgelabel>m_iColor</edgelabel>
        </childnode>
        <childnode refid="12149" relation="usage">
          <edgelabel>m_pListBodies</edgelabel>
        </childnode>
        <childnode refid="12141" relation="usage">
          <edgelabel>m_iContactCount</edgelabel>
          <edgelabel>m_iJointCount</edgelabel>
          <edgelabel>m_iBodyCount</edgelabel>
          <edgelabel>m_iStackLayerCount</edgelabel>
        </childnode>
        <childnode refid="12174" relation="usage">
          <edgelabel>m_pListJoints</edgelabel>
        </childnode>
        <childnode refid="12181" relation="usage">
          <edgelabel>m_pListContacts</edgelabel>
        </childnode>
      </node>
      <node id="12190">
        <label>TreeMap&lt; SAPProxyID, SAPProxy &gt;</label>
        <link refid="d0/da4/classTreeMap"/>
        <childnode refid="12134" relation="public-inheritance">
        </childnode>
        <childnode refid="12191" relation="usage">
          <edgelabel>m_rbTreeMap</edgelabel>
        </childnode>
        <childnode refid="12141" relation="usage">
          <edgelabel>m_pfCompare</edgelabel>
        </childnode>
        <childnode refid="12142" relation="usage">
          <edgelabel>m_pUserData</edgelabel>
        </childnode>
      </node>
      <node id="12160">
        <label>TVertex3&lt; Scalar &gt;</label>
        <link refid="dc/d75/classTVertex3"/>
        <childnode refid="12151" relation="usage">
          <edgelabel>X</edgelabel>
          <edgelabel>Y</edgelabel>
          <edgelabel>Z</edgelabel>
        </childnode>
        <childnode refid="12160" relation="usage">
          <edgelabel>Null</edgelabel>
        </childnode>
      </node>
      <node id="12161">
        <label>Shape</label>
        <link refid="de/d0a/classShape"/>
        <childnode refid="12162" relation="usage">
          <edgelabel>m_bvLocalAAB</edgelabel>
        </childnode>
        <childnode refid="12164" relation="usage">
          <edgelabel>m_pMesh</edgelabel>
        </childnode>
      </node>
      <node id="12132">
        <label>PairManager</label>
        <link refid="dd/d9d/classPairManager"/>
        <childnode refid="12133" relation="usage">
          <edgelabel>m_setPairs</edgelabel>
        </childnode>
        <childnode refid="12143" relation="usage">
          <edgelabel>m_pListener</edgelabel>
        </childnode>
        <childnode refid="12144" relation="usage">
          <edgelabel>m_arrBatch</edgelabel>
        </childnode>
      </node>
      <node id="12192">
        <label>TreeMapNode&lt; Key, T &gt;</label>
        <link refid="db/dd2/structTreeMapNode"/>
        <childnode refid="12193" relation="usage">
          <edgelabel>nodeKey</edgelabel>
        </childnode>
        <childnode refid="12140" relation="usage">
          <edgelabel>nodeItem</edgelabel>
        </childnode>
      </node>
      <node id="12181">
        <label>ContactEdge</label>
        <link refid="dc/d79/classContactEdge"/>
        <childnode refid="12175" relation="public-inheritance">
        </childnode>
        <childnode refid="12182" relation="usage">
          <edgelabel>m_pContactManifold</edgelabel>
        </childnode>
        <childnode refid="12183" relation="usage">
          <edgelabel>m_pNarrowPhase</edgelabel>
        </childnode>
      </node>
      <node id="12175">
        <label>IslandEdge</label>
        <link refid="da/d63/classIslandEdge"/>
        <childnode refid="12176" relation="usage">
          <edgelabel>m_idEdge</edgelabel>
        </childnode>
        <childnode refid="12147" relation="usage">
          <edgelabel>m_pIsland</edgelabel>
        </childnode>
        <childnode refid="12148" relation="usage">
          <edgelabel>m_iColor</edgelabel>
        </childnode>
        <childnode refid="12146" relation="usage">
          <edgelabel>m_pNodeA</edgelabel>
          <edgelabel>m_pNodeB</edgelabel>
        </childnode>
        <childnode refid="12141" relation="usage">
          <edgelabel>m_iStackLayer</edgelabel>
        </childnode>
        <childnode refid="12175" relation="usage">
          <edgelabel>m_pNextInWorld</edgelabel>
          <edgelabel>m_pNextInIsland</edgelabel>
          <edgelabel>m_pPrevInNodeA</edgelabel>
          <edgelabel>m_pNextInNodeA</edgelabel>
          <edgelabel>m_pPrevInNodeB</edgelabel>
          <edgelabel>m_pNextInNodeB</edgelabel>
          <edgelabel>m_pPrevInWorld</edgelabel>
          <edgelabel>m_pPrevInIsland</edgelabel>
        </childnode>
      </node>
      <node id="12167">
        <label>VFFieldUsage</label>
      </node>
      <node id="12171">
        <label>VertexBuffer</label>
        <link refid="d7/d72/classVertexBuffer"/>
        <childnode refid="12148" relation="usage">
          <edgelabel>m_arrVertices</edgelabel>
        </childnode>
        <childnode refid="12141" relation="usage">
          <edgelabel>m_iSize</edgelabel>
          <edgelabel>m_iVertexCount</edgelabel>
          <edgelabel>m_iVertexSize</edgelabel>
        </childnode>
        <childnode refid="12172" relation="usage">
          <edgelabel>m_iUsage</edgelabel>
        </childnode>
      </node>
      <node id="12130">
        <label>SweepAndPrune</label>
        <link refid="d6/d34/classSweepAndPrune"/>
        <childnode refid="12131" relation="public-inheritance">
        </childnode>
        <childnode refid="12185" relation="usage">
          <edgelabel>m_arrIntervals</edgelabel>
        </childnode>
        <childnode refid="12190" relation="usage">
          <edgelabel>m_mapProxies</edgelabel>
        </childnode>
      </node>
      <node id="12193">
        <label>Key</label>
      </node>
      <node id="12131">
        <label>BroadPhase</label>
        <link refid="d5/d23/classBroadPhase"/>
        <childnode refid="12132" relation="usage">
          <edgelabel>m_pPairManager</edgelabel>
        </childnode>
      </node>
      <node id="12157">
        <label>bool</label>
      </node>
      <node id="12177">
        <label>Constraint</label>
        <link refid="d8/dcd/classConstraint"/>
        <childnode refid="12178" relation="usage">
          <edgelabel>m_arrRows</edgelabel>
        </childnode>
        <childnode refid="12141" relation="usage">
          <edgelabel>m_iRowCount</edgelabel>
        </childnode>
        <childnode refid="12180" relation="usage">
          <edgelabel>m_pRigidBodyA</edgelabel>
          <edgelabel>m_pRigidBodyB</edgelabel>
        </childnode>
      </node>
      <node id="12163">
        <label>TBoundingVolume&lt; Scalar &gt;</label>
        <link refid="d6/d19/classTBoundingVolume"/>
      </node>
      <node id="12135">
        <label>char</label>
      </node>
      <node id="12183">
        <label>NarrowPhase</label>
        <link refid="dd/d93/classNarrowPhase"/>
        <childnode refid="12153" relation="usage">
          <edgelabel>ZeroTolerance</edgelabel>
        </childnode>
        <childnode refid="12182" relation="usage">
          <edgelabel>m_pCollisionManifold</edgelabel>
        </childnode>
        <childnode refid="12173" relation="usage">
          <edgelabel>m_pShapeA</edgelabel>
          <edgelabel>m_pShapeB</edgelabel>
        </childnode>
      </node>
      <node id="12184">
        <label>DWord</label>
      </node>
      <node id="12186">
        <label>SAPInterval</label>
        <link refid="d3/de1/structSAPInterval"/>
        <childnode refid="12187" relation="usage">
          <edgelabel>arrBounds</edgelabel>
        </childnode>
        <childnode refid="12189" relation="usage">
          <edgelabel>setCheckProxies</edgelabel>
          <edgelabel>setRemovedCheckProxies</edgelabel>
        </childnode>
        <childnode refid="12141" relation="usage">
          <edgelabel>iBoundCount</edgelabel>
        </childnode>
      </node>
      <node id="12142">
        <label>Void *</label>
      </node>
      <node id="12169">
        <label>IndexBuffer</label>
        <link refid="dd/df7/classIndexBuffer"/>
        <childnode refid="12148" relation="usage">
          <edgelabel>m_arrIndices</edgelabel>
        </childnode>
        <childnode refid="12141" relation="usage">
          <edgelabel>m_iIndexSize</edgelabel>
          <edgelabel>m_iSize</edgelabel>
          <edgelabel>m_iIndexCount</edgelabel>
        </childnode>
        <childnode refid="12170" relation="usage">
          <edgelabel>m_iUsage</edgelabel>
        </childnode>
      </node>
      <node id="12178">
        <label>ConstraintRow</label>
        <link refid="dd/d74/structConstraintRow"/>
        <childnode refid="12179" relation="usage">
          <edgelabel>constrJacobian</edgelabel>
        </childnode>
        <childnode refid="12153" relation="usage">
          <edgelabel>fUpperLimit</edgelabel>
          <edgelabel>fLowerLimit</edgelabel>
          <edgelabel>fError</edgelabel>
          <edgelabel>fCFM</edgelabel>
          <edgelabel>fImpulse</edgelabel>
        </childnode>
      </node>
      <node id="12134">
        <label>Datastruct</label>
        <link refid="dc/d51/classDatastruct"/>
        <childnode refid="12135" relation="usage">
          <edgelabel>m_strAllocatorName</edgelabel>
        </childnode>
        <childnode refid="12136" relation="usage">
          <edgelabel>m_idMemoryContext</edgelabel>
        </childnode>
      </node>
      <node id="12146">
        <label>IslandNode</label>
        <link refid="d4/d8c/classIslandNode"/>
        <childnode refid="12147" relation="usage">
          <edgelabel>m_pIsland</edgelabel>
        </childnode>
        <childnode refid="12146" relation="usage">
          <edgelabel>m_pNextInWorld</edgelabel>
          <edgelabel>m_pNextInIsland</edgelabel>
          <edgelabel>m_pPrevInWorld</edgelabel>
          <edgelabel>m_pPrevInIsland</edgelabel>
        </childnode>
        <childnode refid="12141" relation="usage">
          <edgelabel>m_iContactCount</edgelabel>
          <edgelabel>m_iJointCount</edgelabel>
          <edgelabel>m_iStackLayer</edgelabel>
          <edgelabel>m_iIslandRefCount</edgelabel>
        </childnode>
        <childnode refid="12157" relation="usage">
          <edgelabel>m_bFixed</edgelabel>
        </childnode>
        <childnode refid="12174" relation="usage">
          <edgelabel>m_pListJoints</edgelabel>
        </childnode>
        <childnode refid="12181" relation="usage">
          <edgelabel>m_pListContacts</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" line="101" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Engine/Physics/CollisionDetection/BroadPhase/SAP/SweepAndPrune.h" bodystart="100" bodyend="163"/>
    <listofallmembers>
      <member refid="d6/d34/classSweepAndPrune_1a86e775196e134ede04cd77706cf9cab8" prot="private" virt="non-virtual"><scope>SweepAndPrune</scope><name>_AllocateInterval</name></member>
      <member refid="d6/d34/classSweepAndPrune_1a186ceb5c1288e3437f1ab3912ee2ef12" prot="private" virt="non-virtual"><scope>SweepAndPrune</scope><name>_AllocateProxy</name></member>
      <member refid="d6/d34/classSweepAndPrune_1a91834fb782644ea398976b600ebe1c30" prot="private" virt="non-virtual"><scope>SweepAndPrune</scope><name>_Compare_ProxyIDs</name></member>
      <member refid="d6/d34/classSweepAndPrune_1ab2ae7ab929152a8a6ffe2788128b2cf5" prot="private" virt="non-virtual"><scope>SweepAndPrune</scope><name>_DecodeScalar</name></member>
      <member refid="d6/d34/classSweepAndPrune_1a36e24b7c9c9370a607a0489bfbea3c44" prot="private" virt="non-virtual"><scope>SweepAndPrune</scope><name>_EncodeScalar</name></member>
      <member refid="d6/d34/classSweepAndPrune_1a2a548d348c724aeec3cffc06996adc97" prot="private" virt="non-virtual"><scope>SweepAndPrune</scope><name>_ExtractBoundValues</name></member>
      <member refid="d6/d34/classSweepAndPrune_1ad996e4cf4ac0cbcde7aeb42b3c0257ea" prot="private" virt="non-virtual"><scope>SweepAndPrune</scope><name>_ExtractBoundValues</name></member>
      <member refid="d6/d34/classSweepAndPrune_1af193697e7c3afc04c044e8272f019ac7" prot="private" virt="non-virtual"><scope>SweepAndPrune</scope><name>_FreeInterval</name></member>
      <member refid="d6/d34/classSweepAndPrune_1af80c0798fb1c9b874941557033327839" prot="private" virt="non-virtual"><scope>SweepAndPrune</scope><name>_FreeProxy</name></member>
      <member refid="d6/d34/classSweepAndPrune_1a59e689b76025af2c22fac360dbd739b8" prot="private" virt="non-virtual"><scope>SweepAndPrune</scope><name>_GetProxy</name></member>
      <member refid="d6/d34/classSweepAndPrune_1a1862ce8eac82aad3e7fe30a36169ce95" prot="private" virt="non-virtual"><scope>SweepAndPrune</scope><name>_GetProxyID</name></member>
      <member refid="d6/d34/classSweepAndPrune_1af121997a9f2df9c91612bd076fbc4849" prot="private" virt="non-virtual"><scope>SweepAndPrune</scope><name>_Interval_Lookup</name></member>
      <member refid="d6/d34/classSweepAndPrune_1a4e1f6ddca0947981df4f2deb2f685918" prot="private" virt="non-virtual"><scope>SweepAndPrune</scope><name>_Interval_Merge</name></member>
      <member refid="d6/d34/classSweepAndPrune_1a22551d6dcbb99c782d5f70cc3f4eab8b" prot="private" virt="non-virtual"><scope>SweepAndPrune</scope><name>_Interval_Split</name></member>
      <member refid="d6/d34/classSweepAndPrune_1aad96cb418a12c0a96fa27508b2661f2f" prot="private" virt="non-virtual"><scope>SweepAndPrune</scope><name>_Interval_UpdateProxyLinks</name></member>
      <member refid="d6/d34/classSweepAndPrune_1add54d98c4a178c1f48c4f6ed54140927" prot="private" virt="non-virtual"><scope>SweepAndPrune</scope><name>_OnCrossSwap</name></member>
      <member refid="d6/d34/classSweepAndPrune_1a6363892e056b6cc7effdc8e9ace91be8" prot="private" virt="non-virtual"><scope>SweepAndPrune</scope><name>_OnSimpleSwap</name></member>
      <member refid="d6/d34/classSweepAndPrune_1ac5eb8a30cfc07056d83d87050f62c489" prot="private" virt="non-virtual"><scope>SweepAndPrune</scope><name>_OverlapTest</name></member>
      <member refid="d6/d34/classSweepAndPrune_1a5ab0c400f8beacdc04f8fe12ff96768c" prot="private" virt="non-virtual"><scope>SweepAndPrune</scope><name>_PropagateBound</name></member>
      <member refid="d6/d34/classSweepAndPrune_1aa6fbefca6cd51d777fb2751d97edda64" prot="private" virt="non-virtual"><scope>SweepAndPrune</scope><name>_SignalPairs</name></member>
      <member refid="d5/d23/classBroadPhase_1ae3cddba855efc9f9c2fbf984c290207a" prot="public" virt="non-virtual"><scope>SweepAndPrune</scope><name>BroadPhase</name></member>
      <member refid="d5/d23/classBroadPhase_1af1d6fc32e9643f4c6278acf682c6ad51" prot="public" virt="non-virtual"><scope>SweepAndPrune</scope><name>Commit</name></member>
      <member refid="d6/d34/classSweepAndPrune_1adf3f4253b0e965e78bbcf28d4538e67d" prot="public" virt="virtual"><scope>SweepAndPrune</scope><name>CreateProxy</name></member>
      <member refid="d6/d34/classSweepAndPrune_1a35125422df039526c9edf0cebf4c0ead" prot="public" virt="virtual"><scope>SweepAndPrune</scope><name>DestroyProxy</name></member>
      <member refid="d6/d34/classSweepAndPrune_1a885bbf65e74435713eda1491685e962a" prot="public" virt="virtual"><scope>SweepAndPrune</scope><name>HasProxy</name></member>
      <member refid="d5/d23/classBroadPhase_1adc036b2cb9e1ac6c5f594f2785e580ee" prot="public" virt="non-virtual"><scope>SweepAndPrune</scope><name>IsPair</name></member>
      <member refid="d6/d34/classSweepAndPrune_1a16a2588e29feb09fd7acff030551fd21" prot="private" virt="non-virtual"><scope>SweepAndPrune</scope><name>m_arrIntervals</name></member>
      <member refid="d6/d34/classSweepAndPrune_1a37aecd4f34b88dcb58b4f4578224b727" prot="private" virt="non-virtual"><scope>SweepAndPrune</scope><name>m_mapProxies</name></member>
      <member refid="d5/d23/classBroadPhase_1a1d3c7e1248be1558fb27794457885760" prot="protected" virt="non-virtual"><scope>SweepAndPrune</scope><name>m_pPairManager</name></member>
      <member refid="d6/d34/classSweepAndPrune_1ae76ca09a7425202fa0816a86a683b8c5" prot="private" virt="non-virtual"><scope>SweepAndPrune</scope><name>ProxyMap</name></member>
      <member refid="d6/d34/classSweepAndPrune_1a52a535997967c7710083c4745bd0f3f1" prot="public" virt="non-virtual"><scope>SweepAndPrune</scope><name>SweepAndPrune</name></member>
      <member refid="d5/d23/classBroadPhase_1a0f4277dd1ee1fce8a62a7a831d4cf2b1" prot="public" virt="non-virtual"><scope>SweepAndPrune</scope><name>SwitchListener</name></member>
      <member refid="d6/d34/classSweepAndPrune_1a931d2f747d92763dc68d53112bcaf958" prot="public" virt="virtual"><scope>SweepAndPrune</scope><name>UpdateProxy</name></member>
      <member refid="d5/d23/classBroadPhase_1ac18f52e5efc04622ab963a530e7da14c" prot="public" virt="virtual"><scope>SweepAndPrune</scope><name>~BroadPhase</name></member>
      <member refid="d6/d34/classSweepAndPrune_1ab76940f034dcd202996319a702d7b96d" prot="public" virt="virtual"><scope>SweepAndPrune</scope><name>~SweepAndPrune</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
