<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="d6/d7c/classAVLTree" kind="class" prot="public">
    <compoundname>AVLTree</compoundname>
    <basecompoundref refid="dc/d51/classDatastruct" prot="public" virt="non-virtual">Datastruct</basecompoundref>
    <includes refid="dc/d8c/AVLTree_8h" local="no">AVLTree.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d6/d7c/classAVLTree_1a43c6116a0570847d9df8230cf058f8c6" prot="public" static="no">
        <type><ref refid="d9/dd0/Platform_8h_1a7cc214a236ad3bb6ad435bdcf5262a3f" kindref="member">Int</ref>(*</type>
        <definition>typedef Int(* Comparator)(const T &amp;rLeft, const T &amp;rRight)</definition>
        <argsstring>)(const T &amp;rLeft, const T &amp;rRight)</argsstring>
        <name>Comparator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" line="79" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d6/d7c/classAVLTree_1a27d1e78c521dfa3bb17788c5ad7c8792" prot="private" static="no" mutable="no">
        <type><ref refid="d6/d7c/classAVLTree_1a43c6116a0570847d9df8230cf058f8c6" kindref="member">Comparator</ref></type>
        <definition>Comparator m_pfCompare</definition>
        <argsstring></argsstring>
        <name>m_pfCompare</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" line="115" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d7c/classAVLTree_1a23a17f6bf3b4f3c796e3ca5429557a43" prot="private" static="no" mutable="no">
        <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
        <definition>UInt m_iNodeCount</definition>
        <argsstring></argsstring>
        <name>m_iNodeCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" line="117" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d7c/classAVLTree_1a99be4baab7d57bf968f331b6634bcbde" prot="private" static="no" mutable="no">
        <type><ref refid="d9/d44/structAVLNode" kindref="compound">AVLNode</ref> *</type>
        <definition>AVLNode* m_pRoot</definition>
        <argsstring></argsstring>
        <name>m_pRoot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" line="118" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d7c/classAVLTree_1aaf50edd7c2ecef8c869ad132a160ead9" prot="private" static="no" mutable="no">
        <type><ref refid="dc/d8c/AVLTree_8h_1acf40b499dec78bf012d4478b8ba04edf" kindref="member">AVLTreeHeightChange</ref></type>
        <definition>AVLTreeHeightChange m_iHeightChange</definition>
        <argsstring></argsstring>
        <name>m_iHeightChange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" line="120" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d6/d7c/classAVLTree_1aab3c8de57565fd2554e42e567f6bec9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AVLTree</definition>
        <argsstring>()</argsstring>
        <name>AVLTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" line="82"/>
      </memberdef>
      <memberdef kind="function" id="d6/d7c/classAVLTree_1a088f0d93bf383c60500f3dfca3f9e9ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~AVLTree</definition>
        <argsstring>()</argsstring>
        <name>~AVLTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" line="83"/>
      </memberdef>
      <memberdef kind="function" id="d6/d7c/classAVLTree_1accece030fd7dc9eee4914b59fafbb8ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void SetComparator</definition>
        <argsstring>(Comparator pfCompare)</argsstring>
        <name>SetComparator</name>
        <param>
          <type><ref refid="d6/d7c/classAVLTree_1a43c6116a0570847d9df8230cf058f8c6" kindref="member">Comparator</ref></type>
          <declname>pfCompare</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" line="86"/>
      </memberdef>
      <memberdef kind="function" id="d6/d7c/classAVLTree_1aab77352722e193be864ad3e317f0a967" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>virtual Void Create</definition>
        <argsstring>()</argsstring>
        <name>Create</name>
        <reimplements refid="dc/d51/classDatastruct_1a0609a196f6f3d0c6b77f63eb850c0ac7">Create</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" line="89"/>
      </memberdef>
      <memberdef kind="function" id="d6/d7c/classAVLTree_1a04b98e1741147ccd8731588392091ac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>virtual Void Destroy</definition>
        <argsstring>()</argsstring>
        <name>Destroy</name>
        <reimplements refid="dc/d51/classDatastruct_1a5f87413a244467d525a1e593ff2c1c27">Destroy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" line="90"/>
      </memberdef>
      <memberdef kind="function" id="d6/d7c/classAVLTree_1abe6db4496cfdd90f917f4ca76d4bdcb1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
        <definition>virtual UInt MemorySize</definition>
        <argsstring>() const </argsstring>
        <name>MemorySize</name>
        <reimplements refid="dc/d51/classDatastruct_1a9797d1e194be5ac1f59da06f4017ab52">MemorySize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" line="92"/>
      </memberdef>
      <memberdef kind="function" id="d6/d7c/classAVLTree_1a0956cac53fbbd2baead454e29106a8cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
        <definition>virtual UInt Count</definition>
        <argsstring>() const </argsstring>
        <name>Count</name>
        <reimplements refid="dc/d51/classDatastruct_1a64d0429c6ea513aff9aed72a84ac5e07">Count</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" line="93"/>
      </memberdef>
      <memberdef kind="function" id="d6/d7c/classAVLTree_1aa31f188be923c718868036f9486390ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>virtual Void Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <reimplements refid="dc/d51/classDatastruct_1a12a20256ada86a94610094792cbc6e2b">Clear</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" line="95"/>
      </memberdef>
      <memberdef kind="function" id="d6/d7c/classAVLTree_1a2a52f7e1b2a12f595123ef2cea9f6dfe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool Insert</definition>
        <argsstring>(const T &amp;rItem)</argsstring>
        <name>Insert</name>
        <param>
          <type>const T &amp;</type>
          <declname>rItem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" line="98"/>
      </memberdef>
      <memberdef kind="function" id="d6/d7c/classAVLTree_1a5c95db2c96db89a39b12cecacdf43f7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool Remove</definition>
        <argsstring>(const T &amp;rItem)</argsstring>
        <name>Remove</name>
        <param>
          <type>const T &amp;</type>
          <declname>rItem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" line="99"/>
      </memberdef>
      <memberdef kind="function" id="d6/d7c/classAVLTree_1a21b0ee439765c6af948b78dc0fe65dd2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool Search</definition>
        <argsstring>(T &amp;rOut, const T &amp;rItem, AVLTreeSearch searchFlags) const </argsstring>
        <name>Search</name>
        <param>
          <type>T &amp;</type>
          <declname>rOut</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>rItem</declname>
        </param>
        <param>
          <type><ref refid="dc/d8c/AVLTree_8h_1a0d40b9d428aa29d12e223ea61d91f982" kindref="member">AVLTreeSearch</ref></type>
          <declname>searchFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" line="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d6/d7c/classAVLTree_1a25089f5bb812ee0b0a8cdecab214272f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dc/d8c/AVLTree_8h_1acf40b499dec78bf012d4478b8ba04edf" kindref="member">AVLTreeHeightChange</ref></type>
        <definition>AVLTreeHeightChange _RotateOnce</definition>
        <argsstring>(AVLNode **ppNode, AVLTreeChild rotDir)</argsstring>
        <name>_RotateOnce</name>
        <param>
          <type><ref refid="d9/d44/structAVLNode" kindref="compound">AVLNode</ref> **</type>
          <declname>ppNode</declname>
        </param>
        <param>
          <type><ref refid="dc/d8c/AVLTree_8h_1a303df33e8150d835ba2ba8f520cf34e5" kindref="member">AVLTreeChild</ref></type>
          <declname>rotDir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" line="105"/>
      </memberdef>
      <memberdef kind="function" id="d6/d7c/classAVLTree_1a48e1ad6f8d4996eb7f36dc408225b939" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dc/d8c/AVLTree_8h_1acf40b499dec78bf012d4478b8ba04edf" kindref="member">AVLTreeHeightChange</ref></type>
        <definition>AVLTreeHeightChange _RotateTwice</definition>
        <argsstring>(AVLNode **ppNode, AVLTreeChild rotDir)</argsstring>
        <name>_RotateTwice</name>
        <param>
          <type><ref refid="d9/d44/structAVLNode" kindref="compound">AVLNode</ref> **</type>
          <declname>ppNode</declname>
        </param>
        <param>
          <type><ref refid="dc/d8c/AVLTree_8h_1a303df33e8150d835ba2ba8f520cf34e5" kindref="member">AVLTreeChild</ref></type>
          <declname>rotDir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" line="106"/>
      </memberdef>
      <memberdef kind="function" id="d6/d7c/classAVLTree_1a054901a3b85c2603a855377802b5763c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dc/d8c/AVLTree_8h_1acf40b499dec78bf012d4478b8ba04edf" kindref="member">AVLTreeHeightChange</ref></type>
        <definition>AVLTreeHeightChange _ReBalance</definition>
        <argsstring>(AVLNode **ppNode)</argsstring>
        <name>_ReBalance</name>
        <param>
          <type><ref refid="d9/d44/structAVLNode" kindref="compound">AVLNode</ref> **</type>
          <declname>ppNode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" line="107"/>
      </memberdef>
      <memberdef kind="function" id="d6/d7c/classAVLTree_1af9da540d7e24cd5deaf96aeafbf21e78" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool _rec_Insert</definition>
        <argsstring>(AVLNode **ppNode, AVLTreeHeightChange &amp;heightChange, const T &amp;rItem)</argsstring>
        <name>_rec_Insert</name>
        <param>
          <type><ref refid="d9/d44/structAVLNode" kindref="compound">AVLNode</ref> **</type>
          <declname>ppNode</declname>
        </param>
        <param>
          <type><ref refid="dc/d8c/AVLTree_8h_1acf40b499dec78bf012d4478b8ba04edf" kindref="member">AVLTreeHeightChange</ref> &amp;</type>
          <declname>heightChange</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>rItem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" line="110"/>
      </memberdef>
      <memberdef kind="function" id="d6/d7c/classAVLTree_1a477fbc30fc4023e025d857584ecce971" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool _rec_Remove</definition>
        <argsstring>(AVLNode **ppNode, AVLTreeHeightChange &amp;heightChange, const T &amp;rItem)</argsstring>
        <name>_rec_Remove</name>
        <param>
          <type><ref refid="d9/d44/structAVLNode" kindref="compound">AVLNode</ref> **</type>
          <declname>ppNode</declname>
        </param>
        <param>
          <type><ref refid="dc/d8c/AVLTree_8h_1acf40b499dec78bf012d4478b8ba04edf" kindref="member">AVLTreeHeightChange</ref> &amp;</type>
          <declname>heightChange</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>rItem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" line="111"/>
      </memberdef>
      <memberdef kind="function" id="d6/d7c/classAVLTree_1a7590b42459c06a672a480b4669230661" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _rec_Destroy</definition>
        <argsstring>(AVLNode *pNode)</argsstring>
        <name>_rec_Destroy</name>
        <param>
          <type><ref refid="d9/d44/structAVLNode" kindref="compound">AVLNode</ref> *</type>
          <declname>pNode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" line="112"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="241">
        <label>AVLTree&lt; T &gt;</label>
        <link refid="d6/d7c/classAVLTree"/>
        <childnode refid="242" relation="public-inheritance">
        </childnode>
      </node>
      <node id="242">
        <label>Datastruct</label>
        <link refid="dc/d51/classDatastruct"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="250">
        <label>T</label>
      </node>
      <node id="243">
        <label>AVLTree&lt; T &gt;</label>
        <link refid="d6/d7c/classAVLTree"/>
        <childnode refid="244" relation="public-inheritance">
        </childnode>
        <childnode refid="247" relation="usage">
          <edgelabel>m_pRoot</edgelabel>
        </childnode>
        <childnode refid="251" relation="usage">
          <edgelabel>m_iHeightChange</edgelabel>
        </childnode>
        <childnode refid="248" relation="usage">
          <edgelabel>m_iNodeCount</edgelabel>
          <edgelabel>m_pfCompare</edgelabel>
        </childnode>
      </node>
      <node id="251">
        <label>AVLTreeHeightChange</label>
      </node>
      <node id="246">
        <label>unsigned int</label>
      </node>
      <node id="248">
        <label>int</label>
      </node>
      <node id="249">
        <label>struct _avl_node *</label>
      </node>
      <node id="245">
        <label>char</label>
      </node>
      <node id="247">
        <label>AVLNode&lt; T &gt;</label>
        <link refid="d9/d44/structAVLNode"/>
        <childnode refid="248" relation="usage">
          <edgelabel>iBalanceFactor</edgelabel>
        </childnode>
        <childnode refid="249" relation="usage">
          <edgelabel>pChild</edgelabel>
        </childnode>
        <childnode refid="250" relation="usage">
          <edgelabel>Item</edgelabel>
        </childnode>
      </node>
      <node id="244">
        <label>Datastruct</label>
        <link refid="dc/d51/classDatastruct"/>
        <childnode refid="245" relation="usage">
          <edgelabel>m_strAllocatorName</edgelabel>
        </childnode>
        <childnode refid="246" relation="usage">
          <edgelabel>m_idMemoryContext</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" line="66" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/AVLTree.h" bodystart="65" bodyend="121"/>
    <listofallmembers>
      <member refid="d6/d7c/classAVLTree_1a054901a3b85c2603a855377802b5763c" prot="private" virt="non-virtual"><scope>AVLTree</scope><name>_ReBalance</name></member>
      <member refid="d6/d7c/classAVLTree_1a7590b42459c06a672a480b4669230661" prot="private" virt="non-virtual"><scope>AVLTree</scope><name>_rec_Destroy</name></member>
      <member refid="d6/d7c/classAVLTree_1af9da540d7e24cd5deaf96aeafbf21e78" prot="private" virt="non-virtual"><scope>AVLTree</scope><name>_rec_Insert</name></member>
      <member refid="d6/d7c/classAVLTree_1a477fbc30fc4023e025d857584ecce971" prot="private" virt="non-virtual"><scope>AVLTree</scope><name>_rec_Remove</name></member>
      <member refid="d6/d7c/classAVLTree_1a25089f5bb812ee0b0a8cdecab214272f" prot="private" virt="non-virtual"><scope>AVLTree</scope><name>_RotateOnce</name></member>
      <member refid="d6/d7c/classAVLTree_1a48e1ad6f8d4996eb7f36dc408225b939" prot="private" virt="non-virtual"><scope>AVLTree</scope><name>_RotateTwice</name></member>
      <member refid="dc/d51/classDatastruct_1a4208dfdad6dc1178ee1f80481598500c" prot="protected" virt="non-virtual"><scope>AVLTree</scope><name>_SelectMemory</name></member>
      <member refid="dc/d51/classDatastruct_1ae0aad9bef0dc76ed43f8c4fc59a10d78" prot="protected" virt="non-virtual"><scope>AVLTree</scope><name>_UnSelectMemory</name></member>
      <member refid="d6/d7c/classAVLTree_1aab3c8de57565fd2554e42e567f6bec9f" prot="public" virt="non-virtual"><scope>AVLTree</scope><name>AVLTree</name></member>
      <member refid="d6/d7c/classAVLTree_1aa31f188be923c718868036f9486390ea" prot="public" virt="virtual"><scope>AVLTree</scope><name>Clear</name></member>
      <member refid="d6/d7c/classAVLTree_1a43c6116a0570847d9df8230cf058f8c6" prot="public" virt="non-virtual"><scope>AVLTree</scope><name>Comparator</name></member>
      <member refid="d6/d7c/classAVLTree_1a0956cac53fbbd2baead454e29106a8cd" prot="public" virt="virtual"><scope>AVLTree</scope><name>Count</name></member>
      <member refid="d6/d7c/classAVLTree_1aab77352722e193be864ad3e317f0a967" prot="public" virt="virtual"><scope>AVLTree</scope><name>Create</name></member>
      <member refid="dc/d51/classDatastruct_1aebb55795e668a005cf660ce216962a2f" prot="public" virt="non-virtual"><scope>AVLTree</scope><name>Datastruct</name></member>
      <member refid="d6/d7c/classAVLTree_1a04b98e1741147ccd8731588392091ac0" prot="public" virt="virtual"><scope>AVLTree</scope><name>Destroy</name></member>
      <member refid="d6/d7c/classAVLTree_1a2a52f7e1b2a12f595123ef2cea9f6dfe" prot="public" virt="non-virtual"><scope>AVLTree</scope><name>Insert</name></member>
      <member refid="dc/d51/classDatastruct_1a4e2abc9751fdc8571b9d9a1d02639ebe" prot="public" virt="non-virtual"><scope>AVLTree</scope><name>IsEmpty</name></member>
      <member refid="d6/d7c/classAVLTree_1aaf50edd7c2ecef8c869ad132a160ead9" prot="private" virt="non-virtual"><scope>AVLTree</scope><name>m_iHeightChange</name></member>
      <member refid="d6/d7c/classAVLTree_1a23a17f6bf3b4f3c796e3ca5429557a43" prot="private" virt="non-virtual"><scope>AVLTree</scope><name>m_iNodeCount</name></member>
      <member refid="d6/d7c/classAVLTree_1a27d1e78c521dfa3bb17788c5ad7c8792" prot="private" virt="non-virtual"><scope>AVLTree</scope><name>m_pfCompare</name></member>
      <member refid="d6/d7c/classAVLTree_1a99be4baab7d57bf968f331b6634bcbde" prot="private" virt="non-virtual"><scope>AVLTree</scope><name>m_pRoot</name></member>
      <member refid="d6/d7c/classAVLTree_1abe6db4496cfdd90f917f4ca76d4bdcb1" prot="public" virt="virtual"><scope>AVLTree</scope><name>MemorySize</name></member>
      <member refid="d6/d7c/classAVLTree_1a5c95db2c96db89a39b12cecacdf43f7e" prot="public" virt="non-virtual"><scope>AVLTree</scope><name>Remove</name></member>
      <member refid="d6/d7c/classAVLTree_1a21b0ee439765c6af948b78dc0fe65dd2" prot="public" virt="non-virtual"><scope>AVLTree</scope><name>Search</name></member>
      <member refid="d6/d7c/classAVLTree_1accece030fd7dc9eee4914b59fafbb8ed" prot="public" virt="non-virtual"><scope>AVLTree</scope><name>SetComparator</name></member>
      <member refid="dc/d51/classDatastruct_1a605325d1c1fc3f3c761365595701f9c4" prot="public" virt="virtual"><scope>AVLTree</scope><name>UseMemoryContext</name></member>
      <member refid="d6/d7c/classAVLTree_1a088f0d93bf383c60500f3dfca3f9e9ad" prot="public" virt="virtual"><scope>AVLTree</scope><name>~AVLTree</name></member>
      <member refid="dc/d51/classDatastruct_1a59e1e9769598d5606e0a335692f89c15" prot="public" virt="virtual"><scope>AVLTree</scope><name>~Datastruct</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
