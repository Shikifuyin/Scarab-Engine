<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="d7/dee/classTMatrix3" kind="class" prot="public">
    <compoundname>TMatrix3</compoundname>
    <includes refid="dc/d1a/Matrix2_8h" local="no">Matrix2.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>Real</declname>
        <defname>Real</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="d7/dee/classTMatrix3_1a8e3b4545fe79e9861b60469a9cea27a2" prot="public" static="yes" mutable="no">
        <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt;</type>
        <definition>const TMatrix3&lt;Real&gt; Null</definition>
        <argsstring></argsstring>
        <name>Null</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="83" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/dee/classTMatrix3_1a11a90d021189fa506fe6113ada59f35d" prot="public" static="yes" mutable="no">
        <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt;</type>
        <definition>const TMatrix3&lt;Real&gt; Identity</definition>
        <argsstring></argsstring>
        <name>Identity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="84" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d7/dee/classTMatrix3_1adfaa64e2538c772047b99df19c696f41" prot="public" static="no" mutable="no">
        <type>Real</type>
        <definition>Real m00</definition>
        <argsstring></argsstring>
        <name>m00</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="198" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/dee/classTMatrix3_1a989c87b1bbd2eb6c5063a255981e0c34" prot="public" static="no" mutable="no">
        <type>Real</type>
        <definition>Real m01</definition>
        <argsstring></argsstring>
        <name>m01</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="198" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/dee/classTMatrix3_1acb4d117c79d04058b6448f9f1a39927a" prot="public" static="no" mutable="no">
        <type>Real</type>
        <definition>Real m02</definition>
        <argsstring></argsstring>
        <name>m02</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="198" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/dee/classTMatrix3_1a11765cc2e148685a7be9b19fc3cda8dd" prot="public" static="no" mutable="no">
        <type>Real</type>
        <definition>Real m10</definition>
        <argsstring></argsstring>
        <name>m10</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="199" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/dee/classTMatrix3_1afea20d2f42a13368ea6526ad763c03d2" prot="public" static="no" mutable="no">
        <type>Real</type>
        <definition>Real m11</definition>
        <argsstring></argsstring>
        <name>m11</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="199" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/dee/classTMatrix3_1a9542a976674fe95144152b9fbd929000" prot="public" static="no" mutable="no">
        <type>Real</type>
        <definition>Real m12</definition>
        <argsstring></argsstring>
        <name>m12</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="199" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/dee/classTMatrix3_1a96074c8e1817b34deb3003a2faa02dd1" prot="public" static="no" mutable="no">
        <type>Real</type>
        <definition>Real m20</definition>
        <argsstring></argsstring>
        <name>m20</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="200" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/dee/classTMatrix3_1aa9197b1ad24950c526c50f54753c5fda" prot="public" static="no" mutable="no">
        <type>Real</type>
        <definition>Real m21</definition>
        <argsstring></argsstring>
        <name>m21</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="200" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/dee/classTMatrix3_1a1b6682f0e0f802994cc91c7c659f8b01" prot="public" static="no" mutable="no">
        <type>Real</type>
        <definition>Real m22</definition>
        <argsstring></argsstring>
        <name>m22</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="200" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="d7/dee/classTMatrix3_1a861ab6a3627bfe53ae2453e2a5e1fca8" prot="private" static="yes" mutable="no">
        <type>const Real</type>
        <definition>const Real ZERO</definition>
        <argsstring></argsstring>
        <name>ZERO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="203" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/dee/classTMatrix3_1acac09fd02521e2a1297f6dde618fb5ca" prot="private" static="yes" mutable="no">
        <type>const Real</type>
        <definition>const Real ONE</definition>
        <argsstring></argsstring>
        <name>ONE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="204" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/dee/classTMatrix3_1aa2f4f55be7ca7ebf9a4cdd3f2c84cc36" prot="private" static="yes" mutable="no">
        <type>const Real</type>
        <definition>const Real TWO</definition>
        <argsstring></argsstring>
        <name>TWO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="205" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a50e1b0e6199a13a2e51a4b31544f9896" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TMatrix3</definition>
        <argsstring>()</argsstring>
        <name>TMatrix3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="87"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a4da55644ebaf5f61e9330e75655d4b7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TMatrix3</definition>
        <argsstring>(Real a00, Real a01, Real a02, Real a10, Real a11, Real a12, Real a20, Real a21, Real a22)</argsstring>
        <name>TMatrix3</name>
        <param>
          <type>Real</type>
          <declname>a00</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>a01</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>a02</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>a10</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>a11</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>a12</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>a20</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>a21</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>a22</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="90"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a0087471c44a75c77958c1812f5c99633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TMatrix3</definition>
        <argsstring>(const Real v0[3], const Real v1[3], const Real v2[3], Bool bRows=true)</argsstring>
        <name>TMatrix3</name>
        <param>
          <type>const Real</type>
          <declname>v0</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>const Real</type>
          <declname>v1</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>const Real</type>
          <declname>v2</declname>
          <array>[3]</array>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
          <declname>bRows</declname>
          <defval><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1a08f175a5505a10b9ed657defeb050e4b" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="91"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1ac039f3354276e2f06abd6a70053860fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TMatrix3</definition>
        <argsstring>(const Real arrMat[9], Bool bRows=true)</argsstring>
        <name>TMatrix3</name>
        <param>
          <type>const Real</type>
          <declname>arrMat</declname>
          <array>[9]</array>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
          <declname>bRows</declname>
          <defval><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1a08f175a5505a10b9ed657defeb050e4b" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="92"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a1cdef7a369e6d5d3901ecb5a330b7bb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TMatrix3</definition>
        <argsstring>(const TVector3&lt; Real &gt; &amp;v0, const TVector3&lt; Real &gt; &amp;v1, const TVector3&lt; Real &gt; &amp;v2, Bool bRows=true)</argsstring>
        <name>TMatrix3</name>
        <param>
          <type>const <ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; Real &gt; &amp;</type>
          <declname>v0</declname>
        </param>
        <param>
          <type>const <ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; Real &gt; &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; Real &gt; &amp;</type>
          <declname>v2</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
          <declname>bRows</declname>
          <defval><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1a08f175a5505a10b9ed657defeb050e4b" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="93"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1ad8fb8299b905f939e434d82a1be03cd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TMatrix3</definition>
        <argsstring>(const TVector3&lt; Real &gt; vMat[3], Bool bRows=true)</argsstring>
        <name>TMatrix3</name>
        <param>
          <type>const <ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; Real &gt;</type>
          <declname>vMat</declname>
          <array>[3]</array>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
          <declname>bRows</declname>
          <defval><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1a08f175a5505a10b9ed657defeb050e4b" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="94"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1ab45e10aedf0287b1ba9fac432ef5c58e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TMatrix3</definition>
        <argsstring>(const TMatrix2&lt; Real &gt; &amp;rhs)</argsstring>
        <name>TMatrix3</name>
        <param>
          <type>const <ref refid="d5/dac/classTMatrix2" kindref="compound">TMatrix2</ref>&lt; Real &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="95"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a1f0a398203f9e6975967439003620dc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TMatrix3</definition>
        <argsstring>(const TMatrix3&lt; Real &gt; &amp;rhs)</argsstring>
        <name>TMatrix3</name>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="96"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a13367d10c14b135e741f7bb22e03e5ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TMatrix3</definition>
        <argsstring>(const TMatrix4&lt; Real &gt; &amp;rhs)</argsstring>
        <name>TMatrix3</name>
        <param>
          <type>const <ref refid="d5/d09/classTMatrix4" kindref="compound">TMatrix4</ref>&lt; Real &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="97"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a590935a3ff7341dc733b13a0b2fbb698" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~TMatrix3</definition>
        <argsstring>()</argsstring>
        <name>~TMatrix3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="98"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1ab049add744a452a5f08c53d7da409520" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt; &amp;</type>
        <definition>TMatrix3&lt;Real&gt;&amp; operator=</definition>
        <argsstring>(const TMatrix3&lt; Real &gt; &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="101"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a37afb44a75d1a61dbf1995e68a15b700" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator Real *</definition>
        <argsstring>() const </argsstring>
        <name>operator Real *</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="104"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1aa18f12f9d731665bf1761defd963e092" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator const Real *</definition>
        <argsstring>() const </argsstring>
        <name>operator const Real *</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="105"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a16bc1150043ddf0eb1bb26e07d01b97c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Real &amp;</type>
        <definition>Real&amp; operator[]</definition>
        <argsstring>(Int i)</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1a7cc214a236ad3bb6ad435bdcf5262a3f" kindref="member">Int</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="109"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a16c3e65e5c3cb2c7d3ad611186ab3277" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Real</type>
        <definition>Real operator[]</definition>
        <argsstring>(Int i) const </argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1a7cc214a236ad3bb6ad435bdcf5262a3f" kindref="member">Int</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="110"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a16a53ede5f306a403ea8ee9367277c2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Real &amp;</type>
        <definition>Real&amp; operator[]</definition>
        <argsstring>(UInt i)</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="111"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a4c9eae2fc3af1319229e8177a190025b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Real</type>
        <definition>Real operator[]</definition>
        <argsstring>(UInt i) const </argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="112"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1ad97652961894e1bb3e6ba0cde310306b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Real &amp;</type>
        <definition>Real&amp; operator()</definition>
        <argsstring>(Int iRow, Int iColumn)</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1a7cc214a236ad3bb6ad435bdcf5262a3f" kindref="member">Int</ref></type>
          <declname>iRow</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1a7cc214a236ad3bb6ad435bdcf5262a3f" kindref="member">Int</ref></type>
          <declname>iColumn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="114"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a895f4a88362f4a660976b828d5538b76" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Real</type>
        <definition>Real operator()</definition>
        <argsstring>(Int iRow, Int iColumn) const </argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1a7cc214a236ad3bb6ad435bdcf5262a3f" kindref="member">Int</ref></type>
          <declname>iRow</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1a7cc214a236ad3bb6ad435bdcf5262a3f" kindref="member">Int</ref></type>
          <declname>iColumn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="115"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1aa40c5052876a5345ac6afc0adb5befcc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Real &amp;</type>
        <definition>Real&amp; operator()</definition>
        <argsstring>(UInt iRow, UInt iColumn)</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iRow</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iColumn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="116"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a51323249926ad3f29868011d70320103" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Real</type>
        <definition>Real operator()</definition>
        <argsstring>(UInt iRow, UInt iColumn) const </argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iRow</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iColumn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="117"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a1b7b40e52514222ebac44a2af8ba4237" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt;</type>
        <definition>TMatrix3&lt;Real&gt; operator+</definition>
        <argsstring>() const </argsstring>
        <name>operator+</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="120"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1af72eafdb48b4bf07872b0dd35f299afd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt;</type>
        <definition>TMatrix3&lt;Real&gt; operator-</definition>
        <argsstring>() const </argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="121"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a212f7e6b0eda32a36266dc9f0fc0e069" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool operator==</definition>
        <argsstring>(const TMatrix3&lt; Real &gt; &amp;rhs) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="124"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1aae886da7233282377bf5e8ed2e8fc72a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool operator!=</definition>
        <argsstring>(const TMatrix3&lt; Real &gt; &amp;rhs) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="125"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1adabaeb23ef0929ee0af0919c67b8247c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt;</type>
        <definition>TMatrix3&lt;Real&gt; operator*</definition>
        <argsstring>(Real rhs) const </argsstring>
        <name>operator*</name>
        <param>
          <type>Real</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="128"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a8452a5a6776b6ef6aef9faf9e638b5a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt;</type>
        <definition>TMatrix3&lt;Real&gt; operator/</definition>
        <argsstring>(Real rhs) const </argsstring>
        <name>operator/</name>
        <param>
          <type>Real</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="129"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1ac388322899fc2408510b6dd243dec1fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt; &amp;</type>
        <definition>TMatrix3&lt;Real&gt;&amp; operator*=</definition>
        <argsstring>(Real rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>Real</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="131"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a60771f31990cc3aff9441f121ff5b554" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt; &amp;</type>
        <definition>TMatrix3&lt;Real&gt;&amp; operator/=</definition>
        <argsstring>(Real rhs)</argsstring>
        <name>operator/=</name>
        <param>
          <type>Real</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="132"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a78e6c36ff961697542a4ca8b25736604" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dc/d75/classTVertex3" kindref="compound">TVertex3</ref>&lt; Real &gt;</type>
        <definition>TVertex3&lt;Real&gt; operator*</definition>
        <argsstring>(const TVertex3&lt; Real &gt; &amp;rhs) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="dc/d75/classTVertex3" kindref="compound">TVertex3</ref>&lt; Real &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="135"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a784e3d0a94a0300d44c4e770dfbf6cf5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; Real &gt;</type>
        <definition>TVector3&lt;Real&gt; operator*</definition>
        <argsstring>(const TVector3&lt; Real &gt; &amp;rhs) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; Real &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="138"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a18b679257e8e72697a9697e9ed974e99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt;</type>
        <definition>TMatrix3&lt;Real&gt; operator+</definition>
        <argsstring>(const TMatrix3&lt; Real &gt; &amp;rhs) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="141"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1aef0ac9b66eac1a0704b12f341b094b02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt;</type>
        <definition>TMatrix3&lt;Real&gt; operator-</definition>
        <argsstring>(const TMatrix3&lt; Real &gt; &amp;rhs) const </argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="142"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a61c74b3e5070deb9dc6a050da542386a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt;</type>
        <definition>TMatrix3&lt;Real&gt; operator*</definition>
        <argsstring>(const TMatrix3&lt; Real &gt; &amp;rhs) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="143"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1ac05814c89ac801c0a44d30c9ca3a0cd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt; &amp;</type>
        <definition>TMatrix3&lt;Real&gt;&amp; operator+=</definition>
        <argsstring>(const TMatrix3&lt; Real &gt; &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="145"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a82bf950b3575f7614e3b07b4f7c78133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt; &amp;</type>
        <definition>TMatrix3&lt;Real&gt;&amp; operator-=</definition>
        <argsstring>(const TMatrix3&lt; Real &gt; &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="146"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a5e7d972d1e94d1526a918364399da8c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt; &amp;</type>
        <definition>TMatrix3&lt;Real&gt;&amp; operator*=</definition>
        <argsstring>(const TMatrix3&lt; Real &gt; &amp;rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="147"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a6cf596feccd3dcd62bb6a0a5355950b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void GetRow</definition>
        <argsstring>(TVector3&lt; Real &gt; &amp;outRow, UInt iRow) const </argsstring>
        <name>GetRow</name>
        <param>
          <type><ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; Real &gt; &amp;</type>
          <declname>outRow</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iRow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="150"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a8d851c25a0290f4d9e96c3af61d91a73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void SetRow</definition>
        <argsstring>(UInt iRow, Real fRow0, Real fRow1, Real fRow2)</argsstring>
        <name>SetRow</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iRow</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>fRow0</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>fRow1</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>fRow2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="151"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1ac20813ffbbbce7daaef8c08de73a7218" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void SetRow</definition>
        <argsstring>(UInt iRow, const Real vRow[3])</argsstring>
        <name>SetRow</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iRow</declname>
        </param>
        <param>
          <type>const Real</type>
          <declname>vRow</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="152"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1aa8978c271103be532bdfa30be2c1de1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void SetRow</definition>
        <argsstring>(UInt iRow, const TVector3&lt; Real &gt; &amp;vRow)</argsstring>
        <name>SetRow</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iRow</declname>
        </param>
        <param>
          <type>const <ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; Real &gt; &amp;</type>
          <declname>vRow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="153"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a2c0c6b543c707ee3e9ba57c8fa68ce48" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void GetColumn</definition>
        <argsstring>(TVector3&lt; Real &gt; &amp;outColumn, UInt iColumn) const </argsstring>
        <name>GetColumn</name>
        <param>
          <type><ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; Real &gt; &amp;</type>
          <declname>outColumn</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iColumn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="155"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a6630498b0d2cb3f440d9ad42e39a084d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void SetColumn</definition>
        <argsstring>(UInt iColumn, Real fCol0, Real fCol1, Real fCol2)</argsstring>
        <name>SetColumn</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iColumn</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>fCol0</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>fCol1</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>fCol2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="156"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a7f43b78bc7a146db2ff22e1e43db30d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void SetColumn</definition>
        <argsstring>(UInt iColumn, const Real vCol[3])</argsstring>
        <name>SetColumn</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iColumn</declname>
        </param>
        <param>
          <type>const Real</type>
          <declname>vCol</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="157"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1ae32000829e1f1633d29385f689c0e4c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void SetColumn</definition>
        <argsstring>(UInt iColumn, const TVector3&lt; Real &gt; &amp;vCol)</argsstring>
        <name>SetColumn</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iColumn</declname>
        </param>
        <param>
          <type>const <ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; Real &gt; &amp;</type>
          <declname>vCol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="158"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a5ddff1963d0594e9e73280610470b467" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void MakeNull</definition>
        <argsstring>()</argsstring>
        <name>MakeNull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="161"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a1a2be532f2f092c6acf89a35d273201d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void MakeIdentity</definition>
        <argsstring>()</argsstring>
        <name>MakeIdentity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="162"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1ace1289421279e593f0898171f4d3e9c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void MakeDiagonal</definition>
        <argsstring>(const TVector3&lt; Real &gt; &amp;vDiagonal)</argsstring>
        <name>MakeDiagonal</name>
        <param>
          <type>const <ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; Real &gt; &amp;</type>
          <declname>vDiagonal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="163"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1acbc2d7bfd455e7585afe17ddde7f08ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void MakeScale</definition>
        <argsstring>(const TVector3&lt; Real &gt; &amp;vScale)</argsstring>
        <name>MakeScale</name>
        <param>
          <type>const <ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; Real &gt; &amp;</type>
          <declname>vScale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="164"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1afe7d4b05f70f78c5f1610faecb25706c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void MakeBasis</definition>
        <argsstring>(const TVertex2&lt; Real &gt; &amp;vOrigin, const TVector2&lt; Real &gt; &amp;vI, const TVector2&lt; Real &gt; &amp;vJ)</argsstring>
        <name>MakeBasis</name>
        <param>
          <type>const <ref refid="da/d79/classTVertex2" kindref="compound">TVertex2</ref>&lt; Real &gt; &amp;</type>
          <declname>vOrigin</declname>
        </param>
        <param>
          <type>const <ref refid="da/d58/classTVector2" kindref="compound">TVector2</ref>&lt; Real &gt; &amp;</type>
          <declname>vI</declname>
        </param>
        <param>
          <type>const <ref refid="da/d58/classTVector2" kindref="compound">TVector2</ref>&lt; Real &gt; &amp;</type>
          <declname>vJ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="165"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1ad5d127eaacad414a610730bbcb7bf4b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void MakeBasis</definition>
        <argsstring>(const TVector3&lt; Real &gt; &amp;vI, const TVector3&lt; Real &gt; &amp;vJ, const TVector3&lt; Real &gt; &amp;vK)</argsstring>
        <name>MakeBasis</name>
        <param>
          <type>const <ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; Real &gt; &amp;</type>
          <declname>vI</declname>
        </param>
        <param>
          <type>const <ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; Real &gt; &amp;</type>
          <declname>vJ</declname>
        </param>
        <param>
          <type>const <ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; Real &gt; &amp;</type>
          <declname>vK</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="166"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a74ae445eb331a345ec7e6b96f5305107" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void MakeSkewSymmetric</definition>
        <argsstring>(const TVector3&lt; Real &gt; &amp;vSkew)</argsstring>
        <name>MakeSkewSymmetric</name>
        <param>
          <type>const <ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; Real &gt; &amp;</type>
          <declname>vSkew</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="167"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a5e5a03f86d0926ef24a8acf0beee9d30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void MakeRotate</definition>
        <argsstring>(Axis rotAxis, Real rotAngle)</argsstring>
        <name>MakeRotate</name>
        <param>
          <type><ref refid="dc/d1a/Matrix2_8h_1ae3996976d8ffb3e58d88f58227473f8e" kindref="member">Axis</ref></type>
          <declname>rotAxis</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>rotAngle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="168"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a249e03647b0303193d74721168d55ee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void MakeRotate</definition>
        <argsstring>(const TVector3&lt; Real &gt; &amp;vAxis, Real rotAngle)</argsstring>
        <name>MakeRotate</name>
        <param>
          <type>const <ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; Real &gt; &amp;</type>
          <declname>vAxis</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>rotAngle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="169"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a52915a8f584121ab13b737a61ccb581a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void MakeRotate</definition>
        <argsstring>(Real fYaw, Real fPitch, Real fRoll, EulerAngles eulerAnglesOrder)</argsstring>
        <name>MakeRotate</name>
        <param>
          <type>Real</type>
          <declname>fYaw</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>fPitch</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>fRoll</declname>
        </param>
        <param>
          <type><ref refid="dc/d1a/Matrix2_8h_1ad8640b7ae1228956729500803a03d20b" kindref="member">EulerAngles</ref></type>
          <declname>eulerAnglesOrder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="170"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a8a220349746fd673645c18b1aa2b965a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void MakeTensorProduct</definition>
        <argsstring>(const TVector3&lt; Real &gt; &amp;vU, const TVector3&lt; Real &gt; &amp;vV)</argsstring>
        <name>MakeTensorProduct</name>
        <param>
          <type>const <ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; Real &gt; &amp;</type>
          <declname>vU</declname>
        </param>
        <param>
          <type>const <ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; Real &gt; &amp;</type>
          <declname>vV</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="171"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a7a0f9d2da0acf5519d224d709791e876" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void GetAxisAngle</definition>
        <argsstring>(TVector3&lt; Real &gt; &amp;outAxis, Real &amp;outAngle) const </argsstring>
        <name>GetAxisAngle</name>
        <param>
          <type><ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; Real &gt; &amp;</type>
          <declname>outAxis</declname>
        </param>
        <param>
          <type>Real &amp;</type>
          <declname>outAngle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="174"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a047c79b3087e58fc749a1170e37ed16c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void Transpose</definition>
        <argsstring>(TMatrix3&lt; Real &gt; &amp;outTransposedMatrix) const </argsstring>
        <name>Transpose</name>
        <param>
          <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt; &amp;</type>
          <declname>outTransposedMatrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="176"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a87ef0927322287b764730acc37966a87" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void Minor</definition>
        <argsstring>(TMatrix2&lt; Real &gt; &amp;outMinor, UInt iRow, UInt iColumn) const </argsstring>
        <name>Minor</name>
        <param>
          <type><ref refid="d5/dac/classTMatrix2" kindref="compound">TMatrix2</ref>&lt; Real &gt; &amp;</type>
          <declname>outMinor</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iRow</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iColumn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="183"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a918cf153f904a4ed944eee30f9b10f84" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Real</type>
        <definition>Real Determinant</definition>
        <argsstring>() const </argsstring>
        <name>Determinant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="184"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1abef7cb507450c41647d6137f70980624" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void Adjoint</definition>
        <argsstring>(TMatrix3&lt; Real &gt; &amp;outAdjointMatrix) const </argsstring>
        <name>Adjoint</name>
        <param>
          <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt; &amp;</type>
          <declname>outAdjointMatrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="185"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1ab3e83b55d971b470179604289c010409" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool Invert</definition>
        <argsstring>(TMatrix3&lt; Real &gt; &amp;outInvMatrix, Real fZeroTolerance=(Real) SCALAR_ERROR) const </argsstring>
        <name>Invert</name>
        <param>
          <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt; &amp;</type>
          <declname>outInvMatrix</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>fZeroTolerance</declname>
          <defval>(Real) <ref refid="d0/d10/Scalar_8h_1ab84e60710e7c3a93246b807ac524d38b" kindref="member">SCALAR_ERROR</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="186"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a9d63560f60a3726a7ae6d7d43cebea82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void OrthoNormalize</definition>
        <argsstring>()</argsstring>
        <name>OrthoNormalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="188"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a0b5cc95d97c50f584830b07dc244fd5a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void PolarDecomposition</definition>
        <argsstring>(TMatrix3&lt; Real &gt; &amp;outRotate, TMatrix3&lt; Real &gt; &amp;outScale) const </argsstring>
        <name>PolarDecomposition</name>
        <param>
          <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt; &amp;</type>
          <declname>outRotate</declname>
        </param>
        <param>
          <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt; &amp;</type>
          <declname>outScale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="190"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1ab2522463cc92986b0a2ca01c194538d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Real</type>
        <definition>Real QuadraticForm</definition>
        <argsstring>(const TVector3&lt; Real &gt; &amp;v0, const TVector3&lt; Real &gt; &amp;v1) const </argsstring>
        <name>QuadraticForm</name>
        <param>
          <type>const <ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; Real &gt; &amp;</type>
          <declname>v0</declname>
        </param>
        <param>
          <type>const <ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; Real &gt; &amp;</type>
          <declname>v1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="192"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1adb3e1bce201282d34520be2d9217cfef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void SLerp</definition>
        <argsstring>(const TMatrix3&lt; Real &gt; &amp;matSource, const TMatrix3&lt; Real &gt; &amp;matTarget, Real fT)</argsstring>
        <name>SLerp</name>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt; &amp;</type>
          <declname>matSource</declname>
        </param>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; Real &gt; &amp;</type>
          <declname>matTarget</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>fT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="195"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a89a4f090ec8c2ab8c1ce69de0cf49740" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref> &gt;</type>
        <definition>TMatrix3&lt; Float &gt; operator*</definition>
        <argsstring>(Float rhs) const</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="215"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a9a6ba2ed60db8b15f445873c147b99f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref> &gt;</type>
        <definition>TMatrix3&lt; Double &gt; operator*</definition>
        <argsstring>(Double rhs) const</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="217"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1aa1926dd34496473e5e025d06a087997c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref> &gt;</type>
        <definition>TMatrix3&lt; Float &gt; operator/</definition>
        <argsstring>(Float rhs) const</argsstring>
        <name>operator/</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="219"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a415d19a1661f7d33f734d59787e0d6c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref> &gt;</type>
        <definition>TMatrix3&lt; Double &gt; operator/</definition>
        <argsstring>(Double rhs) const</argsstring>
        <name>operator/</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="221"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1affd889f5441250651f21c8070c48d2a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref> &gt; &amp;</type>
        <definition>TMatrix3&lt; Float &gt; &amp; operator*=</definition>
        <argsstring>(Float rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="224"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1aaf233a795c8a28d2e82c00585db7f499" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref> &gt; &amp;</type>
        <definition>TMatrix3&lt; Double &gt; &amp; operator*=</definition>
        <argsstring>(Double rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="226"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a9591f632a81648fcee742e38528d4c1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref> &gt; &amp;</type>
        <definition>TMatrix3&lt; Float &gt; &amp; operator/=</definition>
        <argsstring>(Float rhs)</argsstring>
        <name>operator/=</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="228"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1abd3eec6077dd33323966c6ed3e657dcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref> &gt; &amp;</type>
        <definition>TMatrix3&lt; Double &gt; &amp; operator/=</definition>
        <argsstring>(Double rhs)</argsstring>
        <name>operator/=</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="230"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1aa3e8969d088f4183277bc5e152040f97" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="dc/d75/classTVertex3" kindref="compound">TVertex3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref> &gt;</type>
        <definition>TVertex3&lt; Float &gt; operator*</definition>
        <argsstring>(const TVertex3&lt; Float &gt; &amp;rhs) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="dc/d75/classTVertex3" kindref="compound">TVertex3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="233"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a46615387f22c2b413610fc1c64dd256b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="dc/d75/classTVertex3" kindref="compound">TVertex3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref> &gt;</type>
        <definition>TVertex3&lt; Double &gt; operator*</definition>
        <argsstring>(const TVertex3&lt; Double &gt; &amp;rhs) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="dc/d75/classTVertex3" kindref="compound">TVertex3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="235"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a8e44fb00bbd2b5f2cc857365686abeaf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref> &gt;</type>
        <definition>TVector3&lt; Float &gt; operator*</definition>
        <argsstring>(const TVector3&lt; Float &gt; &amp;rhs) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="238"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1ad8c7af29c216d01cabbfaabd23b73a42" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref> &gt;</type>
        <definition>TVector3&lt; Double &gt; operator*</definition>
        <argsstring>(const TVector3&lt; Double &gt; &amp;rhs) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="de/d40/classTVector3" kindref="compound">TVector3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="240"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a3b3dc97089a864fa3dea877fa8d1e5a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref> &gt;</type>
        <definition>TMatrix3&lt; Float &gt; operator+</definition>
        <argsstring>(const TMatrix3&lt; Float &gt; &amp;rhs) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="243"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1ad7d55d6d8bcae41b8158c96d29e6e776" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref> &gt;</type>
        <definition>TMatrix3&lt; Double &gt; operator+</definition>
        <argsstring>(const TMatrix3&lt; Double &gt; &amp;rhs) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="245"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1af300499d1f5e022c13a66d64f57ca0ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref> &gt;</type>
        <definition>TMatrix3&lt; Float &gt; operator-</definition>
        <argsstring>(const TMatrix3&lt; Float &gt; &amp;rhs) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="247"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a8b6643266d10d8298918345789d66549" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref> &gt;</type>
        <definition>TMatrix3&lt; Double &gt; operator-</definition>
        <argsstring>(const TMatrix3&lt; Double &gt; &amp;rhs) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="249"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a1224c0867535a1da177083cc655327af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref> &gt;</type>
        <definition>TMatrix3&lt; Float &gt; operator*</definition>
        <argsstring>(const TMatrix3&lt; Float &gt; &amp;rhs) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="251"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1aa6f463c5364980af2de414635a96b55d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref> &gt;</type>
        <definition>TMatrix3&lt; Double &gt; operator*</definition>
        <argsstring>(const TMatrix3&lt; Double &gt; &amp;rhs) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="253"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1aa75ee1225caeceb339452a853aaea5bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref> &gt; &amp;</type>
        <definition>TMatrix3&lt; Float &gt; &amp; operator+=</definition>
        <argsstring>(const TMatrix3&lt; Float &gt; &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="256"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a34a420e3136c5cc8c09caecd6db670ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref> &gt; &amp;</type>
        <definition>TMatrix3&lt; Double &gt; &amp; operator+=</definition>
        <argsstring>(const TMatrix3&lt; Double &gt; &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="258"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a986b7a2c24dca0bec0a236872c18223c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref> &gt; &amp;</type>
        <definition>TMatrix3&lt; Float &gt; &amp; operator-=</definition>
        <argsstring>(const TMatrix3&lt; Float &gt; &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="260"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1aa739cc0a18fad2230e385e52a59e02e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref> &gt; &amp;</type>
        <definition>TMatrix3&lt; Double &gt; &amp; operator-=</definition>
        <argsstring>(const TMatrix3&lt; Double &gt; &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="262"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1affbe3368838920ae3f9a3ecc29e9d7a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref> &gt; &amp;</type>
        <definition>TMatrix3&lt; Float &gt; &amp; operator*=</definition>
        <argsstring>(const TMatrix3&lt; Float &gt; &amp;rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="264"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a5ad543e1f1054310539ca9cfa69a7df3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref> &gt; &amp;</type>
        <definition>TMatrix3&lt; Double &gt; &amp; operator*=</definition>
        <argsstring>(const TMatrix3&lt; Double &gt; &amp;rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="266"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a943cad6869f84729f4958af9a7c61bbe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref></type>
        <definition>Float Determinant</definition>
        <argsstring>() const</argsstring>
        <name>Determinant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="275"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a6f04789fdf7f13e90dc69c18fbc96a99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref></type>
        <definition>Double Determinant</definition>
        <argsstring>() const</argsstring>
        <name>Determinant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="277"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1aaf59962d86d15b7ab576c7dc9161f931" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void Adjoint</definition>
        <argsstring>(TMatrix3&lt; Float &gt; &amp;outAdjointMatrix) const</argsstring>
        <name>Adjoint</name>
        <param>
          <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref> &gt; &amp;</type>
          <declname>outAdjointMatrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="280"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a96a5c3aae0b7d2064d79dfcb42ee208e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void Adjoint</definition>
        <argsstring>(TMatrix3&lt; Double &gt; &amp;outAdjointMatrix) const</argsstring>
        <name>Adjoint</name>
        <param>
          <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref> &gt; &amp;</type>
          <declname>outAdjointMatrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="282"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1ab8f6f6de27c8e4ee669dd51cd6626e62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool Invert</definition>
        <argsstring>(TMatrix3&lt; Float &gt; &amp;outInvertMatrix, Float fZeroTolerance) const</argsstring>
        <name>Invert</name>
        <param>
          <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref> &gt; &amp;</type>
          <declname>outInvertMatrix</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1a07afd7094cb489cbd514c76e6f55d34f" kindref="member">Float</ref></type>
          <declname>fZeroTolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="285"/>
      </memberdef>
      <memberdef kind="function" id="d7/dee/classTMatrix3_1a466e7993fc0a5816f7509234dda9991a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool Invert</definition>
        <argsstring>(TMatrix3&lt; Double &gt; &amp;outInvertMatrix, Double fZeroTolerance) const</argsstring>
        <name>Invert</name>
        <param>
          <type><ref refid="d7/dee/classTMatrix3" kindref="compound">TMatrix3</ref>&lt; <ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref> &gt; &amp;</type>
          <declname>outInvertMatrix</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1a1f2c5f02159fb28428e23074cc04166d" kindref="member">Double</ref></type>
          <declname>fZeroTolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix3.h" line="287"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="12707">
        <label>Real</label>
      </node>
      <node id="12706">
        <label>TMatrix3&lt; Real &gt;</label>
        <link refid="d7/dee/classTMatrix3"/>
        <childnode refid="12706" relation="usage">
          <edgelabel>Identity</edgelabel>
          <edgelabel>Null</edgelabel>
        </childnode>
        <childnode refid="12707" relation="usage">
          <edgelabel>ONE</edgelabel>
          <edgelabel>m20</edgelabel>
          <edgelabel>m21</edgelabel>
          <edgelabel>m10</edgelabel>
          <edgelabel>m22</edgelabel>
          <edgelabel>m11</edgelabel>
          <edgelabel>m00</edgelabel>
          <edgelabel>TWO</edgelabel>
          <edgelabel>m12</edgelabel>
          <edgelabel>m01</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix2.h" line="70" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Math/Types/Matrix/Matrix2.h" bodystart="70" bodyend="-1"/>
    <listofallmembers>
      <member refid="d7/dee/classTMatrix3_1abef7cb507450c41647d6137f70980624" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>Adjoint</name></member>
      <member refid="d7/dee/classTMatrix3_1aaf59962d86d15b7ab576c7dc9161f931" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>Adjoint</name></member>
      <member refid="d7/dee/classTMatrix3_1a96a5c3aae0b7d2064d79dfcb42ee208e" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>Adjoint</name></member>
      <member refid="d7/dee/classTMatrix3_1a918cf153f904a4ed944eee30f9b10f84" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>Determinant</name></member>
      <member refid="d7/dee/classTMatrix3_1a943cad6869f84729f4958af9a7c61bbe" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>Determinant</name></member>
      <member refid="d7/dee/classTMatrix3_1a6f04789fdf7f13e90dc69c18fbc96a99" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>Determinant</name></member>
      <member refid="d7/dee/classTMatrix3_1a7a0f9d2da0acf5519d224d709791e876" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>GetAxisAngle</name></member>
      <member refid="d7/dee/classTMatrix3_1a2c0c6b543c707ee3e9ba57c8fa68ce48" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>GetColumn</name></member>
      <member refid="d7/dee/classTMatrix3_1a6cf596feccd3dcd62bb6a0a5355950b5" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>GetRow</name></member>
      <member refid="d7/dee/classTMatrix3_1a11a90d021189fa506fe6113ada59f35d" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>Identity</name></member>
      <member refid="d7/dee/classTMatrix3_1ab3e83b55d971b470179604289c010409" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>Invert</name></member>
      <member refid="d7/dee/classTMatrix3_1ab8f6f6de27c8e4ee669dd51cd6626e62" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>Invert</name></member>
      <member refid="d7/dee/classTMatrix3_1a466e7993fc0a5816f7509234dda9991a" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>Invert</name></member>
      <member refid="d7/dee/classTMatrix3_1adfaa64e2538c772047b99df19c696f41" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>m00</name></member>
      <member refid="d7/dee/classTMatrix3_1a989c87b1bbd2eb6c5063a255981e0c34" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>m01</name></member>
      <member refid="d7/dee/classTMatrix3_1acb4d117c79d04058b6448f9f1a39927a" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>m02</name></member>
      <member refid="d7/dee/classTMatrix3_1a11765cc2e148685a7be9b19fc3cda8dd" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>m10</name></member>
      <member refid="d7/dee/classTMatrix3_1afea20d2f42a13368ea6526ad763c03d2" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>m11</name></member>
      <member refid="d7/dee/classTMatrix3_1a9542a976674fe95144152b9fbd929000" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>m12</name></member>
      <member refid="d7/dee/classTMatrix3_1a96074c8e1817b34deb3003a2faa02dd1" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>m20</name></member>
      <member refid="d7/dee/classTMatrix3_1aa9197b1ad24950c526c50f54753c5fda" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>m21</name></member>
      <member refid="d7/dee/classTMatrix3_1a1b6682f0e0f802994cc91c7c659f8b01" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>m22</name></member>
      <member refid="d7/dee/classTMatrix3_1afe7d4b05f70f78c5f1610faecb25706c" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>MakeBasis</name></member>
      <member refid="d7/dee/classTMatrix3_1ad5d127eaacad414a610730bbcb7bf4b2" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>MakeBasis</name></member>
      <member refid="d7/dee/classTMatrix3_1ace1289421279e593f0898171f4d3e9c8" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>MakeDiagonal</name></member>
      <member refid="d7/dee/classTMatrix3_1a1a2be532f2f092c6acf89a35d273201d" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>MakeIdentity</name></member>
      <member refid="d7/dee/classTMatrix3_1a5ddff1963d0594e9e73280610470b467" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>MakeNull</name></member>
      <member refid="d7/dee/classTMatrix3_1a5e5a03f86d0926ef24a8acf0beee9d30" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>MakeRotate</name></member>
      <member refid="d7/dee/classTMatrix3_1a249e03647b0303193d74721168d55ee1" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>MakeRotate</name></member>
      <member refid="d7/dee/classTMatrix3_1a52915a8f584121ab13b737a61ccb581a" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>MakeRotate</name></member>
      <member refid="d7/dee/classTMatrix3_1acbc2d7bfd455e7585afe17ddde7f08ce" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>MakeScale</name></member>
      <member refid="d7/dee/classTMatrix3_1a74ae445eb331a345ec7e6b96f5305107" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>MakeSkewSymmetric</name></member>
      <member refid="d7/dee/classTMatrix3_1a8a220349746fd673645c18b1aa2b965a" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>MakeTensorProduct</name></member>
      <member refid="d7/dee/classTMatrix3_1a87ef0927322287b764730acc37966a87" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>Minor</name></member>
      <member refid="d7/dee/classTMatrix3_1a8e3b4545fe79e9861b60469a9cea27a2" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>Null</name></member>
      <member refid="d7/dee/classTMatrix3_1acac09fd02521e2a1297f6dde618fb5ca" prot="private" virt="non-virtual"><scope>TMatrix3</scope><name>ONE</name></member>
      <member refid="d7/dee/classTMatrix3_1aa18f12f9d731665bf1761defd963e092" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator const Real *</name></member>
      <member refid="d7/dee/classTMatrix3_1a37afb44a75d1a61dbf1995e68a15b700" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator Real *</name></member>
      <member refid="d7/dee/classTMatrix3_1aae886da7233282377bf5e8ed2e8fc72a" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator!=</name></member>
      <member refid="d7/dee/classTMatrix3_1ad97652961894e1bb3e6ba0cde310306b" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator()</name></member>
      <member refid="d7/dee/classTMatrix3_1a895f4a88362f4a660976b828d5538b76" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator()</name></member>
      <member refid="d7/dee/classTMatrix3_1aa40c5052876a5345ac6afc0adb5befcc" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator()</name></member>
      <member refid="d7/dee/classTMatrix3_1a51323249926ad3f29868011d70320103" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator()</name></member>
      <member refid="d7/dee/classTMatrix3_1adabaeb23ef0929ee0af0919c67b8247c" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator*</name></member>
      <member refid="d7/dee/classTMatrix3_1a78e6c36ff961697542a4ca8b25736604" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator*</name></member>
      <member refid="d7/dee/classTMatrix3_1a784e3d0a94a0300d44c4e770dfbf6cf5" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator*</name></member>
      <member refid="d7/dee/classTMatrix3_1a61c74b3e5070deb9dc6a050da542386a" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator*</name></member>
      <member refid="d7/dee/classTMatrix3_1a89a4f090ec8c2ab8c1ce69de0cf49740" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator*</name></member>
      <member refid="d7/dee/classTMatrix3_1a9a6ba2ed60db8b15f445873c147b99f8" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator*</name></member>
      <member refid="d7/dee/classTMatrix3_1aa3e8969d088f4183277bc5e152040f97" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator*</name></member>
      <member refid="d7/dee/classTMatrix3_1a46615387f22c2b413610fc1c64dd256b" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator*</name></member>
      <member refid="d7/dee/classTMatrix3_1a8e44fb00bbd2b5f2cc857365686abeaf" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator*</name></member>
      <member refid="d7/dee/classTMatrix3_1ad8c7af29c216d01cabbfaabd23b73a42" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator*</name></member>
      <member refid="d7/dee/classTMatrix3_1a1224c0867535a1da177083cc655327af" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator*</name></member>
      <member refid="d7/dee/classTMatrix3_1aa6f463c5364980af2de414635a96b55d" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator*</name></member>
      <member refid="d7/dee/classTMatrix3_1ac388322899fc2408510b6dd243dec1fd" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator*=</name></member>
      <member refid="d7/dee/classTMatrix3_1a5e7d972d1e94d1526a918364399da8c7" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator*=</name></member>
      <member refid="d7/dee/classTMatrix3_1affd889f5441250651f21c8070c48d2a3" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator*=</name></member>
      <member refid="d7/dee/classTMatrix3_1aaf233a795c8a28d2e82c00585db7f499" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator*=</name></member>
      <member refid="d7/dee/classTMatrix3_1affbe3368838920ae3f9a3ecc29e9d7a4" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator*=</name></member>
      <member refid="d7/dee/classTMatrix3_1a5ad543e1f1054310539ca9cfa69a7df3" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator*=</name></member>
      <member refid="d7/dee/classTMatrix3_1a1b7b40e52514222ebac44a2af8ba4237" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator+</name></member>
      <member refid="d7/dee/classTMatrix3_1a18b679257e8e72697a9697e9ed974e99" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator+</name></member>
      <member refid="d7/dee/classTMatrix3_1a3b3dc97089a864fa3dea877fa8d1e5a2" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator+</name></member>
      <member refid="d7/dee/classTMatrix3_1ad7d55d6d8bcae41b8158c96d29e6e776" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator+</name></member>
      <member refid="d7/dee/classTMatrix3_1ac05814c89ac801c0a44d30c9ca3a0cd8" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator+=</name></member>
      <member refid="d7/dee/classTMatrix3_1aa75ee1225caeceb339452a853aaea5bc" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator+=</name></member>
      <member refid="d7/dee/classTMatrix3_1a34a420e3136c5cc8c09caecd6db670ac" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator+=</name></member>
      <member refid="d7/dee/classTMatrix3_1af72eafdb48b4bf07872b0dd35f299afd" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator-</name></member>
      <member refid="d7/dee/classTMatrix3_1aef0ac9b66eac1a0704b12f341b094b02" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator-</name></member>
      <member refid="d7/dee/classTMatrix3_1af300499d1f5e022c13a66d64f57ca0ea" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator-</name></member>
      <member refid="d7/dee/classTMatrix3_1a8b6643266d10d8298918345789d66549" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator-</name></member>
      <member refid="d7/dee/classTMatrix3_1a82bf950b3575f7614e3b07b4f7c78133" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator-=</name></member>
      <member refid="d7/dee/classTMatrix3_1a986b7a2c24dca0bec0a236872c18223c" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator-=</name></member>
      <member refid="d7/dee/classTMatrix3_1aa739cc0a18fad2230e385e52a59e02e2" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator-=</name></member>
      <member refid="d7/dee/classTMatrix3_1a8452a5a6776b6ef6aef9faf9e638b5a8" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator/</name></member>
      <member refid="d7/dee/classTMatrix3_1aa1926dd34496473e5e025d06a087997c" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator/</name></member>
      <member refid="d7/dee/classTMatrix3_1a415d19a1661f7d33f734d59787e0d6c0" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator/</name></member>
      <member refid="d7/dee/classTMatrix3_1a60771f31990cc3aff9441f121ff5b554" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator/=</name></member>
      <member refid="d7/dee/classTMatrix3_1a9591f632a81648fcee742e38528d4c1f" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator/=</name></member>
      <member refid="d7/dee/classTMatrix3_1abd3eec6077dd33323966c6ed3e657dcd" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator/=</name></member>
      <member refid="d7/dee/classTMatrix3_1ab049add744a452a5f08c53d7da409520" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator=</name></member>
      <member refid="d7/dee/classTMatrix3_1a212f7e6b0eda32a36266dc9f0fc0e069" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator==</name></member>
      <member refid="d7/dee/classTMatrix3_1a16bc1150043ddf0eb1bb26e07d01b97c" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator[]</name></member>
      <member refid="d7/dee/classTMatrix3_1a16c3e65e5c3cb2c7d3ad611186ab3277" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator[]</name></member>
      <member refid="d7/dee/classTMatrix3_1a16a53ede5f306a403ea8ee9367277c2c" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator[]</name></member>
      <member refid="d7/dee/classTMatrix3_1a4c9eae2fc3af1319229e8177a190025b" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>operator[]</name></member>
      <member refid="d7/dee/classTMatrix3_1a9d63560f60a3726a7ae6d7d43cebea82" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>OrthoNormalize</name></member>
      <member refid="d7/dee/classTMatrix3_1a0b5cc95d97c50f584830b07dc244fd5a" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>PolarDecomposition</name></member>
      <member refid="d7/dee/classTMatrix3_1ab2522463cc92986b0a2ca01c194538d2" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>QuadraticForm</name></member>
      <member refid="d7/dee/classTMatrix3_1a6630498b0d2cb3f440d9ad42e39a084d" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>SetColumn</name></member>
      <member refid="d7/dee/classTMatrix3_1a7f43b78bc7a146db2ff22e1e43db30d1" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>SetColumn</name></member>
      <member refid="d7/dee/classTMatrix3_1ae32000829e1f1633d29385f689c0e4c6" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>SetColumn</name></member>
      <member refid="d7/dee/classTMatrix3_1a8d851c25a0290f4d9e96c3af61d91a73" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>SetRow</name></member>
      <member refid="d7/dee/classTMatrix3_1ac20813ffbbbce7daaef8c08de73a7218" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>SetRow</name></member>
      <member refid="d7/dee/classTMatrix3_1aa8978c271103be532bdfa30be2c1de1d" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>SetRow</name></member>
      <member refid="d7/dee/classTMatrix3_1adb3e1bce201282d34520be2d9217cfef" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>SLerp</name></member>
      <member refid="d7/dee/classTMatrix3_1a50e1b0e6199a13a2e51a4b31544f9896" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>TMatrix3</name></member>
      <member refid="d7/dee/classTMatrix3_1a4da55644ebaf5f61e9330e75655d4b7b" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>TMatrix3</name></member>
      <member refid="d7/dee/classTMatrix3_1a0087471c44a75c77958c1812f5c99633" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>TMatrix3</name></member>
      <member refid="d7/dee/classTMatrix3_1ac039f3354276e2f06abd6a70053860fb" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>TMatrix3</name></member>
      <member refid="d7/dee/classTMatrix3_1a1cdef7a369e6d5d3901ecb5a330b7bb8" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>TMatrix3</name></member>
      <member refid="d7/dee/classTMatrix3_1ad8fb8299b905f939e434d82a1be03cd6" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>TMatrix3</name></member>
      <member refid="d7/dee/classTMatrix3_1ab45e10aedf0287b1ba9fac432ef5c58e" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>TMatrix3</name></member>
      <member refid="d7/dee/classTMatrix3_1a1f0a398203f9e6975967439003620dc4" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>TMatrix3</name></member>
      <member refid="d7/dee/classTMatrix3_1a13367d10c14b135e741f7bb22e03e5ef" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>TMatrix3</name></member>
      <member refid="d7/dee/classTMatrix3_1a047c79b3087e58fc749a1170e37ed16c" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>Transpose</name></member>
      <member refid="d7/dee/classTMatrix3_1aa2f4f55be7ca7ebf9a4cdd3f2c84cc36" prot="private" virt="non-virtual"><scope>TMatrix3</scope><name>TWO</name></member>
      <member refid="d7/dee/classTMatrix3_1a861ab6a3627bfe53ae2453e2a5e1fca8" prot="private" virt="non-virtual"><scope>TMatrix3</scope><name>ZERO</name></member>
      <member refid="d7/dee/classTMatrix3_1a590935a3ff7341dc733b13a0b2fbb698" prot="public" virt="non-virtual"><scope>TMatrix3</scope><name>~TMatrix3</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
