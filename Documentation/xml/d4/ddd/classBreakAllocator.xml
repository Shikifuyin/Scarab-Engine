<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="d4/ddd/classBreakAllocator" kind="class" prot="public">
    <compoundname>BreakAllocator</compoundname>
    <basecompoundref refid="d0/de0/classMemoryAllocator" prot="public" virt="non-virtual">MemoryAllocator</basecompoundref>
    <includes refid="d4/dac/BreakAllocator_8h" local="no">BreakAllocator.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d4/ddd/classBreakAllocator_1af2f962733856e89575286cf484b3be5a" prot="private" static="no" mutable="no">
        <type><ref refid="d9/dd0/Platform_8h_1a59e8652d68cb08192b3c64a744c061de" kindref="member">Byte</ref> *</type>
        <definition>Byte* m_pMemoryRange</definition>
        <argsstring></argsstring>
        <name>m_pMemoryRange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Memory/Allocators/BreakAllocator.h" line="87" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Memory/Allocators/BreakAllocator.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/ddd/classBreakAllocator_1ae07ece3c81d4d6bc682a6869a7eb6b0e" prot="private" static="no" mutable="no">
        <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
        <definition>UInt m_iRangeSize</definition>
        <argsstring></argsstring>
        <name>m_iRangeSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Memory/Allocators/BreakAllocator.h" line="88" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Memory/Allocators/BreakAllocator.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/ddd/classBreakAllocator_1ab8a56960f04b5fa766d8cf3c62d5045a" prot="private" static="no" mutable="no">
        <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
        <definition>UInt m_iBlockSize</definition>
        <argsstring></argsstring>
        <name>m_iBlockSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Memory/Allocators/BreakAllocator.h" line="89" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Memory/Allocators/BreakAllocator.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/ddd/classBreakAllocator_1a96d3b745123c4e75c4c74d861e2ecb12" prot="private" static="no" mutable="no">
        <type><ref refid="dc/d83/structBlockBreakHeader" kindref="compound">BlockBreakHeader</ref> *</type>
        <definition>BlockBreakHeader* m_pFirstBlock</definition>
        <argsstring></argsstring>
        <name>m_pFirstBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Memory/Allocators/BreakAllocator.h" line="90" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Memory/Allocators/BreakAllocator.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/ddd/classBreakAllocator_1a1e7429540e64aed0d71f99deb5b1726e" prot="private" static="no" mutable="no">
        <type><ref refid="dc/d83/structBlockBreakHeader" kindref="compound">BlockBreakHeader</ref> *</type>
        <definition>BlockBreakHeader* m_pCurrentBlock</definition>
        <argsstring></argsstring>
        <name>m_pCurrentBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Memory/Allocators/BreakAllocator.h" line="91" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Memory/Allocators/BreakAllocator.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d4/ddd/classBreakAllocator_1aa9a3a754e6066738b9feae7a22c66124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BreakAllocator</definition>
        <argsstring>(UInt iContextID, const GChar *strContextName, UInt iAllocatorID, const GChar *strAllocatorName)</argsstring>
        <name>BreakAllocator</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iContextID</declname>
        </param>
        <param>
          <type>const <ref refid="d9/dd0/Platform_8h_1a178c928e74b49565d9ce41c8d9bb85f6" kindref="member">GChar</ref> *</type>
          <declname>strContextName</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iAllocatorID</declname>
        </param>
        <param>
          <type>const <ref refid="d9/dd0/Platform_8h_1a178c928e74b49565d9ce41c8d9bb85f6" kindref="member">GChar</ref> *</type>
          <declname>strAllocatorName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Memory/Allocators/BreakAllocator.h" line="57"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/classBreakAllocator_1aed5d52c2b2a34f3d6aff9b1b31405061" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~BreakAllocator</definition>
        <argsstring>()</argsstring>
        <name>~BreakAllocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Memory/Allocators/BreakAllocator.h" line="58"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/classBreakAllocator_1aa47584358bdb2e4aeccd0aeb18cd1e97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void Initialize</definition>
        <argsstring>(UInt iBlockSize, UInt iRangeSize)</argsstring>
        <name>Initialize</name>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iBlockSize</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iRangeSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Memory/Allocators/BreakAllocator.h" line="61"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/classBreakAllocator_1a9034990ea6331d36c0f19a4e8af78366" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void Cleanup</definition>
        <argsstring>()</argsstring>
        <name>Cleanup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Memory/Allocators/BreakAllocator.h" line="62"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/classBreakAllocator_1ac0f1c763c7ae5fde3db72291619e9abe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d2/d75/MemoryAllocator_8h_1a8c1de3b94793fa437260f531a032ef32" kindref="member">AllocatorType</ref></type>
        <definition>AllocatorType GetType</definition>
        <argsstring>() const </argsstring>
        <name>GetType</name>
        <reimplements refid="d0/de0/classMemoryAllocator_1aa898f3777d49b54133f6be825ce71458">GetType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Memory/Allocators/BreakAllocator.h" line="65"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/classBreakAllocator_1a84cfa3bae08cc9b8449c10349456682f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
        <definition>UInt GetBlockSize</definition>
        <argsstring>(Byte *pMemory) const </argsstring>
        <name>GetBlockSize</name>
        <reimplements refid="d0/de0/classMemoryAllocator_1a886ccf8df5290f43505beef069832964">GetBlockSize</reimplements>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1a59e8652d68cb08192b3c64a744c061de" kindref="member">Byte</ref> *</type>
          <declname>pMemory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Memory/Allocators/BreakAllocator.h" line="66"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/classBreakAllocator_1a0fa11730017188b530a886464cf78325" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1a59e8652d68cb08192b3c64a744c061de" kindref="member">Byte</ref> *</type>
        <definition>Byte* Allocate</definition>
        <argsstring>(UInt iSize)</argsstring>
        <name>Allocate</name>
        <reimplements refid="d0/de0/classMemoryAllocator_1a2a31b6b73e37acbc1b1df8db2fe6c07b">Allocate</reimplements>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Memory/Allocators/BreakAllocator.h" line="69"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/classBreakAllocator_1a9a23ba98c3d5619cd67c1a0f850c4afa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void Free</definition>
        <argsstring>(Byte *pMemory)</argsstring>
        <name>Free</name>
        <reimplements refid="d0/de0/classMemoryAllocator_1afc49be48dd4c19d74dac0b2e1f776340">Free</reimplements>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1a59e8652d68cb08192b3c64a744c061de" kindref="member">Byte</ref> *</type>
          <declname>pMemory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Memory/Allocators/BreakAllocator.h" line="70"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/classBreakAllocator_1a8a600139a1bfe4d516eaaec2139c6ecc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void GenerateReport</definition>
        <argsstring>(AllocatorReport *outReport) const </argsstring>
        <name>GenerateReport</name>
        <reimplements refid="d0/de0/classMemoryAllocator_1ab1fa7e6d5d502b79f9596b13a96f9458">GenerateReport</reimplements>
        <param>
          <type><ref refid="d9/d02/structAllocatorReport" kindref="compound">AllocatorReport</ref> *</type>
          <declname>outReport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Memory/Allocators/BreakAllocator.h" line="83"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddd/classBreakAllocator_1a31095b1ee639d8a3a398ced3231f348a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void LogReport</definition>
        <argsstring>(const AllocatorReport *pReport) const </argsstring>
        <name>LogReport</name>
        <reimplements refid="d0/de0/classMemoryAllocator_1a9b1b8eca0d487fa8e949c06c09c069ef">LogReport</reimplements>
        <param>
          <type>const <ref refid="d9/d02/structAllocatorReport" kindref="compound">AllocatorReport</ref> *</type>
          <declname>pReport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Memory/Allocators/BreakAllocator.h" line="84"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="441">
        <label>BreakAllocator</label>
        <link refid="d4/ddd/classBreakAllocator"/>
        <childnode refid="442" relation="public-inheritance">
        </childnode>
      </node>
      <node id="442">
        <label>MemoryAllocator</label>
        <link refid="d0/de0/classMemoryAllocator"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="443">
        <label>BreakAllocator</label>
        <link refid="d4/ddd/classBreakAllocator"/>
        <childnode refid="444" relation="public-inheritance">
        </childnode>
        <childnode refid="447" relation="usage">
          <edgelabel>m_pMemoryRange</edgelabel>
        </childnode>
        <childnode refid="448" relation="usage">
          <edgelabel>m_pFirstBlock</edgelabel>
          <edgelabel>m_pCurrentBlock</edgelabel>
        </childnode>
        <childnode refid="450" relation="usage">
          <edgelabel>m_iRangeSize</edgelabel>
          <edgelabel>m_iBlockSize</edgelabel>
        </childnode>
      </node>
      <node id="448">
        <label>BlockBreakHeader</label>
        <link refid="dc/d83/structBlockBreakHeader"/>
        <childnode refid="446" relation="usage">
          <edgelabel>iBreak</edgelabel>
        </childnode>
        <childnode refid="449" relation="usage">
          <edgelabel>pPrev</edgelabel>
          <edgelabel>pNext</edgelabel>
        </childnode>
      </node>
      <node id="450">
        <label>unsigned int</label>
      </node>
      <node id="447">
        <label>unsigned char</label>
      </node>
      <node id="446">
        <label>int</label>
      </node>
      <node id="444">
        <label>MemoryAllocator</label>
        <link refid="d0/de0/classMemoryAllocator"/>
        <childnode refid="445" relation="usage">
          <edgelabel>m_strContextName</edgelabel>
          <edgelabel>m_strAllocatorName</edgelabel>
        </childnode>
        <childnode refid="446" relation="usage">
          <edgelabel>m_idAllocator</edgelabel>
          <edgelabel>m_idContext</edgelabel>
        </childnode>
      </node>
      <node id="445">
        <label>char</label>
      </node>
      <node id="449">
        <label>struct _block_break_header *</label>
      </node>
    </collaborationgraph>
    <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Memory/Allocators/BreakAllocator.h" line="54" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Memory/Allocators/BreakAllocator.h" bodystart="53" bodyend="92"/>
    <listofallmembers>
      <member refid="d4/ddd/classBreakAllocator_1a0fa11730017188b530a886464cf78325" prot="public" virt="virtual"><scope>BreakAllocator</scope><name>Allocate</name></member>
      <member refid="d4/ddd/classBreakAllocator_1aa9a3a754e6066738b9feae7a22c66124" prot="public" virt="non-virtual"><scope>BreakAllocator</scope><name>BreakAllocator</name></member>
      <member refid="d4/ddd/classBreakAllocator_1a9034990ea6331d36c0f19a4e8af78366" prot="public" virt="non-virtual"><scope>BreakAllocator</scope><name>Cleanup</name></member>
      <member refid="d4/ddd/classBreakAllocator_1a9a23ba98c3d5619cd67c1a0f850c4afa" prot="public" virt="virtual"><scope>BreakAllocator</scope><name>Free</name></member>
      <member refid="d4/ddd/classBreakAllocator_1a8a600139a1bfe4d516eaaec2139c6ecc" prot="public" virt="virtual"><scope>BreakAllocator</scope><name>GenerateReport</name></member>
      <member refid="d0/de0/classMemoryAllocator_1a72c3ca31f668ffb597b92e1e47c19b96" prot="public" virt="non-virtual"><scope>BreakAllocator</scope><name>GetAllocatorID</name></member>
      <member refid="d0/de0/classMemoryAllocator_1a17b30098af9a03e19cbe092885cd2b85" prot="public" virt="non-virtual"><scope>BreakAllocator</scope><name>GetAllocatorName</name></member>
      <member refid="d4/ddd/classBreakAllocator_1a84cfa3bae08cc9b8449c10349456682f" prot="public" virt="virtual"><scope>BreakAllocator</scope><name>GetBlockSize</name></member>
      <member refid="d0/de0/classMemoryAllocator_1a21d6aed8c4cc7efdd2676a2434c816a1" prot="public" virt="non-virtual"><scope>BreakAllocator</scope><name>GetContextID</name></member>
      <member refid="d0/de0/classMemoryAllocator_1a59b82e46c834e0eb2fd84eecbb9c4206" prot="public" virt="non-virtual"><scope>BreakAllocator</scope><name>GetContextName</name></member>
      <member refid="d4/ddd/classBreakAllocator_1ac0f1c763c7ae5fde3db72291619e9abe" prot="public" virt="virtual"><scope>BreakAllocator</scope><name>GetType</name></member>
      <member refid="d4/ddd/classBreakAllocator_1aa47584358bdb2e4aeccd0aeb18cd1e97" prot="public" virt="non-virtual"><scope>BreakAllocator</scope><name>Initialize</name></member>
      <member refid="d4/ddd/classBreakAllocator_1a31095b1ee639d8a3a398ced3231f348a" prot="public" virt="virtual"><scope>BreakAllocator</scope><name>LogReport</name></member>
      <member refid="d4/ddd/classBreakAllocator_1ab8a56960f04b5fa766d8cf3c62d5045a" prot="private" virt="non-virtual"><scope>BreakAllocator</scope><name>m_iBlockSize</name></member>
      <member refid="d0/de0/classMemoryAllocator_1a56dee949e5f1271dbff9056eef635add" prot="protected" virt="non-virtual"><scope>BreakAllocator</scope><name>m_idAllocator</name></member>
      <member refid="d0/de0/classMemoryAllocator_1a87ea78b2e3fd0afd4d06401ad0fbb24f" prot="protected" virt="non-virtual"><scope>BreakAllocator</scope><name>m_idContext</name></member>
      <member refid="d4/ddd/classBreakAllocator_1ae07ece3c81d4d6bc682a6869a7eb6b0e" prot="private" virt="non-virtual"><scope>BreakAllocator</scope><name>m_iRangeSize</name></member>
      <member refid="d4/ddd/classBreakAllocator_1a1e7429540e64aed0d71f99deb5b1726e" prot="private" virt="non-virtual"><scope>BreakAllocator</scope><name>m_pCurrentBlock</name></member>
      <member refid="d4/ddd/classBreakAllocator_1a96d3b745123c4e75c4c74d861e2ecb12" prot="private" virt="non-virtual"><scope>BreakAllocator</scope><name>m_pFirstBlock</name></member>
      <member refid="d4/ddd/classBreakAllocator_1af2f962733856e89575286cf484b3be5a" prot="private" virt="non-virtual"><scope>BreakAllocator</scope><name>m_pMemoryRange</name></member>
      <member refid="d0/de0/classMemoryAllocator_1a4b8f5bbd3ee6e1e306411c11ae9df545" prot="protected" virt="non-virtual"><scope>BreakAllocator</scope><name>m_strAllocatorName</name></member>
      <member refid="d0/de0/classMemoryAllocator_1aa8a29a254562924314a9f60eeb44ac21" prot="protected" virt="non-virtual"><scope>BreakAllocator</scope><name>m_strContextName</name></member>
      <member refid="d0/de0/classMemoryAllocator_1ac8c9cbd1486e53440b3d23b91615a485" prot="public" virt="non-virtual"><scope>BreakAllocator</scope><name>MemoryAllocator</name></member>
      <member refid="d4/ddd/classBreakAllocator_1aed5d52c2b2a34f3d6aff9b1b31405061" prot="public" virt="non-virtual"><scope>BreakAllocator</scope><name>~BreakAllocator</name></member>
      <member refid="d0/de0/classMemoryAllocator_1adbe8d631e8845e26240ca27ab5827449" prot="public" virt="non-virtual"><scope>BreakAllocator</scope><name>~MemoryAllocator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
