<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="d4/d18/classWorldBSPNode" kind="class" prot="public">
    <compoundname>WorldBSPNode</compoundname>
    <basecompoundref refid="d5/d11/classWorldNode" prot="public" virt="non-virtual">WorldNode</basecompoundref>
    <derivedcompoundref refid="d1/d2b/classWorldIndoorArea" prot="public" virt="non-virtual">WorldIndoorArea</derivedcompoundref>
    <includes refid="d9/dd8/WorldBSPNode_8h" local="no">WorldBSPNode.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d4/d18/classWorldBSPNode_1ad550fb67a212f3d6a664071eedb0773d" prot="public" static="no" mutable="no">
        <type><ref refid="d8/d2f/Plane_8h_1aa8ac4245a8c2218856e5dbcfbd0af92c" kindref="member">Plane</ref></type>
        <definition>Plane WorldPlane</definition>
        <argsstring></argsstring>
        <name>WorldPlane</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" line="59" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d4/d18/classWorldBSPNode_1a8d61a6740a9c01fc2cdf6f2f5d10b612" prot="private" static="no" mutable="no">
        <type><ref refid="de/d40/classWorldBaseNode" kindref="compound">WorldBaseNode</ref> *</type>
        <definition>WorldBaseNode* m_pPositive</definition>
        <argsstring></argsstring>
        <name>m_pPositive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" line="69" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d18/classWorldBSPNode_1a718aa97ca314de1aa617c0c157677ea8" prot="private" static="no" mutable="no">
        <type><ref refid="de/d40/classWorldBaseNode" kindref="compound">WorldBaseNode</ref> *</type>
        <definition>WorldBaseNode* m_pCoplanar</definition>
        <argsstring></argsstring>
        <name>m_pCoplanar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" line="70" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d18/classWorldBSPNode_1a6fd45a0b471f3ea5855a915250347997" prot="private" static="no" mutable="no">
        <type><ref refid="de/d40/classWorldBaseNode" kindref="compound">WorldBaseNode</ref> *</type>
        <definition>WorldBaseNode* m_pNegative</definition>
        <argsstring></argsstring>
        <name>m_pNegative</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" line="71" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d4/d18/classWorldBSPNode_1aeb8fc3f0942bf84256af2fbf5ba35fc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WorldBSPNode</definition>
        <argsstring>(const GChar *strName=NULL)</argsstring>
        <name>WorldBSPNode</name>
        <param>
          <type>const <ref refid="d9/dd0/Platform_8h_1a178c928e74b49565d9ce41c8d9bb85f6" kindref="member">GChar</ref> *</type>
          <declname>strName</declname>
          <defval><ref refid="d9/dd0/Platform_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" line="39"/>
      </memberdef>
      <memberdef kind="function" id="d4/d18/classWorldBSPNode_1a2cb8a86893d4276fdfd1d93d2ee0e807" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~WorldBSPNode</definition>
        <argsstring>()</argsstring>
        <name>~WorldBSPNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" line="40"/>
      </memberdef>
      <memberdef kind="function" id="d4/d18/classWorldBSPNode_1a8f7b7d13e159dfc832d9fbaba2db90b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d6/d3d/WorldBaseNode_8h_1a6e6277cebe8ff57d01327774302dbf13" kindref="member">WorldNodeType</ref></type>
        <definition>virtual WorldNodeType GetType</definition>
        <argsstring>() const </argsstring>
        <name>GetType</name>
        <reimplements refid="d5/d11/classWorldNode_1a8f7b7d13e159dfc832d9fbaba2db90b7">GetType</reimplements>
        <reimplementedby refid="d1/d2b/classWorldIndoorArea_1a8f7b7d13e159dfc832d9fbaba2db90b7">GetType</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" line="43"/>
      </memberdef>
      <memberdef kind="function" id="d4/d18/classWorldBSPNode_1a4040b33d05e1fcff07c9a65794bc3fd6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool HasPositiveChild</definition>
        <argsstring>() const </argsstring>
        <name>HasPositiveChild</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" line="46"/>
      </memberdef>
      <memberdef kind="function" id="d4/d18/classWorldBSPNode_1a0a3020a3396e285223786d9766f48816" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool HasCoplanarChild</definition>
        <argsstring>() const </argsstring>
        <name>HasCoplanarChild</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" line="47"/>
      </memberdef>
      <memberdef kind="function" id="d4/d18/classWorldBSPNode_1a79a88f43f2ad8f0109d8c7bcd3139f1a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool HasNegativeChild</definition>
        <argsstring>() const </argsstring>
        <name>HasNegativeChild</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" line="48"/>
      </memberdef>
      <memberdef kind="function" id="d4/d18/classWorldBSPNode_1ad953a1cf817468bc423b8b5049b0b630" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/d40/classWorldBaseNode" kindref="compound">WorldBaseNode</ref> *</type>
        <definition>WorldBaseNode* GetPositiveChild</definition>
        <argsstring>() const </argsstring>
        <name>GetPositiveChild</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" line="50"/>
      </memberdef>
      <memberdef kind="function" id="d4/d18/classWorldBSPNode_1ab8349e30ef96f415286fd37822456334" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/d40/classWorldBaseNode" kindref="compound">WorldBaseNode</ref> *</type>
        <definition>WorldBaseNode* GetCoplanarChild</definition>
        <argsstring>() const </argsstring>
        <name>GetCoplanarChild</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" line="51"/>
      </memberdef>
      <memberdef kind="function" id="d4/d18/classWorldBSPNode_1aeaa6a3bcf8ff8180dc700c7ff222aef7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/d40/classWorldBaseNode" kindref="compound">WorldBaseNode</ref> *</type>
        <definition>WorldBaseNode* GetNegativeChild</definition>
        <argsstring>() const </argsstring>
        <name>GetNegativeChild</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" line="52"/>
      </memberdef>
      <memberdef kind="function" id="d4/d18/classWorldBSPNode_1af92dc4c16ed5cf6848de3ace3aaa78e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/d40/classWorldBaseNode" kindref="compound">WorldBaseNode</ref> *</type>
        <definition>WorldBaseNode* SetPositiveChild</definition>
        <argsstring>(WorldBaseNode *pChild)</argsstring>
        <name>SetPositiveChild</name>
        <param>
          <type><ref refid="de/d40/classWorldBaseNode" kindref="compound">WorldBaseNode</ref> *</type>
          <declname>pChild</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" line="54"/>
      </memberdef>
      <memberdef kind="function" id="d4/d18/classWorldBSPNode_1ac971c406f10669fad73be097f9e3861e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/d40/classWorldBaseNode" kindref="compound">WorldBaseNode</ref> *</type>
        <definition>WorldBaseNode* SetCoplanarChild</definition>
        <argsstring>(WorldBaseNode *pChild)</argsstring>
        <name>SetCoplanarChild</name>
        <param>
          <type><ref refid="de/d40/classWorldBaseNode" kindref="compound">WorldBaseNode</ref> *</type>
          <declname>pChild</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" line="55"/>
      </memberdef>
      <memberdef kind="function" id="d4/d18/classWorldBSPNode_1a2e19a2baab5f31b1ce5dd67265986067" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/d40/classWorldBaseNode" kindref="compound">WorldBaseNode</ref> *</type>
        <definition>WorldBaseNode* SetNegativeChild</definition>
        <argsstring>(WorldBaseNode *pChild)</argsstring>
        <name>SetNegativeChild</name>
        <param>
          <type><ref refid="de/d40/classWorldBaseNode" kindref="compound">WorldBaseNode</ref> *</type>
          <declname>pChild</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" line="56"/>
      </memberdef>
      <memberdef kind="function" id="d4/d18/classWorldBSPNode_1a2448d911a6bc93739e027bb5dbfc9c83" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/d40/classWorldBaseNode" kindref="compound">WorldBaseNode</ref> *</type>
        <definition>WorldBaseNode* GetContainingNode</definition>
        <argsstring>(const Vertex3 &amp;vPosition) const </argsstring>
        <name>GetContainingNode</name>
        <param>
          <type>const <ref refid="d0/df3/Vertex3_8h_1a77dfdbfba4bf6ee1a522233ccef29ff5" kindref="member">Vertex3</ref> &amp;</type>
          <declname>vPosition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" line="62"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d4/d18/classWorldBSPNode_1a6270828136c1e97ca6a95d900930c0f8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>virtual Void _OnVisibleGroup</definition>
        <argsstring>(WorldCuller &amp;wCuller, Bool bNoCull)</argsstring>
        <name>_OnVisibleGroup</name>
        <reimplements refid="d5/d11/classWorldNode_1a6270828136c1e97ca6a95d900930c0f8">_OnVisibleGroup</reimplements>
        <reimplementedby refid="d1/d2b/classWorldIndoorArea_1a6270828136c1e97ca6a95d900930c0f8">_OnVisibleGroup</reimplementedby>
        <param>
          <type><ref refid="db/d43/classWorldCuller" kindref="compound">WorldCuller</ref> &amp;</type>
          <declname>wCuller</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
          <declname>bNoCull</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" line="66"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="13725">
        <label>WorldNode</label>
        <link refid="d5/d11/classWorldNode"/>
        <childnode refid="13726" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13727">
        <label>WorldIndoorArea</label>
        <link refid="d1/d2b/classWorldIndoorArea"/>
        <childnode refid="13724" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13728">
        <label>MyDungeon</label>
        <link refid="d1/de4/classMyDungeon"/>
        <childnode refid="13727" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13726">
        <label>WorldBaseNode</label>
        <link refid="de/d40/classWorldBaseNode"/>
      </node>
      <node id="13724">
        <label>WorldBSPNode</label>
        <link refid="d4/d18/classWorldBSPNode"/>
        <childnode refid="13725" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="13741">
        <label>WorldCulling</label>
      </node>
      <node id="13752">
        <label>T</label>
      </node>
      <node id="13751">
        <label>RBTreeColor</label>
      </node>
      <node id="13749">
        <label>RedBlackNode&lt; T &gt;</label>
        <link refid="da/d9d/structRedBlackNode"/>
        <childnode refid="13750" relation="usage">
          <edgelabel>pPrev</edgelabel>
          <edgelabel>pNext</edgelabel>
          <edgelabel>pParent</edgelabel>
          <edgelabel>pChild</edgelabel>
        </childnode>
        <childnode refid="13751" relation="usage">
          <edgelabel>iColor</edgelabel>
        </childnode>
        <childnode refid="13752" relation="usage">
          <edgelabel>Item</edgelabel>
        </childnode>
      </node>
      <node id="13748">
        <label>RedBlackTree&lt; TreeMapNode &gt;</label>
        <link refid="d9/d5d/classRedBlackTree"/>
        <childnode refid="13747" relation="public-inheritance">
        </childnode>
        <childnode refid="13749" relation="usage">
          <edgelabel>m_pEnd</edgelabel>
          <edgelabel>m_pHead</edgelabel>
          <edgelabel>m_pRoot</edgelabel>
          <edgelabel>sm_SentinelNode</edgelabel>
          <edgelabel>RBTREE_LEAF</edgelabel>
        </childnode>
        <childnode refid="13740" relation="usage">
          <edgelabel>m_iNodeCount</edgelabel>
        </childnode>
        <childnode refid="13753" relation="usage">
          <edgelabel>m_pfCompare</edgelabel>
        </childnode>
        <childnode refid="13755" relation="usage">
          <edgelabel>m_pUserData</edgelabel>
        </childnode>
      </node>
      <node id="13730">
        <label>WorldNode</label>
        <link refid="d5/d11/classWorldNode"/>
        <childnode refid="13731" relation="public-inheritance">
        </childnode>
        <childnode refid="13746" relation="usage">
          <edgelabel>m_mapChildren</edgelabel>
        </childnode>
        <childnode refid="13757" relation="usage">
          <edgelabel>m_itEnumerate</edgelabel>
        </childnode>
      </node>
      <node id="13745">
        <label>TMatrix3&lt; Scalar &gt;</label>
        <link refid="d7/dee/classTMatrix3"/>
        <childnode refid="13745" relation="usage">
          <edgelabel>Identity</edgelabel>
          <edgelabel>Null</edgelabel>
        </childnode>
        <childnode refid="13744" relation="usage">
          <edgelabel>ONE</edgelabel>
          <edgelabel>m20</edgelabel>
          <edgelabel>m21</edgelabel>
          <edgelabel>m10</edgelabel>
          <edgelabel>m22</edgelabel>
          <edgelabel>m11</edgelabel>
          <edgelabel>m00</edgelabel>
          <edgelabel>TWO</edgelabel>
          <edgelabel>m12</edgelabel>
          <edgelabel>m01</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="13744">
        <label>float</label>
      </node>
      <node id="13758">
        <label>TPlane&lt; Scalar &gt;</label>
        <link refid="d1/d37/classTPlane"/>
        <childnode refid="13734" relation="usage">
          <edgelabel>Normal</edgelabel>
        </childnode>
        <childnode refid="13744" relation="usage">
          <edgelabel>Constant</edgelabel>
        </childnode>
        <childnode refid="13736" relation="usage">
          <edgelabel>Position</edgelabel>
        </childnode>
      </node>
      <node id="13743">
        <label>TMatrix4&lt; Scalar &gt;</label>
        <link refid="d5/d09/classTMatrix4"/>
        <childnode refid="13743" relation="usage">
          <edgelabel>Identity</edgelabel>
          <edgelabel>Null</edgelabel>
        </childnode>
        <childnode refid="13744" relation="usage">
          <edgelabel>ONE</edgelabel>
          <edgelabel>m30</edgelabel>
          <edgelabel>m31</edgelabel>
          <edgelabel>m20</edgelabel>
          <edgelabel>m32</edgelabel>
          <edgelabel>m21</edgelabel>
          <edgelabel>m10</edgelabel>
          <edgelabel>m33</edgelabel>
          <edgelabel>m22</edgelabel>
          <edgelabel>m11</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="13739">
        <label>ULong</label>
      </node>
      <node id="13746">
        <label>TreeMap&lt; const GChar *, WorldBaseNode * &gt;</label>
        <link refid="d0/da4/classTreeMap"/>
        <childnode refid="13747" relation="public-inheritance">
        </childnode>
        <childnode refid="13748" relation="usage">
          <edgelabel>m_rbTreeMap</edgelabel>
        </childnode>
        <childnode refid="13756" relation="usage">
          <edgelabel>m_pfCompare</edgelabel>
        </childnode>
        <childnode refid="13755" relation="usage">
          <edgelabel>m_pUserData</edgelabel>
        </childnode>
      </node>
      <node id="13740">
        <label>unsigned int</label>
      </node>
      <node id="13750">
        <label>struct _red_black_node *</label>
      </node>
      <node id="13756">
        <label>int</label>
      </node>
      <node id="13732">
        <label>TBVAABox&lt; Scalar &gt;</label>
        <link refid="d9/d90/classTBVAABox"/>
        <childnode refid="13733" relation="public-inheritance">
        </childnode>
        <childnode refid="13734" relation="usage">
          <edgelabel>m_vExtents</edgelabel>
        </childnode>
        <childnode refid="13736" relation="usage">
          <edgelabel>m_vCenter</edgelabel>
        </childnode>
      </node>
      <node id="13735">
        <label>Scalar</label>
      </node>
      <node id="13731">
        <label>WorldBaseNode</label>
        <link refid="de/d40/classWorldBaseNode"/>
        <childnode refid="13732" relation="usage">
          <edgelabel>WorldBV</edgelabel>
        </childnode>
        <childnode refid="13737" relation="usage">
          <edgelabel>m_strName</edgelabel>
        </childnode>
        <childnode refid="13738" relation="usage">
          <edgelabel>UpdateWorldTransform</edgelabel>
          <edgelabel>UpdateWorldBV</edgelabel>
        </childnode>
        <childnode refid="13739" relation="usage">
          <edgelabel>m_dwDebugFlags</edgelabel>
        </childnode>
        <childnode refid="13740" relation="usage">
          <edgelabel>sm_iNoNameCount</edgelabel>
        </childnode>
        <childnode refid="13741" relation="usage">
          <edgelabel>CullMode</edgelabel>
        </childnode>
        <childnode refid="13731" relation="usage">
          <edgelabel>m_pParent</edgelabel>
        </childnode>
        <childnode refid="13742" relation="usage">
          <edgelabel>WorldTransform</edgelabel>
        </childnode>
      </node>
      <node id="13742">
        <label>TTransform3&lt; Scalar &gt;</label>
        <link refid="d0/d75/classTTransform3"/>
        <childnode refid="13734" relation="usage">
          <edgelabel>m_vScale</edgelabel>
          <edgelabel>m_vInvScale</edgelabel>
          <edgelabel>m_vInvTranslate</edgelabel>
          <edgelabel>m_vTranslate</edgelabel>
        </childnode>
        <childnode refid="13743" relation="usage">
          <edgelabel>m_matHMatrix</edgelabel>
        </childnode>
        <childnode refid="13745" relation="usage">
          <edgelabel>m_matInvTransform</edgelabel>
          <edgelabel>m_matTransform</edgelabel>
        </childnode>
        <childnode refid="13738" relation="usage">
          <edgelabel>m_bIsUniformScale</edgelabel>
          <edgelabel>m_bIsIdentity</edgelabel>
          <edgelabel>m_bUpdateInverse</edgelabel>
          <edgelabel>m_bIsRotScale</edgelabel>
        </childnode>
        <childnode refid="13742" relation="usage">
          <edgelabel>Identity</edgelabel>
        </childnode>
      </node>
      <node id="13734">
        <label>TVector3&lt; Scalar &gt;</label>
        <link refid="de/d40/classTVector3"/>
        <childnode refid="13734" relation="usage">
          <edgelabel>Null</edgelabel>
          <edgelabel>eI</edgelabel>
          <edgelabel>eJ</edgelabel>
          <edgelabel>eK</edgelabel>
        </childnode>
        <childnode refid="13735" relation="usage">
          <edgelabel>X</edgelabel>
          <edgelabel>Y</edgelabel>
          <edgelabel>Z</edgelabel>
        </childnode>
      </node>
      <node id="13736">
        <label>TVertex3&lt; Scalar &gt;</label>
        <link refid="dc/d75/classTVertex3"/>
        <childnode refid="13735" relation="usage">
          <edgelabel>X</edgelabel>
          <edgelabel>Y</edgelabel>
          <edgelabel>Z</edgelabel>
        </childnode>
        <childnode refid="13736" relation="usage">
          <edgelabel>Null</edgelabel>
        </childnode>
      </node>
      <node id="13757">
        <label>Iterator</label>
      </node>
      <node id="13753">
        <label>TreeMapNode&lt; Key, T &gt;</label>
        <link refid="db/dd2/structTreeMapNode"/>
        <childnode refid="13754" relation="usage">
          <edgelabel>nodeKey</edgelabel>
        </childnode>
        <childnode refid="13752" relation="usage">
          <edgelabel>nodeItem</edgelabel>
        </childnode>
      </node>
      <node id="13754">
        <label>Key</label>
      </node>
      <node id="13738">
        <label>bool</label>
      </node>
      <node id="13733">
        <label>TBoundingVolume&lt; Scalar &gt;</label>
        <link refid="d6/d19/classTBoundingVolume"/>
      </node>
      <node id="13737">
        <label>char</label>
      </node>
      <node id="13755">
        <label>Void *</label>
      </node>
      <node id="13729">
        <label>WorldBSPNode</label>
        <link refid="d4/d18/classWorldBSPNode"/>
        <childnode refid="13730" relation="public-inheritance">
        </childnode>
        <childnode refid="13758" relation="usage">
          <edgelabel>WorldPlane</edgelabel>
        </childnode>
        <childnode refid="13731" relation="usage">
          <edgelabel>m_pNegative</edgelabel>
          <edgelabel>m_pCoplanar</edgelabel>
          <edgelabel>m_pPositive</edgelabel>
        </childnode>
      </node>
      <node id="13747">
        <label>Datastruct</label>
        <link refid="dc/d51/classDatastruct"/>
        <childnode refid="13737" relation="usage">
          <edgelabel>m_strAllocatorName</edgelabel>
        </childnode>
        <childnode refid="13740" relation="usage">
          <edgelabel>m_idMemoryContext</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" line="37" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Engine/World/Container/WorldBSPNode.h" bodystart="36" bodyend="72"/>
    <listofallmembers>
      <member refid="d4/d18/classWorldBSPNode_1a6270828136c1e97ca6a95d900930c0f8" prot="protected" virt="virtual"><scope>WorldBSPNode</scope><name>_OnVisibleGroup</name></member>
      <member refid="de/d40/classWorldBaseNode_1a73b811fbdcb8d71730b29822a7fabd21" prot="protected" virt="non-virtual"><scope>WorldBSPNode</scope><name>_QueryVisibleGroup</name></member>
      <member refid="d5/d11/classWorldNode_1aeb647132fe94ad3843d4d9351a68279c" prot="protected" virt="virtual"><scope>WorldBSPNode</scope><name>_UpdateWorldBV</name></member>
      <member refid="d5/d11/classWorldNode_1a521e32108967f9457587b337df6616f8" prot="protected" virt="virtual"><scope>WorldBSPNode</scope><name>_UpdateWorldTransform</name></member>
      <member refid="d5/d11/classWorldNode_1aa52191c7fd51a97251f5695c501b87be" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>AddChild</name></member>
      <member refid="de/d40/classWorldBaseNode_1ac2da504152770a52758e85ffd52d3c28" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>CullMode</name></member>
      <member refid="d5/d11/classWorldNode_1a0d04e96dad8301c4b1168ea62404cadc" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>EnumChildren</name></member>
      <member refid="d5/d11/classWorldNode_1a0bf5a59513ac9e65b2df233c113f8c30" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>EnumNextChild</name></member>
      <member refid="d5/d11/classWorldNode_1a759322982366517ddfe4f162f6851c26" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>GetChild</name></member>
      <member refid="d5/d11/classWorldNode_1ab6b5557368bb70a6a76b14f377d74923" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>GetChildCount</name></member>
      <member refid="d4/d18/classWorldBSPNode_1a2448d911a6bc93739e027bb5dbfc9c83" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>GetContainingNode</name></member>
      <member refid="d4/d18/classWorldBSPNode_1ab8349e30ef96f415286fd37822456334" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>GetCoplanarChild</name></member>
      <member refid="de/d40/classWorldBaseNode_1a8db69c2fadca821716052090e2adfe7b" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>GetDebugFlags</name></member>
      <member refid="de/d40/classWorldBaseNode_1acb24949ad36a8ed7b0008515d78ac5ae" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>GetName</name></member>
      <member refid="d4/d18/classWorldBSPNode_1aeaa6a3bcf8ff8180dc700c7ff222aef7" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>GetNegativeChild</name></member>
      <member refid="de/d40/classWorldBaseNode_1afbe429daa4f432beea27ff544193c80b" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>GetParent</name></member>
      <member refid="d4/d18/classWorldBSPNode_1ad953a1cf817468bc423b8b5049b0b630" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>GetPositiveChild</name></member>
      <member refid="d4/d18/classWorldBSPNode_1a8f7b7d13e159dfc832d9fbaba2db90b7" prot="public" virt="virtual"><scope>WorldBSPNode</scope><name>GetType</name></member>
      <member refid="d5/d11/classWorldNode_1a0a353d7e0cb82ca24200846a623136a8" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>HasChild</name></member>
      <member refid="d4/d18/classWorldBSPNode_1a0a3020a3396e285223786d9766f48816" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>HasCoplanarChild</name></member>
      <member refid="d4/d18/classWorldBSPNode_1a79a88f43f2ad8f0109d8c7bcd3139f1a" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>HasNegativeChild</name></member>
      <member refid="d4/d18/classWorldBSPNode_1a4040b33d05e1fcff07c9a65794bc3fd6" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>HasPositiveChild</name></member>
      <member refid="de/d40/classWorldBaseNode_1acd551a6aca3b3743b3f0031ab33d7c38" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>IsLeaf</name></member>
      <member refid="de/d40/classWorldBaseNode_1a9497472535cc78941df825084781b23e" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>IsNode</name></member>
      <member refid="d4/d18/classWorldBSPNode_1a718aa97ca314de1aa617c0c157677ea8" prot="private" virt="non-virtual"><scope>WorldBSPNode</scope><name>m_pCoplanar</name></member>
      <member refid="d4/d18/classWorldBSPNode_1a6fd45a0b471f3ea5855a915250347997" prot="private" virt="non-virtual"><scope>WorldBSPNode</scope><name>m_pNegative</name></member>
      <member refid="de/d40/classWorldBaseNode_1a11934f240407a72eda2c48325a9fc50f" prot="protected" virt="non-virtual"><scope>WorldBSPNode</scope><name>m_pParent</name></member>
      <member refid="d4/d18/classWorldBSPNode_1a8d61a6740a9c01fc2cdf6f2f5d10b612" prot="private" virt="non-virtual"><scope>WorldBSPNode</scope><name>m_pPositive</name></member>
      <member refid="d5/d11/classWorldNode_1af3a788a877259d4463ac9f8db2cbbe73" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>RemoveAllChildren</name></member>
      <member refid="d5/d11/classWorldNode_1ace2671efdd9ae08c6f5992078533607f" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>RemoveChild</name></member>
      <member refid="d4/d18/classWorldBSPNode_1ac971c406f10669fad73be097f9e3861e" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>SetCoplanarChild</name></member>
      <member refid="de/d40/classWorldBaseNode_1ae9db4009e11bb8f9aded69be4a2b3352" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>SetDebugFlags</name></member>
      <member refid="d4/d18/classWorldBSPNode_1a2e19a2baab5f31b1ce5dd67265986067" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>SetNegativeChild</name></member>
      <member refid="d4/d18/classWorldBSPNode_1af92dc4c16ed5cf6848de3ace3aaa78e2" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>SetPositiveChild</name></member>
      <member refid="de/d40/classWorldBaseNode_1a799dad89a91bb18111e77c1a65e650a3" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>Update</name></member>
      <member refid="de/d40/classWorldBaseNode_1ac9aaf65c7e38c8051a15c6b2f51ab8eb" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>UpdateWorldBV</name></member>
      <member refid="de/d40/classWorldBaseNode_1acd4c2683cf53d391727750a9adf149ed" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>UpdateWorldTransform</name></member>
      <member refid="de/d40/classWorldBaseNode_1ab1e3e2cd3df18d07511c206ad6f04116" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>WorldBaseNode</name></member>
      <member refid="d4/d18/classWorldBSPNode_1aeb8fc3f0942bf84256af2fbf5ba35fc7" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>WorldBSPNode</name></member>
      <member refid="de/d40/classWorldBaseNode_1ae933926ab6fe7298bb2779d061fdb70c" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>WorldBV</name></member>
      <member refid="d5/d11/classWorldNode_1af4adf665b01de872cce6b91b071ad48c" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>WorldNode</name></member>
      <member refid="d4/d18/classWorldBSPNode_1ad550fb67a212f3d6a664071eedb0773d" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>WorldPlane</name></member>
      <member refid="de/d40/classWorldBaseNode_1ac1a0c98e155f5cda06389567cd84e948" prot="public" virt="non-virtual"><scope>WorldBSPNode</scope><name>WorldTransform</name></member>
      <member refid="de/d40/classWorldBaseNode_1a45ed1d3d0c7837cb40f80070f57d41af" prot="public" virt="virtual"><scope>WorldBSPNode</scope><name>~WorldBaseNode</name></member>
      <member refid="d4/d18/classWorldBSPNode_1a2cb8a86893d4276fdfd1d93d2ee0e807" prot="public" virt="virtual"><scope>WorldBSPNode</scope><name>~WorldBSPNode</name></member>
      <member refid="d5/d11/classWorldNode_1a7bbbec5b61fc9d8f34e3811ff6c5fcaa" prot="public" virt="virtual"><scope>WorldBSPNode</scope><name>~WorldNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
