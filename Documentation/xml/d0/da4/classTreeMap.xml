<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="d0/da4/classTreeMap" kind="class" prot="public">
    <compoundname>TreeMap</compoundname>
    <basecompoundref refid="dc/d51/classDatastruct" prot="public" virt="non-virtual">Datastruct</basecompoundref>
    <includes refid="da/d29/TreeMap_8h" local="no">TreeMap.h</includes>
    <innerclass refid="d2/daf/classTreeMap_1_1Iterator" prot="public">TreeMap::Iterator</innerclass>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>Key</declname>
        <defname>Key</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d0/da4/classTreeMap_1a5bd72d4c4004ad5a7bd1fd59fdb91d7b" prot="public" static="no">
        <type><ref refid="d9/dd0/Platform_8h_1a7cc214a236ad3bb6ad435bdcf5262a3f" kindref="member">Int</ref>(*</type>
        <definition>typedef Int(* Comparator)(const Key &amp;rLeft, const Key &amp;rRight, Void *pUserData)</definition>
        <argsstring>)(const Key &amp;rLeft, const Key &amp;rRight, Void *pUserData)</argsstring>
        <name>Comparator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" line="54" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d0/da4/classTreeMap_1a27d1e78c521dfa3bb17788c5ad7c8792" prot="private" static="no" mutable="no">
        <type><ref refid="d0/da4/classTreeMap_1a5bd72d4c4004ad5a7bd1fd59fdb91d7b" kindref="member">Comparator</ref></type>
        <definition>Comparator m_pfCompare</definition>
        <argsstring></argsstring>
        <name>m_pfCompare</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" line="179" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d0/da4/classTreeMap_1a91f0e9a4012edb773b7a59705e4e90a0" prot="private" static="no" mutable="no">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref> *</type>
        <definition>Void* m_pUserData</definition>
        <argsstring></argsstring>
        <name>m_pUserData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" line="180" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d0/da4/classTreeMap_1ac7ae9616381aa58282a05810b230d876" prot="private" static="no" mutable="no">
        <type><ref refid="d9/d5d/classRedBlackTree" kindref="compound">RedBlackTree</ref>&lt; <ref refid="db/dd2/structTreeMapNode" kindref="compound">TreeMapNode</ref> &gt;</type>
        <definition>RedBlackTree&lt;TreeMapNode&gt; m_rbTreeMap</definition>
        <argsstring></argsstring>
        <name>m_rbTreeMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" line="182" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d0/da4/classTreeMap_1a8cac0c558b93bda7a8bd45f7a2490c21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TreeMap</definition>
        <argsstring>()</argsstring>
        <name>TreeMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" line="144"/>
      </memberdef>
      <memberdef kind="function" id="d0/da4/classTreeMap_1af30c00bb6d36440d067e005a0ad352bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~TreeMap</definition>
        <argsstring>()</argsstring>
        <name>~TreeMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" line="145"/>
      </memberdef>
      <memberdef kind="function" id="d0/da4/classTreeMap_1a605325d1c1fc3f3c761365595701f9c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>virtual Void UseMemoryContext</definition>
        <argsstring>(MemoryContextID idMemoryContext, const GChar *strAllocatorName)</argsstring>
        <name>UseMemoryContext</name>
        <reimplements refid="dc/d51/classDatastruct_1a605325d1c1fc3f3c761365595701f9c4">UseMemoryContext</reimplements>
        <param>
          <type><ref refid="d7/d7b/MemoryManager_8h_1af31b42dd6507009f3d5e5f71b991260b" kindref="member">MemoryContextID</ref></type>
          <declname>idMemoryContext</declname>
        </param>
        <param>
          <type>const <ref refid="d9/dd0/Platform_8h_1a178c928e74b49565d9ce41c8d9bb85f6" kindref="member">GChar</ref> *</type>
          <declname>strAllocatorName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" line="148"/>
      </memberdef>
      <memberdef kind="function" id="d0/da4/classTreeMap_1af0882680fadfbb5788e66f0107535ee2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void SetComparator</definition>
        <argsstring>(Comparator pfCompare, Void *pUserData=NULL)</argsstring>
        <name>SetComparator</name>
        <param>
          <type><ref refid="d0/da4/classTreeMap_1a5bd72d4c4004ad5a7bd1fd59fdb91d7b" kindref="member">Comparator</ref></type>
          <declname>pfCompare</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref> *</type>
          <declname>pUserData</declname>
          <defval><ref refid="d9/dd0/Platform_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" line="150"/>
      </memberdef>
      <memberdef kind="function" id="d0/da4/classTreeMap_1aab77352722e193be864ad3e317f0a967" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>virtual Void Create</definition>
        <argsstring>()</argsstring>
        <name>Create</name>
        <reimplements refid="dc/d51/classDatastruct_1a0609a196f6f3d0c6b77f63eb850c0ac7">Create</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" line="153"/>
      </memberdef>
      <memberdef kind="function" id="d0/da4/classTreeMap_1a04b98e1741147ccd8731588392091ac0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>virtual Void Destroy</definition>
        <argsstring>()</argsstring>
        <name>Destroy</name>
        <reimplements refid="dc/d51/classDatastruct_1a5f87413a244467d525a1e593ff2c1c27">Destroy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" line="154"/>
      </memberdef>
      <memberdef kind="function" id="d0/da4/classTreeMap_1abe6db4496cfdd90f917f4ca76d4bdcb1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
        <definition>virtual UInt MemorySize</definition>
        <argsstring>() const </argsstring>
        <name>MemorySize</name>
        <reimplements refid="dc/d51/classDatastruct_1a9797d1e194be5ac1f59da06f4017ab52">MemorySize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" line="156"/>
      </memberdef>
      <memberdef kind="function" id="d0/da4/classTreeMap_1a0956cac53fbbd2baead454e29106a8cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
        <definition>virtual UInt Count</definition>
        <argsstring>() const </argsstring>
        <name>Count</name>
        <reimplements refid="dc/d51/classDatastruct_1a64d0429c6ea513aff9aed72a84ac5e07">Count</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" line="157"/>
      </memberdef>
      <memberdef kind="function" id="d0/da4/classTreeMap_1aa31f188be923c718868036f9486390ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>virtual Void Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <reimplements refid="dc/d51/classDatastruct_1a12a20256ada86a94610094792cbc6e2b">Clear</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" line="159"/>
      </memberdef>
      <memberdef kind="function" id="d0/da4/classTreeMap_1a60b224d332e69bb1c4e08b1cc1dd9c27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; operator[]</definition>
        <argsstring>(const Key &amp;rhs)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const Key &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" line="162"/>
      </memberdef>
      <memberdef kind="function" id="d0/da4/classTreeMap_1a2d8a217793fead02ab812156a04b8c58" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; operator[]</definition>
        <argsstring>(const Key &amp;rhs) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>const Key &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" line="163"/>
      </memberdef>
      <memberdef kind="function" id="d0/da4/classTreeMap_1ab893ae3f0a02bb26ea0120e6c7d09a2b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/daf/classTreeMap_1_1Iterator" kindref="compound">Iterator</ref></type>
        <definition>Iterator Begin</definition>
        <argsstring>() const </argsstring>
        <name>Begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" line="165"/>
      </memberdef>
      <memberdef kind="function" id="d0/da4/classTreeMap_1ae0f83c629acc7673b972d04d32c4b23d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/daf/classTreeMap_1_1Iterator" kindref="compound">Iterator</ref></type>
        <definition>Iterator End</definition>
        <argsstring>() const </argsstring>
        <name>End</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" line="166"/>
      </memberdef>
      <memberdef kind="function" id="d0/da4/classTreeMap_1a3ec5bf1506e739c4104ad886a0a6b495" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/daf/classTreeMap_1_1Iterator" kindref="compound">Iterator</ref></type>
        <definition>Iterator Get</definition>
        <argsstring>(const Key &amp;rhs) const </argsstring>
        <name>Get</name>
        <param>
          <type>const Key &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" line="167"/>
      </memberdef>
      <memberdef kind="function" id="d0/da4/classTreeMap_1a477ba2249bb2fafc7b2f332f9541abeb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool Contains</definition>
        <argsstring>(const Key &amp;rKey) const </argsstring>
        <name>Contains</name>
        <param>
          <type>const Key &amp;</type>
          <declname>rKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" line="169"/>
      </memberdef>
      <memberdef kind="function" id="d0/da4/classTreeMap_1a8b688f887730f2f35996fd2f320a2df2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool Insert</definition>
        <argsstring>(const Key &amp;rKey, const T &amp;rItem, Iterator *outItem=NULL)</argsstring>
        <name>Insert</name>
        <param>
          <type>const Key &amp;</type>
          <declname>rKey</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>rItem</declname>
        </param>
        <param>
          <type><ref refid="d2/daf/classTreeMap_1_1Iterator" kindref="compound">Iterator</ref> *</type>
          <declname>outItem</declname>
          <defval><ref refid="d9/dd0/Platform_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" line="171"/>
      </memberdef>
      <memberdef kind="function" id="d0/da4/classTreeMap_1a6f2a73b09cbb7832693997e64154edbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool Remove</definition>
        <argsstring>(const Key &amp;rKey, T *outItem=NULL)</argsstring>
        <name>Remove</name>
        <param>
          <type>const Key &amp;</type>
          <declname>rKey</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>outItem</declname>
          <defval><ref refid="d9/dd0/Platform_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" line="172"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="d0/da4/classTreeMap_1a95b78fbbabb440d3e2e984c6f6fbaac1" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1a7cc214a236ad3bb6ad435bdcf5262a3f" kindref="member">Int</ref></type>
        <definition>static Int _NodeCompare</definition>
        <argsstring>(const TreeMapNode &amp;rLeft, const TreeMapNode &amp;rRight, Void *pUserData)</argsstring>
        <name>_NodeCompare</name>
        <param>
          <type>const <ref refid="db/dd2/structTreeMapNode" kindref="compound">TreeMapNode</ref> &amp;</type>
          <declname>rLeft</declname>
        </param>
        <param>
          <type>const <ref refid="db/dd2/structTreeMapNode" kindref="compound">TreeMapNode</ref> &amp;</type>
          <declname>rRight</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref> *</type>
          <declname>pUserData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" line="176"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="13018">
        <label>TreeMap&lt; Key, T &gt;</label>
        <link refid="d0/da4/classTreeMap"/>
        <childnode refid="13019" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13019">
        <label>Datastruct</label>
        <link refid="dc/d51/classDatastruct"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="13029">
        <label>T</label>
      </node>
      <node id="13028">
        <label>RBTreeColor</label>
      </node>
      <node id="13026">
        <label>RedBlackNode&lt; T &gt;</label>
        <link refid="da/d9d/structRedBlackNode"/>
        <childnode refid="13027" relation="usage">
          <edgelabel>pPrev</edgelabel>
          <edgelabel>pNext</edgelabel>
          <edgelabel>pParent</edgelabel>
          <edgelabel>pChild</edgelabel>
        </childnode>
        <childnode refid="13028" relation="usage">
          <edgelabel>iColor</edgelabel>
        </childnode>
        <childnode refid="13029" relation="usage">
          <edgelabel>Item</edgelabel>
        </childnode>
      </node>
      <node id="13025">
        <label>RedBlackTree&lt; TreeMapNode &gt;</label>
        <link refid="d9/d5d/classRedBlackTree"/>
        <childnode refid="13021" relation="public-inheritance">
        </childnode>
        <childnode refid="13026" relation="usage">
          <edgelabel>m_pEnd</edgelabel>
          <edgelabel>m_pHead</edgelabel>
          <edgelabel>m_pRoot</edgelabel>
          <edgelabel>sm_SentinelNode</edgelabel>
          <edgelabel>RBTREE_LEAF</edgelabel>
        </childnode>
        <childnode refid="13023" relation="usage">
          <edgelabel>m_iNodeCount</edgelabel>
        </childnode>
        <childnode refid="13030" relation="usage">
          <edgelabel>m_pfCompare</edgelabel>
        </childnode>
        <childnode refid="13032" relation="usage">
          <edgelabel>m_pUserData</edgelabel>
        </childnode>
      </node>
      <node id="13020">
        <label>TreeMap&lt; Key, T &gt;</label>
        <link refid="d0/da4/classTreeMap"/>
        <childnode refid="13021" relation="public-inheritance">
        </childnode>
        <childnode refid="13024" relation="usage">
          <edgelabel>m_pfCompare</edgelabel>
        </childnode>
        <childnode refid="13025" relation="usage">
          <edgelabel>m_rbTreeMap</edgelabel>
        </childnode>
        <childnode refid="13032" relation="usage">
          <edgelabel>m_pUserData</edgelabel>
        </childnode>
      </node>
      <node id="13023">
        <label>unsigned int</label>
      </node>
      <node id="13027">
        <label>struct _red_black_node *</label>
      </node>
      <node id="13030">
        <label>TreeMapNode&lt; Key, T &gt;</label>
        <link refid="db/dd2/structTreeMapNode"/>
        <childnode refid="13031" relation="usage">
          <edgelabel>nodeKey</edgelabel>
        </childnode>
        <childnode refid="13029" relation="usage">
          <edgelabel>nodeItem</edgelabel>
        </childnode>
      </node>
      <node id="13031">
        <label>Key</label>
      </node>
      <node id="13024">
        <label>Int(*)(const Key &amp;rLeft, const Key &amp;rRight, Void *pUserData)</label>
      </node>
      <node id="13022">
        <label>char</label>
      </node>
      <node id="13032">
        <label>Void *</label>
      </node>
      <node id="13021">
        <label>Datastruct</label>
        <link refid="dc/d51/classDatastruct"/>
        <childnode refid="13022" relation="usage">
          <edgelabel>m_strAllocatorName</edgelabel>
        </childnode>
        <childnode refid="13023" relation="usage">
          <edgelabel>m_idMemoryContext</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" line="36" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Table/TreeMap.h" bodystart="35" bodyend="183"/>
    <listofallmembers>
      <member refid="d0/da4/classTreeMap_1a95b78fbbabb440d3e2e984c6f6fbaac1" prot="private" virt="non-virtual"><scope>TreeMap</scope><name>_NodeCompare</name></member>
      <member refid="dc/d51/classDatastruct_1a4208dfdad6dc1178ee1f80481598500c" prot="protected" virt="non-virtual"><scope>TreeMap</scope><name>_SelectMemory</name></member>
      <member refid="dc/d51/classDatastruct_1ae0aad9bef0dc76ed43f8c4fc59a10d78" prot="protected" virt="non-virtual"><scope>TreeMap</scope><name>_UnSelectMemory</name></member>
      <member refid="d0/da4/classTreeMap_1ab893ae3f0a02bb26ea0120e6c7d09a2b" prot="public" virt="non-virtual"><scope>TreeMap</scope><name>Begin</name></member>
      <member refid="d0/da4/classTreeMap_1aa31f188be923c718868036f9486390ea" prot="public" virt="virtual"><scope>TreeMap</scope><name>Clear</name></member>
      <member refid="d0/da4/classTreeMap_1a5bd72d4c4004ad5a7bd1fd59fdb91d7b" prot="public" virt="non-virtual"><scope>TreeMap</scope><name>Comparator</name></member>
      <member refid="d0/da4/classTreeMap_1a477ba2249bb2fafc7b2f332f9541abeb" prot="public" virt="non-virtual"><scope>TreeMap</scope><name>Contains</name></member>
      <member refid="d0/da4/classTreeMap_1a0956cac53fbbd2baead454e29106a8cd" prot="public" virt="virtual"><scope>TreeMap</scope><name>Count</name></member>
      <member refid="d0/da4/classTreeMap_1aab77352722e193be864ad3e317f0a967" prot="public" virt="virtual"><scope>TreeMap</scope><name>Create</name></member>
      <member refid="dc/d51/classDatastruct_1aebb55795e668a005cf660ce216962a2f" prot="public" virt="non-virtual"><scope>TreeMap</scope><name>Datastruct</name></member>
      <member refid="d0/da4/classTreeMap_1a04b98e1741147ccd8731588392091ac0" prot="public" virt="virtual"><scope>TreeMap</scope><name>Destroy</name></member>
      <member refid="d0/da4/classTreeMap_1ae0f83c629acc7673b972d04d32c4b23d" prot="public" virt="non-virtual"><scope>TreeMap</scope><name>End</name></member>
      <member refid="d0/da4/classTreeMap_1a3ec5bf1506e739c4104ad886a0a6b495" prot="public" virt="non-virtual"><scope>TreeMap</scope><name>Get</name></member>
      <member refid="d0/da4/classTreeMap_1a8b688f887730f2f35996fd2f320a2df2" prot="public" virt="non-virtual"><scope>TreeMap</scope><name>Insert</name></member>
      <member refid="dc/d51/classDatastruct_1a4e2abc9751fdc8571b9d9a1d02639ebe" prot="public" virt="non-virtual"><scope>TreeMap</scope><name>IsEmpty</name></member>
      <member refid="d0/da4/classTreeMap_1a27d1e78c521dfa3bb17788c5ad7c8792" prot="private" virt="non-virtual"><scope>TreeMap</scope><name>m_pfCompare</name></member>
      <member refid="d0/da4/classTreeMap_1a91f0e9a4012edb773b7a59705e4e90a0" prot="private" virt="non-virtual"><scope>TreeMap</scope><name>m_pUserData</name></member>
      <member refid="d0/da4/classTreeMap_1ac7ae9616381aa58282a05810b230d876" prot="private" virt="non-virtual"><scope>TreeMap</scope><name>m_rbTreeMap</name></member>
      <member refid="d0/da4/classTreeMap_1abe6db4496cfdd90f917f4ca76d4bdcb1" prot="public" virt="virtual"><scope>TreeMap</scope><name>MemorySize</name></member>
      <member refid="d0/da4/classTreeMap_1a60b224d332e69bb1c4e08b1cc1dd9c27" prot="public" virt="non-virtual"><scope>TreeMap</scope><name>operator[]</name></member>
      <member refid="d0/da4/classTreeMap_1a2d8a217793fead02ab812156a04b8c58" prot="public" virt="non-virtual"><scope>TreeMap</scope><name>operator[]</name></member>
      <member refid="d0/da4/classTreeMap_1a6f2a73b09cbb7832693997e64154edbf" prot="public" virt="non-virtual"><scope>TreeMap</scope><name>Remove</name></member>
      <member refid="d0/da4/classTreeMap_1af0882680fadfbb5788e66f0107535ee2" prot="public" virt="non-virtual"><scope>TreeMap</scope><name>SetComparator</name></member>
      <member refid="d0/da4/classTreeMap_1a8cac0c558b93bda7a8bd45f7a2490c21" prot="public" virt="non-virtual"><scope>TreeMap</scope><name>TreeMap</name></member>
      <member refid="d0/da4/classTreeMap_1a605325d1c1fc3f3c761365595701f9c4" prot="public" virt="virtual"><scope>TreeMap</scope><name>UseMemoryContext</name></member>
      <member refid="dc/d51/classDatastruct_1a59e1e9769598d5606e0a335692f89c15" prot="public" virt="virtual"><scope>TreeMap</scope><name>~Datastruct</name></member>
      <member refid="d0/da4/classTreeMap_1af30c00bb6d36440d067e005a0ad352bc" prot="public" virt="virtual"><scope>TreeMap</scope><name>~TreeMap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
