<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="d8/d3f/classRDBTreeOperator" kind="class" prot="public">
    <compoundname>RDBTreeOperator</compoundname>
    <includes refid="d3/dd8/RDBTreeOperator_8h" local="no">RDBTreeOperator.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d8/d3f/classRDBTreeOperator_1a7354dd403c96569955e146dd00507f9f" prot="private" static="no" mutable="no">
        <type><ref refid="db/d5b/classRDBPersistentStorage" kindref="compound">RDBPersistentStorage</ref> *</type>
        <definition>RDBPersistentStorage* m_pStorage</definition>
        <argsstring></argsstring>
        <name>m_pStorage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="136" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d3f/classRDBTreeOperator_1a0c80d10281c072529445bf3d501432de" prot="private" static="no" mutable="no">
        <type><ref refid="d5/dae/RDBFileStructure_8h_1af0e65e24a40b042e4d2aed9cb551f735" kindref="member">RDB_ChunkTable</ref></type>
        <definition>RDB_ChunkTable m_iCurRoot</definition>
        <argsstring></argsstring>
        <name>m_iCurRoot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="137" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1a15fa698aec9bb46c43849ca3000fb961" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RDBTreeOperator</definition>
        <argsstring>(RDBPersistentStorage *pStorage)</argsstring>
        <name>RDBTreeOperator</name>
        <param>
          <type><ref refid="db/d5b/classRDBPersistentStorage" kindref="compound">RDBPersistentStorage</ref> *</type>
          <declname>pStorage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="59"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1af0eac5a8287fb0c59f11f971553434cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~RDBTreeOperator</definition>
        <argsstring>()</argsstring>
        <name>~RDBTreeOperator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="60"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1a3f6d302cb9f58661b9abd2f3e7daffe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool SearchDirectory</definition>
        <argsstring>(const RDB_BTreeKeyData &amp;rKey, RDB_BTreeItem *outItem)</argsstring>
        <name>SearchDirectory</name>
        <param>
          <type>const <ref refid="d2/d2a/structRDB__BTreeKeyData" kindref="compound">RDB_BTreeKeyData</ref> &amp;</type>
          <declname>rKey</declname>
        </param>
        <param>
          <type><ref refid="df/dec/structRDB__BTreeItem" kindref="compound">RDB_BTreeItem</ref> *</type>
          <declname>outItem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="63"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1a966ce79b4be4da34480849478b95076f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool SearchResource</definition>
        <argsstring>(const RDB_BTreeKeyData &amp;rKey, RDB_BTreeItem *outItem)</argsstring>
        <name>SearchResource</name>
        <param>
          <type>const <ref refid="d2/d2a/structRDB__BTreeKeyData" kindref="compound">RDB_BTreeKeyData</ref> &amp;</type>
          <declname>rKey</declname>
        </param>
        <param>
          <type><ref refid="df/dec/structRDB__BTreeItem" kindref="compound">RDB_BTreeItem</ref> *</type>
          <declname>outItem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="64"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1a53d8501ee4bbefbae0474dc2bc553450" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void ListSubDirectories</definition>
        <argsstring>(RDB_DirectoryID idDirectory, Array&lt; RDB_BTreeItem &gt; *outSubDirectories)</argsstring>
        <name>ListSubDirectories</name>
        <param>
          <type><ref refid="d5/dae/RDBFileStructure_8h_1ad3292a503b9997c14123d22beab510f3" kindref="member">RDB_DirectoryID</ref></type>
          <declname>idDirectory</declname>
        </param>
        <param>
          <type><ref refid="d0/d26/classArray" kindref="compound">Array</ref>&lt; <ref refid="df/dec/structRDB__BTreeItem" kindref="compound">RDB_BTreeItem</ref> &gt; *</type>
          <declname>outSubDirectories</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="67"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1ab6117a24d0c70094fa9ff6f26a5569d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void ListResources</definition>
        <argsstring>(RDB_DirectoryID idDirectory, Array&lt; RDB_BTreeItem &gt; *outResources)</argsstring>
        <name>ListResources</name>
        <param>
          <type><ref refid="d5/dae/RDBFileStructure_8h_1ad3292a503b9997c14123d22beab510f3" kindref="member">RDB_DirectoryID</ref></type>
          <declname>idDirectory</declname>
        </param>
        <param>
          <type><ref refid="d0/d26/classArray" kindref="compound">Array</ref>&lt; <ref refid="df/dec/structRDB__BTreeItem" kindref="compound">RDB_BTreeItem</ref> &gt; *</type>
          <declname>outResources</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="68"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1ac4b1fa3be0bb13f6e4398600e591f82c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool InsertDirectory</definition>
        <argsstring>(const RDB_BTreeItem &amp;rItem)</argsstring>
        <name>InsertDirectory</name>
        <param>
          <type>const <ref refid="df/dec/structRDB__BTreeItem" kindref="compound">RDB_BTreeItem</ref> &amp;</type>
          <declname>rItem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="71"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1a4b52d1faa27fb5040a91db7d28028df0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool InsertResource</definition>
        <argsstring>(const RDB_BTreeItem &amp;rItem)</argsstring>
        <name>InsertResource</name>
        <param>
          <type>const <ref refid="df/dec/structRDB__BTreeItem" kindref="compound">RDB_BTreeItem</ref> &amp;</type>
          <declname>rItem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="72"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1ae4aea3d4b8feaec29711288202f2d2ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool RemoveDirectory</definition>
        <argsstring>(const RDB_BTreeKeyData &amp;rKey)</argsstring>
        <name>RemoveDirectory</name>
        <param>
          <type>const <ref refid="d2/d2a/structRDB__BTreeKeyData" kindref="compound">RDB_BTreeKeyData</ref> &amp;</type>
          <declname>rKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="75"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1a45bb72f15051bf87e1f9c4826a282122" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool RemoveResource</definition>
        <argsstring>(const RDB_BTreeKeyData &amp;rKey)</argsstring>
        <name>RemoveResource</name>
        <param>
          <type>const <ref refid="d2/d2a/structRDB__BTreeKeyData" kindref="compound">RDB_BTreeKeyData</ref> &amp;</type>
          <declname>rKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="76"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1a5f9afe5cf0fc1a2a6cd33428fcf861f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool UpdateResource</definition>
        <argsstring>(const RDB_BTreeKeyData &amp;rKey, const RDB_ResourceDescriptor &amp;descResource)</argsstring>
        <name>UpdateResource</name>
        <param>
          <type>const <ref refid="d2/d2a/structRDB__BTreeKeyData" kindref="compound">RDB_BTreeKeyData</ref> &amp;</type>
          <declname>rKey</declname>
        </param>
        <param>
          <type>const <ref refid="df/dc2/structRDB__ResourceDescriptor" kindref="compound">RDB_ResourceDescriptor</ref> &amp;</type>
          <declname>descResource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="79"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1ae13fb676ee9f55fa7fb5f74ad7f7494a" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1a7cc214a236ad3bb6ad435bdcf5262a3f" kindref="member">Int</ref></type>
        <definition>static Int _BTree_Compare</definition>
        <argsstring>(const RDB_BTreeKeyData &amp;rLeft, const RDB_BTreeKeyData &amp;rRight, UInt iPrefixSize=0)</argsstring>
        <name>_BTree_Compare</name>
        <param>
          <type>const <ref refid="d2/d2a/structRDB__BTreeKeyData" kindref="compound">RDB_BTreeKeyData</ref> &amp;</type>
          <declname>rLeft</declname>
        </param>
        <param>
          <type>const <ref refid="d2/d2a/structRDB__BTreeKeyData" kindref="compound">RDB_BTreeKeyData</ref> &amp;</type>
          <declname>rRight</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iPrefixSize</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="83"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1a921038da8a901573edc743791d4bae6f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool _BTree_SearchKey</definition>
        <argsstring>(const RDB_Chunk_BTreeNode *pNode, const RDB_BTreeKeyData &amp;rKey, UInt *outIndex) const </argsstring>
        <name>_BTree_SearchKey</name>
        <param>
          <type>const <ref refid="d7/d54/structRDB__Chunk__BTreeNode" kindref="compound">RDB_Chunk_BTreeNode</ref> *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type>const <ref refid="d2/d2a/structRDB__BTreeKeyData" kindref="compound">RDB_BTreeKeyData</ref> &amp;</type>
          <declname>rKey</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref> *</type>
          <declname>outIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="86"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1a55bde4ca79f542c3bec0a01618d1c7c5" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool _BTree_SearchItem</definition>
        <argsstring>(const RDB_Chunk_BTreeLeaf *pLeaf, const RDB_BTreeKeyData &amp;rKey, UInt *outIndex) const </argsstring>
        <name>_BTree_SearchItem</name>
        <param>
          <type>const <ref refid="d6/d7f/structRDB__Chunk__BTreeLeaf" kindref="compound">RDB_Chunk_BTreeLeaf</ref> *</type>
          <declname>pLeaf</declname>
        </param>
        <param>
          <type>const <ref refid="d2/d2a/structRDB__BTreeKeyData" kindref="compound">RDB_BTreeKeyData</ref> &amp;</type>
          <declname>rKey</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref> *</type>
          <declname>outIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="87"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1ad71db4dad9075e962f51b264bd7c5cbf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _BTree_InsertKey</definition>
        <argsstring>(RDB_Chunk_BTreeNode *pNode, UInt iIndex, const RDB_BTreeKey &amp;rKey)</argsstring>
        <name>_BTree_InsertKey</name>
        <param>
          <type><ref refid="d7/d54/structRDB__Chunk__BTreeNode" kindref="compound">RDB_Chunk_BTreeNode</ref> *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iIndex</declname>
        </param>
        <param>
          <type>const <ref refid="d9/d05/structRDB__BTreeKey" kindref="compound">RDB_BTreeKey</ref> &amp;</type>
          <declname>rKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="89"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1a58b2bfb724a19298c204f175471b1186" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _BTree_InsertItem</definition>
        <argsstring>(RDB_Chunk_BTreeLeaf *pLeaf, UInt iIndex, const RDB_BTreeItem &amp;rItem)</argsstring>
        <name>_BTree_InsertItem</name>
        <param>
          <type><ref refid="d6/d7f/structRDB__Chunk__BTreeLeaf" kindref="compound">RDB_Chunk_BTreeLeaf</ref> *</type>
          <declname>pLeaf</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iIndex</declname>
        </param>
        <param>
          <type>const <ref refid="df/dec/structRDB__BTreeItem" kindref="compound">RDB_BTreeItem</ref> &amp;</type>
          <declname>rItem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="90"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1aecad6f3e8bb45ba29bd6f5b09426ab9f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _BTree_RemoveKey</definition>
        <argsstring>(RDB_Chunk_BTreeNode *pNode, UInt iIndex)</argsstring>
        <name>_BTree_RemoveKey</name>
        <param>
          <type><ref refid="d7/d54/structRDB__Chunk__BTreeNode" kindref="compound">RDB_Chunk_BTreeNode</ref> *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="92"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1a4c104d6e5b7bfc825b471acccc67103e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _BTree_RemoveItem</definition>
        <argsstring>(RDB_Chunk_BTreeLeaf *pLeaf, UInt iIndex)</argsstring>
        <name>_BTree_RemoveItem</name>
        <param>
          <type><ref refid="d6/d7f/structRDB__Chunk__BTreeLeaf" kindref="compound">RDB_Chunk_BTreeLeaf</ref> *</type>
          <declname>pLeaf</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="93"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1a55ef6509f9139cdd0ec670ca8c8cd7ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _BTree_SelectBrotherNode</definition>
        <argsstring>(const RDB_Chunk_BTreeNode *pParentNode, UInt iParentIndex, Bool bMinElseMax, Bool *outSelectPrev, RDB_ChunkPtr *outBrotherStorage, RDB_Chunk_BTreeNode **outBrotherNode)</argsstring>
        <name>_BTree_SelectBrotherNode</name>
        <param>
          <type>const <ref refid="d7/d54/structRDB__Chunk__BTreeNode" kindref="compound">RDB_Chunk_BTreeNode</ref> *</type>
          <declname>pParentNode</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iParentIndex</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
          <declname>bMinElseMax</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref> *</type>
          <declname>outSelectPrev</declname>
        </param>
        <param>
          <type><ref refid="d1/df5/structRDB__ChunkPtr" kindref="compound">RDB_ChunkPtr</ref> *</type>
          <declname>outBrotherStorage</declname>
        </param>
        <param>
          <type><ref refid="d7/d54/structRDB__Chunk__BTreeNode" kindref="compound">RDB_Chunk_BTreeNode</ref> **</type>
          <declname>outBrotherNode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="96"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1a6ff97a1f8ba164db25b64e7ce4bfa024" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _BTree_SelectBrotherLeaf</definition>
        <argsstring>(const RDB_Chunk_BTreeNode *pParentNode, UInt iParentIndex, const RDB_Chunk_BTreeLeaf *pLeaf, Bool bMinElseMax, Bool *outSelectPrev, RDB_ChunkPtr *outBrotherStorage, RDB_Chunk_BTreeLeaf **outBrotherLeaf)</argsstring>
        <name>_BTree_SelectBrotherLeaf</name>
        <param>
          <type>const <ref refid="d7/d54/structRDB__Chunk__BTreeNode" kindref="compound">RDB_Chunk_BTreeNode</ref> *</type>
          <declname>pParentNode</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iParentIndex</declname>
        </param>
        <param>
          <type>const <ref refid="d6/d7f/structRDB__Chunk__BTreeLeaf" kindref="compound">RDB_Chunk_BTreeLeaf</ref> *</type>
          <declname>pLeaf</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
          <declname>bMinElseMax</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref> *</type>
          <declname>outSelectPrev</declname>
        </param>
        <param>
          <type><ref refid="d1/df5/structRDB__ChunkPtr" kindref="compound">RDB_ChunkPtr</ref> *</type>
          <declname>outBrotherStorage</declname>
        </param>
        <param>
          <type><ref refid="d6/d7f/structRDB__Chunk__BTreeLeaf" kindref="compound">RDB_Chunk_BTreeLeaf</ref> **</type>
          <declname>outBrotherLeaf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="99"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1a447ac9dd2f65db019eacce1db6eecd91" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _BTree_BalanceLeft_Nodes</definition>
        <argsstring>(RDB_BTreeKeyData *pParentKey, RDB_Chunk_BTreeNode *pLeftNode, RDB_Chunk_BTreeNode *pRightNode)</argsstring>
        <name>_BTree_BalanceLeft_Nodes</name>
        <param>
          <type><ref refid="d2/d2a/structRDB__BTreeKeyData" kindref="compound">RDB_BTreeKeyData</ref> *</type>
          <declname>pParentKey</declname>
        </param>
        <param>
          <type><ref refid="d7/d54/structRDB__Chunk__BTreeNode" kindref="compound">RDB_Chunk_BTreeNode</ref> *</type>
          <declname>pLeftNode</declname>
        </param>
        <param>
          <type><ref refid="d7/d54/structRDB__Chunk__BTreeNode" kindref="compound">RDB_Chunk_BTreeNode</ref> *</type>
          <declname>pRightNode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="103"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1aafbe714666d7f1f4db9af57086e25ccc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _BTree_BalanceRight_Nodes</definition>
        <argsstring>(RDB_BTreeKeyData *pParentKey, RDB_Chunk_BTreeNode *pLeftNode, RDB_Chunk_BTreeNode *pRightNode)</argsstring>
        <name>_BTree_BalanceRight_Nodes</name>
        <param>
          <type><ref refid="d2/d2a/structRDB__BTreeKeyData" kindref="compound">RDB_BTreeKeyData</ref> *</type>
          <declname>pParentKey</declname>
        </param>
        <param>
          <type><ref refid="d7/d54/structRDB__Chunk__BTreeNode" kindref="compound">RDB_Chunk_BTreeNode</ref> *</type>
          <declname>pLeftNode</declname>
        </param>
        <param>
          <type><ref refid="d7/d54/structRDB__Chunk__BTreeNode" kindref="compound">RDB_Chunk_BTreeNode</ref> *</type>
          <declname>pRightNode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="105"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1a8111848e8f64fc6bfc69b2f2879cec12" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _BTree_BalanceLeft_Leaves</definition>
        <argsstring>(RDB_BTreeKeyData *pParentKey, RDB_Chunk_BTreeLeaf *pLeftLeaf, RDB_Chunk_BTreeLeaf *pRightLeaf)</argsstring>
        <name>_BTree_BalanceLeft_Leaves</name>
        <param>
          <type><ref refid="d2/d2a/structRDB__BTreeKeyData" kindref="compound">RDB_BTreeKeyData</ref> *</type>
          <declname>pParentKey</declname>
        </param>
        <param>
          <type><ref refid="d6/d7f/structRDB__Chunk__BTreeLeaf" kindref="compound">RDB_Chunk_BTreeLeaf</ref> *</type>
          <declname>pLeftLeaf</declname>
        </param>
        <param>
          <type><ref refid="d6/d7f/structRDB__Chunk__BTreeLeaf" kindref="compound">RDB_Chunk_BTreeLeaf</ref> *</type>
          <declname>pRightLeaf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="107"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1a383ba187b8b20c43567378bc9b461234" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _BTree_BalanceRight_Leaves</definition>
        <argsstring>(RDB_BTreeKeyData *pParentKey, RDB_Chunk_BTreeLeaf *pLeftLeaf, RDB_Chunk_BTreeLeaf *pRightLeaf)</argsstring>
        <name>_BTree_BalanceRight_Leaves</name>
        <param>
          <type><ref refid="d2/d2a/structRDB__BTreeKeyData" kindref="compound">RDB_BTreeKeyData</ref> *</type>
          <declname>pParentKey</declname>
        </param>
        <param>
          <type><ref refid="d6/d7f/structRDB__Chunk__BTreeLeaf" kindref="compound">RDB_Chunk_BTreeLeaf</ref> *</type>
          <declname>pLeftLeaf</declname>
        </param>
        <param>
          <type><ref refid="d6/d7f/structRDB__Chunk__BTreeLeaf" kindref="compound">RDB_Chunk_BTreeLeaf</ref> *</type>
          <declname>pRightLeaf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="109"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1a7d4c2c240a5aac6c99ff9b4e1e47e07b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool _BTree_Search</definition>
        <argsstring>(const RDB_ChunkPtr &amp;pStorage, const RDB_BTreeKeyData &amp;rKey, RDB_ChunkPtr *outLeafStorage, const RDB_Chunk_BTreeLeaf **outLeaf, UInt *outIndex)</argsstring>
        <name>_BTree_Search</name>
        <param>
          <type>const <ref refid="d1/df5/structRDB__ChunkPtr" kindref="compound">RDB_ChunkPtr</ref> &amp;</type>
          <declname>pStorage</declname>
        </param>
        <param>
          <type>const <ref refid="d2/d2a/structRDB__BTreeKeyData" kindref="compound">RDB_BTreeKeyData</ref> &amp;</type>
          <declname>rKey</declname>
        </param>
        <param>
          <type><ref refid="d1/df5/structRDB__ChunkPtr" kindref="compound">RDB_ChunkPtr</ref> *</type>
          <declname>outLeafStorage</declname>
        </param>
        <param>
          <type>const <ref refid="d6/d7f/structRDB__Chunk__BTreeLeaf" kindref="compound">RDB_Chunk_BTreeLeaf</ref> **</type>
          <declname>outLeaf</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref> *</type>
          <declname>outIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="113"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1a8905c112dc83a50680adba35390c8331" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _BTree_SplitNode</definition>
        <argsstring>(RDB_Chunk_BTreeNode *pNode, UInt iInsertIndex, const RDB_BTreeKeyData &amp;rKeyData, const RDB_ChunkPtr &amp;rRightChild, RDB_BTreeKeyData *outUpwardKey, RDB_ChunkPtr *outNewStorage)</argsstring>
        <name>_BTree_SplitNode</name>
        <param>
          <type><ref refid="d7/d54/structRDB__Chunk__BTreeNode" kindref="compound">RDB_Chunk_BTreeNode</ref> *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iInsertIndex</declname>
        </param>
        <param>
          <type>const <ref refid="d2/d2a/structRDB__BTreeKeyData" kindref="compound">RDB_BTreeKeyData</ref> &amp;</type>
          <declname>rKeyData</declname>
        </param>
        <param>
          <type>const <ref refid="d1/df5/structRDB__ChunkPtr" kindref="compound">RDB_ChunkPtr</ref> &amp;</type>
          <declname>rRightChild</declname>
        </param>
        <param>
          <type><ref refid="d2/d2a/structRDB__BTreeKeyData" kindref="compound">RDB_BTreeKeyData</ref> *</type>
          <declname>outUpwardKey</declname>
        </param>
        <param>
          <type><ref refid="d1/df5/structRDB__ChunkPtr" kindref="compound">RDB_ChunkPtr</ref> *</type>
          <declname>outNewStorage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="118"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1a262e396896bb8727e47974c17b6c5f3e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _BTree_SplitLeaf</definition>
        <argsstring>(const RDB_ChunkPtr &amp;pStorage, RDB_Chunk_BTreeLeaf *pLeaf, UInt iInsertIndex, const RDB_BTreeItem &amp;rItem, RDB_BTreeKeyData *outUpwardKey, RDB_ChunkPtr *outNewStorage)</argsstring>
        <name>_BTree_SplitLeaf</name>
        <param>
          <type>const <ref refid="d1/df5/structRDB__ChunkPtr" kindref="compound">RDB_ChunkPtr</ref> &amp;</type>
          <declname>pStorage</declname>
        </param>
        <param>
          <type><ref refid="d6/d7f/structRDB__Chunk__BTreeLeaf" kindref="compound">RDB_Chunk_BTreeLeaf</ref> *</type>
          <declname>pLeaf</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
          <declname>iInsertIndex</declname>
        </param>
        <param>
          <type>const <ref refid="df/dec/structRDB__BTreeItem" kindref="compound">RDB_BTreeItem</ref> &amp;</type>
          <declname>rItem</declname>
        </param>
        <param>
          <type><ref refid="d2/d2a/structRDB__BTreeKeyData" kindref="compound">RDB_BTreeKeyData</ref> *</type>
          <declname>outUpwardKey</declname>
        </param>
        <param>
          <type><ref refid="d1/df5/structRDB__ChunkPtr" kindref="compound">RDB_ChunkPtr</ref> *</type>
          <declname>outNewStorage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="121"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1af7a32cf5b871ac3b2a79afd48fe6048b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool _BTree_Insert</definition>
        <argsstring>(const RDB_ChunkPtr &amp;pStorage, const RDB_BTreeItem &amp;rItem, RDB_BTreeInsertParameters *outParameters=NULL)</argsstring>
        <name>_BTree_Insert</name>
        <param>
          <type>const <ref refid="d1/df5/structRDB__ChunkPtr" kindref="compound">RDB_ChunkPtr</ref> &amp;</type>
          <declname>pStorage</declname>
        </param>
        <param>
          <type>const <ref refid="df/dec/structRDB__BTreeItem" kindref="compound">RDB_BTreeItem</ref> &amp;</type>
          <declname>rItem</declname>
        </param>
        <param>
          <type><ref refid="db/de0/structRDB__BTreeInsertParameters" kindref="compound">RDB_BTreeInsertParameters</ref> *</type>
          <declname>outParameters</declname>
          <defval><ref refid="d9/dd0/Platform_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="124"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1a0ac9db6c3283280e2afa9cef134f304a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _BTree_MergeNodes</definition>
        <argsstring>(const RDB_BTreeKeyData *pParentKey, RDB_Chunk_BTreeNode *pLeftNode, RDB_Chunk_BTreeNode *pRightNode)</argsstring>
        <name>_BTree_MergeNodes</name>
        <param>
          <type>const <ref refid="d2/d2a/structRDB__BTreeKeyData" kindref="compound">RDB_BTreeKeyData</ref> *</type>
          <declname>pParentKey</declname>
        </param>
        <param>
          <type><ref refid="d7/d54/structRDB__Chunk__BTreeNode" kindref="compound">RDB_Chunk_BTreeNode</ref> *</type>
          <declname>pLeftNode</declname>
        </param>
        <param>
          <type><ref refid="d7/d54/structRDB__Chunk__BTreeNode" kindref="compound">RDB_Chunk_BTreeNode</ref> *</type>
          <declname>pRightNode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="128"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1adfcb129d85b70b7b93f9775a10607dcf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _BTree_MergeLeaves</definition>
        <argsstring>(const RDB_ChunkPtr &amp;pLeftStorage, RDB_Chunk_BTreeLeaf *pLeftLeaf, RDB_Chunk_BTreeLeaf *pRightLeaf)</argsstring>
        <name>_BTree_MergeLeaves</name>
        <param>
          <type>const <ref refid="d1/df5/structRDB__ChunkPtr" kindref="compound">RDB_ChunkPtr</ref> &amp;</type>
          <declname>pLeftStorage</declname>
        </param>
        <param>
          <type><ref refid="d6/d7f/structRDB__Chunk__BTreeLeaf" kindref="compound">RDB_Chunk_BTreeLeaf</ref> *</type>
          <declname>pLeftLeaf</declname>
        </param>
        <param>
          <type><ref refid="d6/d7f/structRDB__Chunk__BTreeLeaf" kindref="compound">RDB_Chunk_BTreeLeaf</ref> *</type>
          <declname>pRightLeaf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="130"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/classRDBTreeOperator_1a90c17b4ec0a409fbf50ba341ba03e453" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool _BTree_Remove</definition>
        <argsstring>(const RDB_ChunkPtr &amp;pStorage, const RDB_BTreeKeyData &amp;rKey, RDB_BTreeRemoveParameters *outParameters=NULL)</argsstring>
        <name>_BTree_Remove</name>
        <param>
          <type>const <ref refid="d1/df5/structRDB__ChunkPtr" kindref="compound">RDB_ChunkPtr</ref> &amp;</type>
          <declname>pStorage</declname>
        </param>
        <param>
          <type>const <ref refid="d2/d2a/structRDB__BTreeKeyData" kindref="compound">RDB_BTreeKeyData</ref> &amp;</type>
          <declname>rKey</declname>
        </param>
        <param>
          <type><ref refid="d6/d56/structRDB__BTreeRemoveParameters" kindref="compound">RDB_BTreeRemoveParameters</ref> *</type>
          <declname>outParameters</declname>
          <defval><ref refid="d9/dd0/Platform_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="133"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="10277">
        <label>T</label>
      </node>
      <node id="10276">
        <label>RBTreeColor</label>
      </node>
      <node id="10297">
        <label>void *</label>
      </node>
      <node id="10274">
        <label>RedBlackNode&lt; T &gt;</label>
        <link refid="da/d9d/structRedBlackNode"/>
        <childnode refid="10275" relation="usage">
          <edgelabel>pPrev</edgelabel>
          <edgelabel>pNext</edgelabel>
          <edgelabel>pParent</edgelabel>
          <edgelabel>pChild</edgelabel>
        </childnode>
        <childnode refid="10276" relation="usage">
          <edgelabel>iColor</edgelabel>
        </childnode>
        <childnode refid="10277" relation="usage">
          <edgelabel>Item</edgelabel>
        </childnode>
      </node>
      <node id="10294">
        <label>HFile</label>
        <link refid="d9/da7/classHFile"/>
        <childnode refid="10295" relation="usage">
          <edgelabel>m_strPathName</edgelabel>
        </childnode>
        <childnode refid="10296" relation="usage">
          <edgelabel>m_iAttributes</edgelabel>
          <edgelabel>m_iMode</edgelabel>
          <edgelabel>m_iFlags</edgelabel>
        </childnode>
        <childnode refid="10297" relation="usage">
          <edgelabel>m_hFile</edgelabel>
        </childnode>
      </node>
      <node id="10273">
        <label>RedBlackTree&lt; TreeMapNode &gt;</label>
        <link refid="d9/d5d/classRedBlackTree"/>
        <childnode refid="10270" relation="public-inheritance">
        </childnode>
        <childnode refid="10274" relation="usage">
          <edgelabel>m_pEnd</edgelabel>
          <edgelabel>m_pHead</edgelabel>
          <edgelabel>m_pRoot</edgelabel>
          <edgelabel>sm_SentinelNode</edgelabel>
          <edgelabel>RBTREE_LEAF</edgelabel>
        </childnode>
        <childnode refid="10272" relation="usage">
          <edgelabel>m_iNodeCount</edgelabel>
        </childnode>
        <childnode refid="10278" relation="usage">
          <edgelabel>m_pfCompare</edgelabel>
        </childnode>
        <childnode refid="10280" relation="usage">
          <edgelabel>m_pUserData</edgelabel>
        </childnode>
      </node>
      <node id="10289">
        <label>SplayNode&lt; T &gt;</label>
        <link refid="d2/d4c/structSplayNode"/>
        <childnode refid="10290" relation="usage">
          <edgelabel>pParent</edgelabel>
          <edgelabel>pChild</edgelabel>
        </childnode>
        <childnode refid="10277" relation="usage">
          <edgelabel>Item</edgelabel>
        </childnode>
      </node>
      <node id="10291">
        <label>UInt64</label>
      </node>
      <node id="10286">
        <label>RDB_BlockAllocator</label>
        <link refid="d8/d40/structRDB__BlockAllocator"/>
        <childnode refid="10281" relation="usage">
          <edgelabel>iTotalBlocks</edgelabel>
          <edgelabel>iFreeBlocks</edgelabel>
        </childnode>
        <childnode refid="10272" relation="usage">
          <edgelabel>idNextFreeBlock</edgelabel>
        </childnode>
      </node>
      <node id="10265">
        <label>RDBPersistentStorage</label>
        <link refid="db/d5b/classRDBPersistentStorage"/>
        <childnode refid="10266" relation="usage">
          <edgelabel>m_shaTransactionChecksum</edgelabel>
        </childnode>
        <childnode refid="10269" relation="usage">
          <edgelabel>m_cacheMap</edgelabel>
        </childnode>
        <childnode refid="10282" relation="usage">
          <edgelabel>m_dbMasterHeader</edgelabel>
        </childnode>
        <childnode refid="10271" relation="usage">
          <edgelabel>m_strFileName</edgelabel>
        </childnode>
        <childnode refid="10288" relation="usage">
          <edgelabel>m_cacheQueue</edgelabel>
        </childnode>
        <childnode refid="10291" relation="usage">
          <edgelabel>m_iTransactionOffset</edgelabel>
        </childnode>
        <childnode refid="10281" relation="usage">
          <edgelabel>m_iCacheSize</edgelabel>
          <edgelabel>m_iTransactionStepCount</edgelabel>
        </childnode>
        <childnode refid="10292" relation="usage">
          <edgelabel>m_iLockType</edgelabel>
        </childnode>
        <childnode refid="10293" relation="usage">
          <edgelabel>m_bSyncStateData</edgelabel>
          <edgelabel>m_bLocked</edgelabel>
          <edgelabel>m_bValidFile</edgelabel>
        </childnode>
        <childnode refid="10294" relation="usage">
          <edgelabel>m_hFile</edgelabel>
        </childnode>
      </node>
      <node id="10269">
        <label>TreeMap&lt; RDB_FilePtr, RDB_CacheEntry &gt;</label>
        <link refid="d0/da4/classTreeMap"/>
        <childnode refid="10270" relation="public-inheritance">
        </childnode>
        <childnode refid="10273" relation="usage">
          <edgelabel>m_rbTreeMap</edgelabel>
        </childnode>
        <childnode refid="10281" relation="usage">
          <edgelabel>m_pfCompare</edgelabel>
        </childnode>
        <childnode refid="10280" relation="usage">
          <edgelabel>m_pUserData</edgelabel>
        </childnode>
      </node>
      <node id="10268">
        <label>ULong</label>
      </node>
      <node id="10287">
        <label>RDB_ChunkAllocator</label>
        <link refid="d2/d33/structRDB__ChunkAllocator"/>
        <childnode refid="10284" relation="usage">
          <edgelabel>pNextFreeChunk</edgelabel>
        </childnode>
        <childnode refid="10281" relation="usage">
          <edgelabel>iBlockCount</edgelabel>
          <edgelabel>iFreeChunks</edgelabel>
          <edgelabel>iTotalChunks</edgelabel>
        </childnode>
        <childnode refid="10272" relation="usage">
          <edgelabel>idFirstBlock</edgelabel>
          <edgelabel>idLastBlock</edgelabel>
        </childnode>
      </node>
      <node id="10272">
        <label>unsigned int</label>
      </node>
      <node id="10267">
        <label>unsigned char</label>
      </node>
      <node id="10264">
        <label>RDBTreeOperator</label>
        <link refid="d8/d3f/classRDBTreeOperator"/>
        <childnode refid="10265" relation="usage">
          <edgelabel>m_pStorage</edgelabel>
        </childnode>
        <childnode refid="10298" relation="usage">
          <edgelabel>m_iCurRoot</edgelabel>
        </childnode>
      </node>
      <node id="10275">
        <label>struct _red_black_node *</label>
      </node>
      <node id="10285">
        <label>RDB_ChunkType</label>
      </node>
      <node id="10281">
        <label>int</label>
      </node>
      <node id="10292">
        <label>RDB_LockType</label>
      </node>
      <node id="10298">
        <label>RDB_ChunkTable</label>
      </node>
      <node id="10282">
        <label>RDB_MasterHeader</label>
        <link refid="dd/d8c/structRDB__MasterHeader"/>
        <childnode refid="10267" relation="usage">
          <edgelabel>iMagic</edgelabel>
        </childnode>
        <childnode refid="10281" relation="usage">
          <edgelabel>iBlockGrowCount</edgelabel>
          <edgelabel>iThisSize</edgelabel>
          <edgelabel>iJournalSize</edgelabel>
          <edgelabel>arrChunksByBlock</edgelabel>
          <edgelabel>iBlockSize</edgelabel>
          <edgelabel>arrChunkSizes</edgelabel>
          <edgelabel>iBlockInitCount</edgelabel>
          <edgelabel>iVersion</edgelabel>
        </childnode>
        <childnode refid="10283" relation="usage">
          <edgelabel>dbStateData</edgelabel>
        </childnode>
      </node>
      <node id="10278">
        <label>TreeMapNode&lt; Key, T &gt;</label>
        <link refid="db/dd2/structTreeMapNode"/>
        <childnode refid="10279" relation="usage">
          <edgelabel>nodeKey</edgelabel>
        </childnode>
        <childnode refid="10277" relation="usage">
          <edgelabel>nodeItem</edgelabel>
        </childnode>
      </node>
      <node id="10284">
        <label>RDB_ChunkPtr</label>
        <link refid="d1/df5/structRDB__ChunkPtr"/>
        <childnode refid="10285" relation="usage">
          <edgelabel>iType</edgelabel>
        </childnode>
        <childnode refid="10272" relation="usage">
          <edgelabel>idChunk</edgelabel>
          <edgelabel>idBlock</edgelabel>
        </childnode>
      </node>
      <node id="10279">
        <label>Key</label>
      </node>
      <node id="10283">
        <label>RDB_StateData</label>
        <link refid="d8/d56/structRDB__StateData"/>
        <childnode refid="10284" relation="usage">
          <edgelabel>dbChunkTable</edgelabel>
        </childnode>
        <childnode refid="10286" relation="usage">
          <edgelabel>dbBlockAllocator</edgelabel>
        </childnode>
        <childnode refid="10272" relation="usage">
          <edgelabel>dbNextDirectoryID</edgelabel>
        </childnode>
        <childnode refid="10287" relation="usage">
          <edgelabel>dbChunkAllocator</edgelabel>
        </childnode>
      </node>
      <node id="10266">
        <label>SHA1Hasher</label>
        <link refid="db/d48/classSHA1Hasher"/>
        <childnode refid="10267" relation="usage">
          <edgelabel>m_arrMsgBuffer</edgelabel>
        </childnode>
        <childnode refid="10268" relation="usage">
          <edgelabel>m_arrBlok</edgelabel>
          <edgelabel>m_iMsgSize</edgelabel>
          <edgelabel>m_iBlokCount</edgelabel>
        </childnode>
      </node>
      <node id="10293">
        <label>bool</label>
      </node>
      <node id="10288">
        <label>SplayTree&lt; RDB_FilePtr &gt;</label>
        <link refid="d8/d50/classSplayTree"/>
        <childnode refid="10270" relation="public-inheritance">
        </childnode>
        <childnode refid="10281" relation="usage">
          <edgelabel>m_iNodeCount</edgelabel>
          <edgelabel>m_pfCompare</edgelabel>
        </childnode>
        <childnode refid="10289" relation="usage">
          <edgelabel>m_pRoot</edgelabel>
        </childnode>
        <childnode refid="10280" relation="usage">
          <edgelabel>m_pUserData</edgelabel>
        </childnode>
      </node>
      <node id="10271">
        <label>char</label>
      </node>
      <node id="10296">
        <label>DWord</label>
      </node>
      <node id="10280">
        <label>Void *</label>
      </node>
      <node id="10295">
        <label>MBChar</label>
      </node>
      <node id="10270">
        <label>Datastruct</label>
        <link refid="dc/d51/classDatastruct"/>
        <childnode refid="10271" relation="usage">
          <edgelabel>m_strAllocatorName</edgelabel>
        </childnode>
        <childnode refid="10272" relation="usage">
          <edgelabel>m_idMemoryContext</edgelabel>
        </childnode>
      </node>
      <node id="10290">
        <label>struct _splay_node *</label>
      </node>
    </collaborationgraph>
    <location file="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" line="57" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Engine/Resource/Database/RDBTreeOperator.h" bodystart="56" bodyend="138"/>
    <listofallmembers>
      <member refid="d8/d3f/classRDBTreeOperator_1a8111848e8f64fc6bfc69b2f2879cec12" prot="private" virt="non-virtual"><scope>RDBTreeOperator</scope><name>_BTree_BalanceLeft_Leaves</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1a447ac9dd2f65db019eacce1db6eecd91" prot="private" virt="non-virtual"><scope>RDBTreeOperator</scope><name>_BTree_BalanceLeft_Nodes</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1a383ba187b8b20c43567378bc9b461234" prot="private" virt="non-virtual"><scope>RDBTreeOperator</scope><name>_BTree_BalanceRight_Leaves</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1aafbe714666d7f1f4db9af57086e25ccc" prot="private" virt="non-virtual"><scope>RDBTreeOperator</scope><name>_BTree_BalanceRight_Nodes</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1ae13fb676ee9f55fa7fb5f74ad7f7494a" prot="private" virt="non-virtual"><scope>RDBTreeOperator</scope><name>_BTree_Compare</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1af7a32cf5b871ac3b2a79afd48fe6048b" prot="private" virt="non-virtual"><scope>RDBTreeOperator</scope><name>_BTree_Insert</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1a58b2bfb724a19298c204f175471b1186" prot="private" virt="non-virtual"><scope>RDBTreeOperator</scope><name>_BTree_InsertItem</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1ad71db4dad9075e962f51b264bd7c5cbf" prot="private" virt="non-virtual"><scope>RDBTreeOperator</scope><name>_BTree_InsertKey</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1adfcb129d85b70b7b93f9775a10607dcf" prot="private" virt="non-virtual"><scope>RDBTreeOperator</scope><name>_BTree_MergeLeaves</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1a0ac9db6c3283280e2afa9cef134f304a" prot="private" virt="non-virtual"><scope>RDBTreeOperator</scope><name>_BTree_MergeNodes</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1a90c17b4ec0a409fbf50ba341ba03e453" prot="private" virt="non-virtual"><scope>RDBTreeOperator</scope><name>_BTree_Remove</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1a4c104d6e5b7bfc825b471acccc67103e" prot="private" virt="non-virtual"><scope>RDBTreeOperator</scope><name>_BTree_RemoveItem</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1aecad6f3e8bb45ba29bd6f5b09426ab9f" prot="private" virt="non-virtual"><scope>RDBTreeOperator</scope><name>_BTree_RemoveKey</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1a7d4c2c240a5aac6c99ff9b4e1e47e07b" prot="private" virt="non-virtual"><scope>RDBTreeOperator</scope><name>_BTree_Search</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1a55bde4ca79f542c3bec0a01618d1c7c5" prot="private" virt="non-virtual"><scope>RDBTreeOperator</scope><name>_BTree_SearchItem</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1a921038da8a901573edc743791d4bae6f" prot="private" virt="non-virtual"><scope>RDBTreeOperator</scope><name>_BTree_SearchKey</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1a6ff97a1f8ba164db25b64e7ce4bfa024" prot="private" virt="non-virtual"><scope>RDBTreeOperator</scope><name>_BTree_SelectBrotherLeaf</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1a55ef6509f9139cdd0ec670ca8c8cd7ec" prot="private" virt="non-virtual"><scope>RDBTreeOperator</scope><name>_BTree_SelectBrotherNode</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1a262e396896bb8727e47974c17b6c5f3e" prot="private" virt="non-virtual"><scope>RDBTreeOperator</scope><name>_BTree_SplitLeaf</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1a8905c112dc83a50680adba35390c8331" prot="private" virt="non-virtual"><scope>RDBTreeOperator</scope><name>_BTree_SplitNode</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1ac4b1fa3be0bb13f6e4398600e591f82c" prot="public" virt="non-virtual"><scope>RDBTreeOperator</scope><name>InsertDirectory</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1a4b52d1faa27fb5040a91db7d28028df0" prot="public" virt="non-virtual"><scope>RDBTreeOperator</scope><name>InsertResource</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1ab6117a24d0c70094fa9ff6f26a5569d6" prot="public" virt="non-virtual"><scope>RDBTreeOperator</scope><name>ListResources</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1a53d8501ee4bbefbae0474dc2bc553450" prot="public" virt="non-virtual"><scope>RDBTreeOperator</scope><name>ListSubDirectories</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1a0c80d10281c072529445bf3d501432de" prot="private" virt="non-virtual"><scope>RDBTreeOperator</scope><name>m_iCurRoot</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1a7354dd403c96569955e146dd00507f9f" prot="private" virt="non-virtual"><scope>RDBTreeOperator</scope><name>m_pStorage</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1a15fa698aec9bb46c43849ca3000fb961" prot="public" virt="non-virtual"><scope>RDBTreeOperator</scope><name>RDBTreeOperator</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1ae4aea3d4b8feaec29711288202f2d2ab" prot="public" virt="non-virtual"><scope>RDBTreeOperator</scope><name>RemoveDirectory</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1a45bb72f15051bf87e1f9c4826a282122" prot="public" virt="non-virtual"><scope>RDBTreeOperator</scope><name>RemoveResource</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1a3f6d302cb9f58661b9abd2f3e7daffe8" prot="public" virt="non-virtual"><scope>RDBTreeOperator</scope><name>SearchDirectory</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1a966ce79b4be4da34480849478b95076f" prot="public" virt="non-virtual"><scope>RDBTreeOperator</scope><name>SearchResource</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1a5f9afe5cf0fc1a2a6cd33428fcf861f5" prot="public" virt="non-virtual"><scope>RDBTreeOperator</scope><name>UpdateResource</name></member>
      <member refid="d8/d3f/classRDBTreeOperator_1af0eac5a8287fb0c59f11f971553434cd" prot="public" virt="non-virtual"><scope>RDBTreeOperator</scope><name>~RDBTreeOperator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
