<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="d8/d50/classSplayTree" kind="class" prot="public">
    <compoundname>SplayTree</compoundname>
    <basecompoundref refid="dc/d51/classDatastruct" prot="public" virt="non-virtual">Datastruct</basecompoundref>
    <includes refid="d7/d5f/SplayTree_8h" local="no">SplayTree.h</includes>
    <innerclass refid="d0/d47/classSplayTree_1_1Iterator" prot="public">SplayTree::Iterator</innerclass>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d8/d50/classSplayTree_1aa0e36037535c03dc0e22cbc1d96ea595" prot="public" static="no">
        <type><ref refid="d9/dd0/Platform_8h_1a7cc214a236ad3bb6ad435bdcf5262a3f" kindref="member">Int</ref>(*</type>
        <definition>typedef Int(* Comparator)(const T &amp;rLeft, const T &amp;rRight, Void *pUserData)</definition>
        <argsstring>)(const T &amp;rLeft, const T &amp;rRight, Void *pUserData)</argsstring>
        <name>Comparator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="56" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d8/d50/classSplayTree_1a27d1e78c521dfa3bb17788c5ad7c8792" prot="private" static="no" mutable="no">
        <type><ref refid="d8/d50/classSplayTree_1aa0e36037535c03dc0e22cbc1d96ea595" kindref="member">Comparator</ref></type>
        <definition>Comparator m_pfCompare</definition>
        <argsstring></argsstring>
        <name>m_pfCompare</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="192" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d50/classSplayTree_1a91f0e9a4012edb773b7a59705e4e90a0" prot="private" static="no" mutable="no">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref> *</type>
        <definition>Void* m_pUserData</definition>
        <argsstring></argsstring>
        <name>m_pUserData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="193" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d50/classSplayTree_1a23a17f6bf3b4f3c796e3ca5429557a43" prot="private" static="no" mutable="no">
        <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
        <definition>UInt m_iNodeCount</definition>
        <argsstring></argsstring>
        <name>m_iNodeCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="195" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d50/classSplayTree_1a292dea1bb18ab88873138aa2862652a8" prot="private" static="no" mutable="no">
        <type><ref refid="d2/d4c/structSplayNode" kindref="compound">SplayNode</ref> *</type>
        <definition>SplayNode* m_pRoot</definition>
        <argsstring></argsstring>
        <name>m_pRoot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="196" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d8/d50/classSplayTree_1a127a476461f12d912a4b0dd1a517d525" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SplayTree</definition>
        <argsstring>()</argsstring>
        <name>SplayTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="140"/>
      </memberdef>
      <memberdef kind="function" id="d8/d50/classSplayTree_1a5f68d32656f8df038514d97fbbaeb7e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~SplayTree</definition>
        <argsstring>()</argsstring>
        <name>~SplayTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="141"/>
      </memberdef>
      <memberdef kind="function" id="d8/d50/classSplayTree_1af0882680fadfbb5788e66f0107535ee2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void SetComparator</definition>
        <argsstring>(Comparator pfCompare, Void *pUserData=NULL)</argsstring>
        <name>SetComparator</name>
        <param>
          <type><ref refid="d8/d50/classSplayTree_1aa0e36037535c03dc0e22cbc1d96ea595" kindref="member">Comparator</ref></type>
          <declname>pfCompare</declname>
        </param>
        <param>
          <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref> *</type>
          <declname>pUserData</declname>
          <defval><ref refid="d9/dd0/Platform_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="144"/>
      </memberdef>
      <memberdef kind="function" id="d8/d50/classSplayTree_1aab77352722e193be864ad3e317f0a967" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>virtual Void Create</definition>
        <argsstring>()</argsstring>
        <name>Create</name>
        <reimplements refid="dc/d51/classDatastruct_1a0609a196f6f3d0c6b77f63eb850c0ac7">Create</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="147"/>
      </memberdef>
      <memberdef kind="function" id="d8/d50/classSplayTree_1a04b98e1741147ccd8731588392091ac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>virtual Void Destroy</definition>
        <argsstring>()</argsstring>
        <name>Destroy</name>
        <reimplements refid="dc/d51/classDatastruct_1a5f87413a244467d525a1e593ff2c1c27">Destroy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="148"/>
      </memberdef>
      <memberdef kind="function" id="d8/d50/classSplayTree_1abe6db4496cfdd90f917f4ca76d4bdcb1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
        <definition>virtual UInt MemorySize</definition>
        <argsstring>() const </argsstring>
        <name>MemorySize</name>
        <reimplements refid="dc/d51/classDatastruct_1a9797d1e194be5ac1f59da06f4017ab52">MemorySize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="150"/>
      </memberdef>
      <memberdef kind="function" id="d8/d50/classSplayTree_1a0956cac53fbbd2baead454e29106a8cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1aba0996d26f7be2572973245b51852757" kindref="member">UInt</ref></type>
        <definition>virtual UInt Count</definition>
        <argsstring>() const </argsstring>
        <name>Count</name>
        <reimplements refid="dc/d51/classDatastruct_1a64d0429c6ea513aff9aed72a84ac5e07">Count</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="151"/>
      </memberdef>
      <memberdef kind="function" id="d8/d50/classSplayTree_1aa31f188be923c718868036f9486390ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>virtual Void Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <reimplements refid="dc/d51/classDatastruct_1a12a20256ada86a94610094792cbc6e2b">Clear</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="153"/>
      </memberdef>
      <memberdef kind="function" id="d8/d50/classSplayTree_1a20dc36ef2b63ac619a86ba91041952b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool Search</definition>
        <argsstring>(const T &amp;rItem, Iterator *outItem=NULL) const </argsstring>
        <name>Search</name>
        <param>
          <type>const T &amp;</type>
          <declname>rItem</declname>
        </param>
        <param>
          <type><ref refid="d0/d47/classSplayTree_1_1Iterator" kindref="compound">Iterator</ref> *</type>
          <declname>outItem</declname>
          <defval><ref refid="d9/dd0/Platform_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="159"/>
      </memberdef>
      <memberdef kind="function" id="d8/d50/classSplayTree_1a01cbdaf4a323ee39ab80499cab1c8732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool Insert</definition>
        <argsstring>(const T &amp;rItem, Iterator *outItem=NULL)</argsstring>
        <name>Insert</name>
        <param>
          <type>const T &amp;</type>
          <declname>rItem</declname>
        </param>
        <param>
          <type><ref refid="d0/d47/classSplayTree_1_1Iterator" kindref="compound">Iterator</ref> *</type>
          <declname>outItem</declname>
          <defval><ref refid="d9/dd0/Platform_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="164"/>
      </memberdef>
      <memberdef kind="function" id="d8/d50/classSplayTree_1a17d4f4ea41cf27e010faeb8dfe347fad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool Remove</definition>
        <argsstring>(const T &amp;rItem, T *outItem=NULL)</argsstring>
        <name>Remove</name>
        <param>
          <type>const T &amp;</type>
          <declname>rItem</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>outItem</declname>
          <defval><ref refid="d9/dd0/Platform_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="169"/>
      </memberdef>
      <memberdef kind="function" id="d8/d50/classSplayTree_1aa1dce3eb7a30c998d2f9dd37118be6e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool Raise</definition>
        <argsstring>(const T &amp;rItem)</argsstring>
        <name>Raise</name>
        <param>
          <type>const T &amp;</type>
          <declname>rItem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="172"/>
      </memberdef>
      <memberdef kind="function" id="d8/d50/classSplayTree_1a0783838fcfc3f12208ae3e8375d51974" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool Extract</definition>
        <argsstring>(T *outItem=NULL)</argsstring>
        <name>Extract</name>
        <param>
          <type>T *</type>
          <declname>outItem</declname>
          <defval><ref refid="d9/dd0/Platform_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="175"/>
      </memberdef>
      <memberdef kind="function" id="d8/d50/classSplayTree_1ab893ae3f0a02bb26ea0120e6c7d09a2b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d47/classSplayTree_1_1Iterator" kindref="compound">Iterator</ref></type>
        <definition>Iterator Begin</definition>
        <argsstring>() const </argsstring>
        <name>Begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="178"/>
      </memberdef>
      <memberdef kind="function" id="d8/d50/classSplayTree_1ae0f83c629acc7673b972d04d32c4b23d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d47/classSplayTree_1_1Iterator" kindref="compound">Iterator</ref></type>
        <definition>Iterator End</definition>
        <argsstring>() const </argsstring>
        <name>End</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="179"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d8/d50/classSplayTree_1a9ccb2ccb61d1b461944064dbfb95c59a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _DeleteAll</definition>
        <argsstring>(SplayNode *pNode)</argsstring>
        <name>_DeleteAll</name>
        <param>
          <type><ref refid="d2/d4c/structSplayNode" kindref="compound">SplayNode</ref> *</type>
          <declname>pNode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="183"/>
      </memberdef>
      <memberdef kind="function" id="d8/d50/classSplayTree_1a45ddb8a3a9a6a01e4f3762ac5d216a8d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _RotateOnce</definition>
        <argsstring>(SplayNode *pNode, SplayTreeChild rotDir)</argsstring>
        <name>_RotateOnce</name>
        <param>
          <type><ref refid="d2/d4c/structSplayNode" kindref="compound">SplayNode</ref> *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type><ref refid="d7/d5f/SplayTree_8h_1a7f1c3909ca50db87a7a3aadc3af66c41" kindref="member">SplayTreeChild</ref></type>
          <declname>rotDir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="184"/>
      </memberdef>
      <memberdef kind="function" id="d8/d50/classSplayTree_1ab5df3a3f5d081890d711958080b58aa1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref></type>
        <definition>Void _Splay</definition>
        <argsstring>(SplayNode *pNode)</argsstring>
        <name>_Splay</name>
        <param>
          <type><ref refid="d2/d4c/structSplayNode" kindref="compound">SplayNode</ref> *</type>
          <declname>pNode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="185"/>
      </memberdef>
      <memberdef kind="function" id="d8/d50/classSplayTree_1ac972bf11d79c9e7d20b9ea420a2a902b" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d4c/structSplayNode" kindref="compound">SplayNode</ref> *</type>
        <definition>SplayNode* _Enumerate_First</definition>
        <argsstring>(SplayTreeChild iEnumDir) const </argsstring>
        <name>_Enumerate_First</name>
        <param>
          <type><ref refid="d7/d5f/SplayTree_8h_1a7f1c3909ca50db87a7a3aadc3af66c41" kindref="member">SplayTreeChild</ref></type>
          <declname>iEnumDir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="188"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="d8/d50/classSplayTree_1aa0f6476f9ee267a5946dd80543a1ee2d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d4c/structSplayNode" kindref="compound">SplayNode</ref> *</type>
        <definition>static SplayNode* _Enumerate_Step</definition>
        <argsstring>(SplayNode *pNode, SplayTreeChild iEnumDir)</argsstring>
        <name>_Enumerate_Step</name>
        <param>
          <type><ref refid="d2/d4c/structSplayNode" kindref="compound">SplayNode</ref> *</type>
          <declname>pNode</declname>
        </param>
        <param>
          <type><ref refid="d7/d5f/SplayTree_8h_1a7f1c3909ca50db87a7a3aadc3af66c41" kindref="member">SplayTreeChild</ref></type>
          <declname>iEnumDir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="189"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="12067">
        <label>SplayTree&lt; T &gt;</label>
        <link refid="d8/d50/classSplayTree"/>
        <childnode refid="12068" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12068">
        <label>Datastruct</label>
        <link refid="dc/d51/classDatastruct"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="12076">
        <label>T</label>
      </node>
      <node id="12074">
        <label>SplayNode&lt; T &gt;</label>
        <link refid="d2/d4c/structSplayNode"/>
        <childnode refid="12075" relation="usage">
          <edgelabel>pParent</edgelabel>
          <edgelabel>pChild</edgelabel>
        </childnode>
        <childnode refid="12076" relation="usage">
          <edgelabel>Item</edgelabel>
        </childnode>
      </node>
      <node id="12072">
        <label>unsigned int</label>
      </node>
      <node id="12069">
        <label>SplayTree&lt; T &gt;</label>
        <link refid="d8/d50/classSplayTree"/>
        <childnode refid="12070" relation="public-inheritance">
        </childnode>
        <childnode refid="12073" relation="usage">
          <edgelabel>m_iNodeCount</edgelabel>
          <edgelabel>m_pfCompare</edgelabel>
        </childnode>
        <childnode refid="12074" relation="usage">
          <edgelabel>m_pRoot</edgelabel>
        </childnode>
        <childnode refid="12077" relation="usage">
          <edgelabel>m_pUserData</edgelabel>
        </childnode>
      </node>
      <node id="12073">
        <label>int</label>
      </node>
      <node id="12071">
        <label>char</label>
      </node>
      <node id="12077">
        <label>Void *</label>
      </node>
      <node id="12070">
        <label>Datastruct</label>
        <link refid="dc/d51/classDatastruct"/>
        <childnode refid="12071" relation="usage">
          <edgelabel>m_strAllocatorName</edgelabel>
        </childnode>
        <childnode refid="12072" relation="usage">
          <edgelabel>m_idMemoryContext</edgelabel>
        </childnode>
      </node>
      <node id="12075">
        <label>struct _splay_node *</label>
      </node>
    </collaborationgraph>
    <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" line="43" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/Tree/SplayTree.h" bodystart="42" bodyend="197"/>
    <listofallmembers>
      <member refid="d8/d50/classSplayTree_1a9ccb2ccb61d1b461944064dbfb95c59a" prot="private" virt="non-virtual"><scope>SplayTree</scope><name>_DeleteAll</name></member>
      <member refid="d8/d50/classSplayTree_1ac972bf11d79c9e7d20b9ea420a2a902b" prot="private" virt="non-virtual"><scope>SplayTree</scope><name>_Enumerate_First</name></member>
      <member refid="d8/d50/classSplayTree_1aa0f6476f9ee267a5946dd80543a1ee2d" prot="private" virt="non-virtual"><scope>SplayTree</scope><name>_Enumerate_Step</name></member>
      <member refid="d8/d50/classSplayTree_1a45ddb8a3a9a6a01e4f3762ac5d216a8d" prot="private" virt="non-virtual"><scope>SplayTree</scope><name>_RotateOnce</name></member>
      <member refid="dc/d51/classDatastruct_1a4208dfdad6dc1178ee1f80481598500c" prot="protected" virt="non-virtual"><scope>SplayTree</scope><name>_SelectMemory</name></member>
      <member refid="d8/d50/classSplayTree_1ab5df3a3f5d081890d711958080b58aa1" prot="private" virt="non-virtual"><scope>SplayTree</scope><name>_Splay</name></member>
      <member refid="dc/d51/classDatastruct_1ae0aad9bef0dc76ed43f8c4fc59a10d78" prot="protected" virt="non-virtual"><scope>SplayTree</scope><name>_UnSelectMemory</name></member>
      <member refid="d8/d50/classSplayTree_1ab893ae3f0a02bb26ea0120e6c7d09a2b" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>Begin</name></member>
      <member refid="d8/d50/classSplayTree_1aa31f188be923c718868036f9486390ea" prot="public" virt="virtual"><scope>SplayTree</scope><name>Clear</name></member>
      <member refid="d8/d50/classSplayTree_1aa0e36037535c03dc0e22cbc1d96ea595" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>Comparator</name></member>
      <member refid="d8/d50/classSplayTree_1a0956cac53fbbd2baead454e29106a8cd" prot="public" virt="virtual"><scope>SplayTree</scope><name>Count</name></member>
      <member refid="d8/d50/classSplayTree_1aab77352722e193be864ad3e317f0a967" prot="public" virt="virtual"><scope>SplayTree</scope><name>Create</name></member>
      <member refid="dc/d51/classDatastruct_1aebb55795e668a005cf660ce216962a2f" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>Datastruct</name></member>
      <member refid="d8/d50/classSplayTree_1a04b98e1741147ccd8731588392091ac0" prot="public" virt="virtual"><scope>SplayTree</scope><name>Destroy</name></member>
      <member refid="d8/d50/classSplayTree_1ae0f83c629acc7673b972d04d32c4b23d" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>End</name></member>
      <member refid="d8/d50/classSplayTree_1a0783838fcfc3f12208ae3e8375d51974" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>Extract</name></member>
      <member refid="d8/d50/classSplayTree_1a01cbdaf4a323ee39ab80499cab1c8732" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>Insert</name></member>
      <member refid="dc/d51/classDatastruct_1a4e2abc9751fdc8571b9d9a1d02639ebe" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>IsEmpty</name></member>
      <member refid="d8/d50/classSplayTree_1a23a17f6bf3b4f3c796e3ca5429557a43" prot="private" virt="non-virtual"><scope>SplayTree</scope><name>m_iNodeCount</name></member>
      <member refid="d8/d50/classSplayTree_1a27d1e78c521dfa3bb17788c5ad7c8792" prot="private" virt="non-virtual"><scope>SplayTree</scope><name>m_pfCompare</name></member>
      <member refid="d8/d50/classSplayTree_1a292dea1bb18ab88873138aa2862652a8" prot="private" virt="non-virtual"><scope>SplayTree</scope><name>m_pRoot</name></member>
      <member refid="d8/d50/classSplayTree_1a91f0e9a4012edb773b7a59705e4e90a0" prot="private" virt="non-virtual"><scope>SplayTree</scope><name>m_pUserData</name></member>
      <member refid="d8/d50/classSplayTree_1abe6db4496cfdd90f917f4ca76d4bdcb1" prot="public" virt="virtual"><scope>SplayTree</scope><name>MemorySize</name></member>
      <member refid="d8/d50/classSplayTree_1aa1dce3eb7a30c998d2f9dd37118be6e2" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>Raise</name></member>
      <member refid="d8/d50/classSplayTree_1a17d4f4ea41cf27e010faeb8dfe347fad" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>Remove</name></member>
      <member refid="d8/d50/classSplayTree_1a20dc36ef2b63ac619a86ba91041952b5" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>Search</name></member>
      <member refid="d8/d50/classSplayTree_1af0882680fadfbb5788e66f0107535ee2" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>SetComparator</name></member>
      <member refid="d8/d50/classSplayTree_1a127a476461f12d912a4b0dd1a517d525" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>SplayTree</name></member>
      <member refid="dc/d51/classDatastruct_1a605325d1c1fc3f3c761365595701f9c4" prot="public" virt="virtual"><scope>SplayTree</scope><name>UseMemoryContext</name></member>
      <member refid="dc/d51/classDatastruct_1a59e1e9769598d5606e0a335692f89c15" prot="public" virt="virtual"><scope>SplayTree</scope><name>~Datastruct</name></member>
      <member refid="d8/d50/classSplayTree_1a5f68d32656f8df038514d97fbbaeb7e5" prot="public" virt="virtual"><scope>SplayTree</scope><name>~SplayTree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
