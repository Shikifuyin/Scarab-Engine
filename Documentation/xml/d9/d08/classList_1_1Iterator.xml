<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="d9/d08/classList_1_1Iterator" kind="class" prot="public">
    <compoundname>List::Iterator</compoundname>
    <includes refid="de/d88/List_8h" local="no">List.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="d9/d08/classList_1_1Iterator_1a2d5428acf0936f1ff876d0b2f3bf2cb6" prot="public" static="yes" mutable="no">
        <type>const <ref refid="d9/d08/classList_1_1Iterator" kindref="compound">Iterator</ref></type>
        <definition>const Iterator Null</definition>
        <argsstring></argsstring>
        <name>Null</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" line="52" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="d9/d08/classList_1_1Iterator_1adfa51a0eca1eba953f68ca3f65cdaa05" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class List&lt; T &gt;</definition>
        <argsstring></argsstring>
        <name>List&lt; T &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" line="78" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d9/d08/classList_1_1Iterator_1ac14b354432e1128b1efc770c3154c322" prot="private" static="no" mutable="no">
        <type><ref refid="dd/d2d/structListNode" kindref="compound">ListNode</ref> *</type>
        <definition>ListNode* m_pNode</definition>
        <argsstring></argsstring>
        <name>m_pNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" line="81" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d9/d08/classList_1_1Iterator_1a1f703720e1f5d97a0386c2dfe803c763" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Iterator</definition>
        <argsstring>()</argsstring>
        <name>Iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" line="54" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="d9/d08/classList_1_1Iterator_1ac6c9774dcc929f78a245d176da79c48c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Iterator</definition>
        <argsstring>(const Iterator &amp;rhs)</argsstring>
        <name>Iterator</name>
        <param>
          <type>const <ref refid="d9/d08/classList_1_1Iterator" kindref="compound">Iterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" line="55" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="d9/d08/classList_1_1Iterator_1a844b82815a73859e781b4798eb82f221" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>~Iterator</definition>
        <argsstring>()</argsstring>
        <name>~Iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" line="56" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="d9/d08/classList_1_1Iterator_1a6b9b0f124982f4b308a638a23bc3150a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/d08/classList_1_1Iterator" kindref="compound">Iterator</ref> &amp;</type>
        <definition>Iterator&amp; operator=</definition>
        <argsstring>(const Iterator &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="d9/d08/classList_1_1Iterator" kindref="compound">Iterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" line="58" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="d9/d08/classList_1_1Iterator_1ae8bb92d338298457f9a8ecee702d6590" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool operator==</definition>
        <argsstring>(const Iterator &amp;rhs) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="d9/d08/classList_1_1Iterator" kindref="compound">Iterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" line="60" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="d9/d08/classList_1_1Iterator_1a76778c87a3fb3827050b13637115bdde" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool operator!=</definition>
        <argsstring>(const Iterator &amp;rhs) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="d9/d08/classList_1_1Iterator" kindref="compound">Iterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" line="61" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="d9/d08/classList_1_1Iterator_1aef12ef33726bc591f569f822c7b5ac41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/d08/classList_1_1Iterator" kindref="compound">Iterator</ref> &amp;</type>
        <definition>Iterator&amp; operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" line="63" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="d9/d08/classList_1_1Iterator_1a34e5ed23ddc31b7d8d4bfb5bfacbaab6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/d08/classList_1_1Iterator" kindref="compound">Iterator</ref> &amp;</type>
        <definition>Iterator&amp; operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" line="64" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="d9/d08/classList_1_1Iterator_1ac1702aedba13b4112b891b58dfd78eba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/d08/classList_1_1Iterator" kindref="compound">Iterator</ref></type>
        <definition>Iterator operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" line="66" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="d9/d08/classList_1_1Iterator_1a826422223993becdf7c1e60aea56e9c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/d08/classList_1_1Iterator" kindref="compound">Iterator</ref></type>
        <definition>Iterator operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" line="67" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="d9/d08/classList_1_1Iterator_1aaa5f66b72a7f1ffd0615d16a9e317321" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; GetData</definition>
        <argsstring>()</argsstring>
        <name>GetData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" line="69" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="d9/d08/classList_1_1Iterator_1af988e3a5fe52e72d9eb3f5ce9d08eeea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool IsNull</definition>
        <argsstring>() const </argsstring>
        <name>IsNull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" line="71" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="d9/d08/classList_1_1Iterator_1aea0cb0011a5e019a1b2d3cd3e4157f14" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool IsBegin</definition>
        <argsstring>() const </argsstring>
        <name>IsBegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" line="72" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="d9/d08/classList_1_1Iterator_1a693a421839168bf23211a4f74ec15ffd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/dd0/Platform_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">Bool</ref></type>
        <definition>Bool IsEnd</definition>
        <argsstring>() const </argsstring>
        <name>IsEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" line="73" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="d9/d08/classList_1_1Iterator_1acd2fd65c66b854013f5604f3cf4f63ad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/d08/classList_1_1Iterator" kindref="compound">Iterator</ref></type>
        <definition>Iterator Next</definition>
        <argsstring>() const </argsstring>
        <name>Next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" line="74" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="d9/d08/classList_1_1Iterator_1af0f2fea42c3ca7745d224cdd95234f05" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/d08/classList_1_1Iterator" kindref="compound">Iterator</ref></type>
        <definition>Iterator Previous</definition>
        <argsstring>() const </argsstring>
        <name>Previous</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" line="75" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" bodystart="75" bodyend="75"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d9/d08/classList_1_1Iterator_1af9c8737e592e1309b85fb9ed90885a2c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Iterator</definition>
        <argsstring>(ListNode *pNode)</argsstring>
        <name>Iterator</name>
        <param>
          <type><ref refid="dd/d2d/structListNode" kindref="compound">ListNode</ref> *</type>
          <declname>pNode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" line="79" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" bodystart="79" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5400">
        <label>T</label>
      </node>
      <node id="5398">
        <label>ListNode&lt; T &gt;</label>
        <link refid="dd/d2d/structListNode"/>
        <childnode refid="5399" relation="usage">
          <edgelabel>pPrev</edgelabel>
          <edgelabel>pNext</edgelabel>
        </childnode>
        <childnode refid="5400" relation="usage">
          <edgelabel>Item</edgelabel>
        </childnode>
      </node>
      <node id="5397">
        <label>List&lt; T &gt;::Iterator</label>
        <link refid="d9/d08/classList_1_1Iterator"/>
        <childnode refid="5397" relation="usage">
          <edgelabel>Null</edgelabel>
        </childnode>
        <childnode refid="5398" relation="usage">
          <edgelabel>m_pNode</edgelabel>
        </childnode>
      </node>
      <node id="5399">
        <label>struct _list_node *</label>
      </node>
    </collaborationgraph>
    <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" line="50" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Datastruct/List/List.h" bodystart="49" bodyend="82"/>
    <listofallmembers>
      <member refid="d9/d08/classList_1_1Iterator_1aaa5f66b72a7f1ffd0615d16a9e317321" prot="public" virt="non-virtual"><scope>List::Iterator</scope><name>GetData</name></member>
      <member refid="d9/d08/classList_1_1Iterator_1aea0cb0011a5e019a1b2d3cd3e4157f14" prot="public" virt="non-virtual"><scope>List::Iterator</scope><name>IsBegin</name></member>
      <member refid="d9/d08/classList_1_1Iterator_1a693a421839168bf23211a4f74ec15ffd" prot="public" virt="non-virtual"><scope>List::Iterator</scope><name>IsEnd</name></member>
      <member refid="d9/d08/classList_1_1Iterator_1af988e3a5fe52e72d9eb3f5ce9d08eeea" prot="public" virt="non-virtual"><scope>List::Iterator</scope><name>IsNull</name></member>
      <member refid="d9/d08/classList_1_1Iterator_1a1f703720e1f5d97a0386c2dfe803c763" prot="public" virt="non-virtual"><scope>List::Iterator</scope><name>Iterator</name></member>
      <member refid="d9/d08/classList_1_1Iterator_1ac6c9774dcc929f78a245d176da79c48c" prot="public" virt="non-virtual"><scope>List::Iterator</scope><name>Iterator</name></member>
      <member refid="d9/d08/classList_1_1Iterator_1af9c8737e592e1309b85fb9ed90885a2c" prot="private" virt="non-virtual"><scope>List::Iterator</scope><name>Iterator</name></member>
      <member refid="d9/d08/classList_1_1Iterator_1adfa51a0eca1eba953f68ca3f65cdaa05" prot="private" virt="non-virtual"><scope>List::Iterator</scope><name>List&lt; T &gt;</name></member>
      <member refid="d9/d08/classList_1_1Iterator_1ac14b354432e1128b1efc770c3154c322" prot="private" virt="non-virtual"><scope>List::Iterator</scope><name>m_pNode</name></member>
      <member refid="d9/d08/classList_1_1Iterator_1acd2fd65c66b854013f5604f3cf4f63ad" prot="public" virt="non-virtual"><scope>List::Iterator</scope><name>Next</name></member>
      <member refid="d9/d08/classList_1_1Iterator_1a2d5428acf0936f1ff876d0b2f3bf2cb6" prot="public" virt="non-virtual"><scope>List::Iterator</scope><name>Null</name></member>
      <member refid="d9/d08/classList_1_1Iterator_1a76778c87a3fb3827050b13637115bdde" prot="public" virt="non-virtual"><scope>List::Iterator</scope><name>operator!=</name></member>
      <member refid="d9/d08/classList_1_1Iterator_1aef12ef33726bc591f569f822c7b5ac41" prot="public" virt="non-virtual"><scope>List::Iterator</scope><name>operator++</name></member>
      <member refid="d9/d08/classList_1_1Iterator_1ac1702aedba13b4112b891b58dfd78eba" prot="public" virt="non-virtual"><scope>List::Iterator</scope><name>operator++</name></member>
      <member refid="d9/d08/classList_1_1Iterator_1a34e5ed23ddc31b7d8d4bfb5bfacbaab6" prot="public" virt="non-virtual"><scope>List::Iterator</scope><name>operator--</name></member>
      <member refid="d9/d08/classList_1_1Iterator_1a826422223993becdf7c1e60aea56e9c0" prot="public" virt="non-virtual"><scope>List::Iterator</scope><name>operator--</name></member>
      <member refid="d9/d08/classList_1_1Iterator_1a6b9b0f124982f4b308a638a23bc3150a" prot="public" virt="non-virtual"><scope>List::Iterator</scope><name>operator=</name></member>
      <member refid="d9/d08/classList_1_1Iterator_1ae8bb92d338298457f9a8ecee702d6590" prot="public" virt="non-virtual"><scope>List::Iterator</scope><name>operator==</name></member>
      <member refid="d9/d08/classList_1_1Iterator_1af0f2fea42c3ca7745d224cdd95234f05" prot="public" virt="non-virtual"><scope>List::Iterator</scope><name>Previous</name></member>
      <member refid="d9/d08/classList_1_1Iterator_1a844b82815a73859e781b4798eb82f221" prot="public" virt="non-virtual"><scope>List::Iterator</scope><name>~Iterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
