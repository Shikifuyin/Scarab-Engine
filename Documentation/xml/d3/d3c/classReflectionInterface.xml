<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="d3/d3c/classReflectionInterface" kind="class" prot="public">
    <compoundname>ReflectionInterface</compoundname>
    <includes refid="d6/d2f/Reflect_8h" local="no">Reflect.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d3/d3c/classReflectionInterface_1acd33cabf9460984e027ec20f2e7e10c3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d3/d3c/classReflectionInterface" kindref="compound">ReflectionInterface</ref> *</type>
        <definition>static ReflectionInterface* GetInstancePtr</definition>
        <argsstring>()</argsstring>
        <name>GetInstancePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Object/Reflection/Reflect.h" line="63"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d3/d3c/classReflectionInterface_1a8581c3ef19908f91638e02f335ffbdcf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ReflectionInterface</definition>
        <argsstring>()</argsstring>
        <name>ReflectionInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Object/Reflection/Reflect.h" line="66"/>
      </memberdef>
      <memberdef kind="function" id="d3/d3c/classReflectionInterface_1afcd3960e3adaa1a82f95e4e65a82e657" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~ReflectionInterface</definition>
        <argsstring>()</argsstring>
        <name>~ReflectionInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Object/Reflection/Reflect.h" line="67"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d3/d3c/classReflectionInterface_1a12aadaf5fe36c24a50430b1ea3c633e6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="d6/d2f/Reflect_8h_1aa3ccc63f83c0a2c54116a04ed669c5af" kindref="member">Type</ref> *</type>
        <definition>Type* GetType</definition>
        <argsstring>() const </argsstring>
        <name>GetType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Object/Reflection/Reflect.h" line="72"/>
      </memberdef>
      <memberdef kind="function" id="d3/d3c/classReflectionInterface_1a9dc43e171b1e4447a537c5787b376ea1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="d6/d2f/Reflect_8h_1aa3ccc63f83c0a2c54116a04ed669c5af" kindref="member">Type</ref> *</type>
        <definition>Type* GetType</definition>
        <argsstring>(const T *pObject) const </argsstring>
        <name>GetType</name>
        <param>
          <type>const T *</type>
          <declname>pObject</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Object/Reflection/Reflect.h" line="74"/>
      </memberdef>
      <memberdef kind="function" id="d3/d3c/classReflectionInterface_1ab885c1f2665a1ed91b0f8dcb0ca9d576" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="d6/d2f/Reflect_8h_1aa3ccc63f83c0a2c54116a04ed669c5af" kindref="member">Type</ref> *</type>
        <definition>Type* GetType</definition>
        <argsstring>(const T &amp;rObject) const </argsstring>
        <name>GetType</name>
        <param>
          <type>const T &amp;</type>
          <declname>rObject</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Object/Reflection/Reflect.h" line="76"/>
      </memberdef>
      <memberdef kind="function" id="d3/d3c/classReflectionInterface_1a6b3fdc936f6eac8ec8d1bb68db527acf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d6/d2f/Reflect_8h_1aa3ccc63f83c0a2c54116a04ed669c5af" kindref="member">Type</ref> *</type>
        <definition>Type* GetType</definition>
        <argsstring>(const GChar *strName) const </argsstring>
        <name>GetType</name>
        <param>
          <type>const <ref refid="d9/dd0/Platform_8h_1a178c928e74b49565d9ce41c8d9bb85f6" kindref="member">GChar</ref> *</type>
          <declname>strName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Object/Reflection/Reflect.h" line="78"/>
      </memberdef>
      <memberdef kind="function" id="d3/d3c/classReflectionInterface_1a128e055d893dbd3a30dbd79db41351e9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TO</type>
          </param>
          <param>
            <type>typename FROM</type>
          </param>
        </templateparamlist>
        <type>TO *</type>
        <definition>TO* Cast</definition>
        <argsstring>(FROM *pObject) const </argsstring>
        <name>Cast</name>
        <param>
          <type>FROM *</type>
          <declname>pObject</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Object/Reflection/Reflect.h" line="82"/>
      </memberdef>
      <memberdef kind="function" id="d3/d3c/classReflectionInterface_1a1b21f1ae5b280241713dd934b0ea002b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TO</type>
          </param>
          <param>
            <type>typename FROM</type>
          </param>
        </templateparamlist>
        <type>TO &amp;</type>
        <definition>TO&amp; Cast</definition>
        <argsstring>(FROM &amp;rObject) const </argsstring>
        <name>Cast</name>
        <param>
          <type>FROM &amp;</type>
          <declname>rObject</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Object/Reflection/Reflect.h" line="84"/>
      </memberdef>
      <memberdef kind="function" id="d3/d3c/classReflectionInterface_1abcdb5ac1026caeb2b80b005687d1704d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FROM</type>
          </param>
        </templateparamlist>
        <type><ref refid="d9/dd0/Platform_8h_1afdf0f22c576e6ee1b982f64b839c4bea" kindref="member">Void</ref> *</type>
        <definition>Void* Cast</definition>
        <argsstring>(const Type *pTarget, FROM *pObject) const </argsstring>
        <name>Cast</name>
        <param>
          <type>const <ref refid="d6/d2f/Reflect_8h_1aa3ccc63f83c0a2c54116a04ed669c5af" kindref="member">Type</ref> *</type>
          <declname>pTarget</declname>
        </param>
        <param>
          <type>FROM *</type>
          <declname>pObject</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Object/Reflection/Reflect.h" line="87"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Programming/_Projects/Scarab Engine/Source/Lib/Object/Reflection/Reflect.h" line="60" bodyfile="D:/Programming/_Projects/Scarab Engine/Source/Lib/Object/Reflection/Reflect.h" bodystart="59" bodyend="91"/>
    <listofallmembers>
      <member refid="d3/d3c/classReflectionInterface_1a128e055d893dbd3a30dbd79db41351e9" prot="public" virt="non-virtual"><scope>ReflectionInterface</scope><name>Cast</name></member>
      <member refid="d3/d3c/classReflectionInterface_1a1b21f1ae5b280241713dd934b0ea002b" prot="public" virt="non-virtual"><scope>ReflectionInterface</scope><name>Cast</name></member>
      <member refid="d3/d3c/classReflectionInterface_1abcdb5ac1026caeb2b80b005687d1704d" prot="public" virt="non-virtual"><scope>ReflectionInterface</scope><name>Cast</name></member>
      <member refid="d3/d3c/classReflectionInterface_1acd33cabf9460984e027ec20f2e7e10c3" prot="public" virt="non-virtual"><scope>ReflectionInterface</scope><name>GetInstancePtr</name></member>
      <member refid="d3/d3c/classReflectionInterface_1a12aadaf5fe36c24a50430b1ea3c633e6" prot="public" virt="non-virtual"><scope>ReflectionInterface</scope><name>GetType</name></member>
      <member refid="d3/d3c/classReflectionInterface_1a9dc43e171b1e4447a537c5787b376ea1" prot="public" virt="non-virtual"><scope>ReflectionInterface</scope><name>GetType</name></member>
      <member refid="d3/d3c/classReflectionInterface_1ab885c1f2665a1ed91b0f8dcb0ca9d576" prot="public" virt="non-virtual"><scope>ReflectionInterface</scope><name>GetType</name></member>
      <member refid="d3/d3c/classReflectionInterface_1a6b3fdc936f6eac8ec8d1bb68db527acf" prot="public" virt="non-virtual"><scope>ReflectionInterface</scope><name>GetType</name></member>
      <member refid="d3/d3c/classReflectionInterface_1a8581c3ef19908f91638e02f335ffbdcf" prot="private" virt="non-virtual"><scope>ReflectionInterface</scope><name>ReflectionInterface</name></member>
      <member refid="d3/d3c/classReflectionInterface_1afcd3960e3adaa1a82f95e4e65a82e657" prot="private" virt="non-virtual"><scope>ReflectionInterface</scope><name>~ReflectionInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
